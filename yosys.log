
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+4081 (git sha1 261383d, clang 12.0.0-1ubuntu1 -fPIC -Os)


-- Parsing `top.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: top.v
Parsing Verilog input from `top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `ice40up5k_spram.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: ice40up5k_spram.v
Parsing Verilog input from `ice40up5k_spram.v' to AST representation.
Generating RTLIL representation for module `\ice40up5k_spram'.
Successfully finished Verilog frontend.

-- Parsing `spimemio.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: spimemio.v
Parsing Verilog input from `spimemio.v' to AST representation.
Generating RTLIL representation for module `\spimemio'.
Generating RTLIL representation for module `\spimemio_xfer'.
Successfully finished Verilog frontend.

-- Parsing `simpleuart.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: simpleuart.v
Parsing Verilog input from `simpleuart.v' to AST representation.
Generating RTLIL representation for module `\simpleuart'.
Successfully finished Verilog frontend.

-- Parsing `picosoc.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: picosoc.v
Parsing Verilog input from `picosoc.v' to AST representation.
Generating RTLIL representation for module `\picosoc'.
Generating RTLIL representation for module `\picosoc_regs'.
Generating RTLIL representation for module `\picosoc_mem'.
Successfully finished Verilog frontend.

-- Parsing `picorv32.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: picorv32.v
Parsing Verilog input from `picorv32.v' to AST representation.
Generating RTLIL representation for module `\picorv32'.
Generating RTLIL representation for module `\picorv32_regs'.
Generating RTLIL representation for module `\picorv32_pcpi_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_fast_mul'.
Generating RTLIL representation for module `\picorv32_pcpi_div'.
Generating RTLIL representation for module `\picorv32_axi'.
Generating RTLIL representation for module `\picorv32_axi_adapter'.
Generating RTLIL representation for module `\picorv32_wb'.
Successfully finished Verilog frontend.

-- Parsing `display.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: display.v
Parsing Verilog input from `display.v' to AST representation.
Generating RTLIL representation for module `\display'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json hardware.json' --

8. Executing SYNTH_ICE40 pass.

8.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

8.2. Executing HIERARCHY pass (managing design hierarchy).

8.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \picosoc
Used module:         \ice40up5k_spram
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \display
Parameter \BARREL_SHIFTER = 0
Parameter \ENABLE_MULDIV = 0
Parameter \MEM_WORDS = 2048

8.2.2. Executing AST frontend in derive mode using pre-parsed AST for module `\picosoc'.
Parameter \BARREL_SHIFTER = 0
Parameter \ENABLE_MULDIV = 0
Parameter \MEM_WORDS = 2048
Generating RTLIL representation for module `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc'.
Parameter \WORDS = 256

8.2.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 256
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=s32'00000000000000000000000100000000'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'1
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'1
Parameter \ENABLE_DIV = 1'1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024

8.2.4. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'1
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'1
Parameter \ENABLE_DIV = 1'1
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 1024
Generating RTLIL representation for module `$paramod$527c9d00ba3310d87362d16a07df900097d2c2dd\picorv32'.

8.2.5. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:         \ice40up5k_spram
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         \picorv32
Used module:             \picosoc_regs
Used module:     \display
Parameter \WORDS = 2048

8.2.6. Executing AST frontend in derive mode using pre-parsed AST for module `\ice40up5k_spram'.
Parameter \WORDS = 2048
Generating RTLIL representation for module `$paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'0
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'0
Parameter \ENABLE_DIV = 1'0
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 8192

8.2.7. Executing AST frontend in derive mode using pre-parsed AST for module `\picorv32'.
Parameter \ENABLE_COUNTERS = 1'1
Parameter \BARREL_SHIFTER = 1'0
Parameter \COMPRESSED_ISA = 1'1
Parameter \ENABLE_MUL = 1'0
Parameter \ENABLE_DIV = 1'0
Parameter \ENABLE_IRQ = 1
Parameter \ENABLE_IRQ_QREGS = 1'0
Parameter \PROGADDR_RESET = 1048576
Parameter \PROGADDR_IRQ = 0
Parameter \STACKADDR = 8192
Generating RTLIL representation for module `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32'.

8.2.8. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:         $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32
Used module:             \picosoc_regs
Used module:     \display

8.2.9. Analyzing design hierarchy..
Top module:  \top
Used module:     $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc
Used module:         $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000
Used module:         \simpleuart
Used module:         \spimemio
Used module:             \spimemio_xfer
Used module:         $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32
Used module:             \picosoc_regs
Used module:     \display
Removing unused module `$paramod$527c9d00ba3310d87362d16a07df900097d2c2dd\picorv32'.
Removing unused module `$paramod\ice40up5k_spram\WORDS=s32'00000000000000000000000100000000'.
Removing unused module `\picorv32_wb'.
Removing unused module `\picorv32_axi_adapter'.
Removing unused module `\picorv32_axi'.
Removing unused module `\picorv32_pcpi_div'.
Removing unused module `\picorv32_pcpi_fast_mul'.
Removing unused module `\picorv32_pcpi_mul'.
Removing unused module `\picorv32_regs'.
Removing unused module `\picorv32'.
Removing unused module `\picosoc_mem'.
Removing unused module `\picosoc'.
Removing unused module `\ice40up5k_spram'.
Removed 13 unused modules.
Warning: Resizing cell port top.display.four_hex_in from 32 bits to 16 bits.

8.3. Executing PROC pass (convert processes to netlists).

8.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 16 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
Found and cleaned up 1 empty switch in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$2697'.
Found and cleaned up 6 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:546$2343'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:546$2343'.
Cleaned up 23 empty switches.

8.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$1341 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$1334 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$1330 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$1323 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$1320 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$1317 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$1314 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$1311 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$1303 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$1296 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$1292 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$1285 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$1282 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$1279 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$1276 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$1273 in module SB_DFFSR.
Removed 3 dead cases from process $proc$display.v:112$1097 in module display.
Marked 4 switch rules as full_case in process $proc$display.v:112$1097 in module display.
Removed 1 dead cases from process $proc$display.v:98$1096 in module display.
Marked 1 switch rules as full_case in process $proc$display.v:98$1096 in module display.
Marked 1 switch rules as full_case in process $proc$display.v:85$1093 in module display.
Marked 1 switch rules as full_case in process $proc$display.v:51$1089 in module display.
Marked 37 switch rules as full_case in process $proc$picorv32.v:1397$2711 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1304$2683 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:1290$2678 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 8 switch rules as full_case in process $proc$picorv32.v:1181$2643 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:856$2383 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 3 switch rules as full_case in process $proc$picorv32.v:807$2381 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:776$2377 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 47 switch rules as full_case in process $proc$picorv32.v:700$2376 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 4 switch rules as full_case in process $proc$picorv32.v:565$2352 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:430$2314 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Removed 2 dead cases from process $proc$picorv32.v:401$2311 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 2 switch rules as full_case in process $proc$picorv32.v:401$2311 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:390$2306 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picorv32.v:325$2232 in module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Marked 1 switch rules as full_case in process $proc$picosoc.v:233$207 in module picosoc_regs.
Marked 3 switch rules as full_case in process $proc$simpleuart.v:109$152 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$simpleuart.v:66$143 in module simpleuart.
Marked 1 switch rules as full_case in process $proc$simpleuart.v:55$141 in module simpleuart.
Marked 2 switch rules as full_case in process $proc$spimemio.v:535$121 in module spimemio_xfer.
Marked 5 switch rules as full_case in process $proc$spimemio.v:447$97 in module spimemio_xfer.
Marked 3 switch rules as full_case in process $proc$spimemio.v:207$67 in module spimemio.
Marked 1 switch rules as full_case in process $proc$spimemio.v:99$45 in module spimemio.
Marked 1 switch rules as full_case in process $proc$top.v:129$19 in module top.
Removed a total of 6 dead cases.

8.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 15 redundant assignments.
Promoted 120 assignments to connections.

8.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1344'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1340'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1333'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1329'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1322'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1319'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1316'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1313'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1310'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1308'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1306'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1302'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1295'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1291'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1284'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1281'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1278'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1275'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1272'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1270'.
  Set init value: \Q = 1'0
Found init rule in `\display.$proc$display.v:0$1100'.
  Set init value: \refresh_timer_state = 24'000000000000111100000000
  Set init value: \refresh_tick = 1'1
Found init rule in `\display.$proc$display.v:67$1099'.
  Set init value: \dd = 2'11
Found init rule in `\display.$proc$display.v:0$1098'.
  Set init value: \second_toggle = 1'1
  Set init value: \second_timer_state = 24'101101110001101011111111
Found init rule in `\top.$proc$top.v:63$29'.
  Set init value: \reset_cnt = 6'000000

8.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$1341'.
Found async reset \R in `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$1330'.
Found async reset \S in `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$1320'.
Found async reset \R in `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$1314'.
Found async reset \S in `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$1303'.
Found async reset \R in `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$1292'.
Found async reset \S in `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$1282'.
Found async reset \R in `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$1276'.

8.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1344'.
Creating decoders for process `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$1341'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1340'.
Creating decoders for process `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$1334'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1333'.
Creating decoders for process `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$1330'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1329'.
Creating decoders for process `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$1323'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1322'.
Creating decoders for process `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$1320'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1319'.
Creating decoders for process `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$1317'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1316'.
Creating decoders for process `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$1314'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1313'.
Creating decoders for process `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$1311'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1310'.
Creating decoders for process `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$1309'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1308'.
Creating decoders for process `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:846$1307'.
Creating decoders for process `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1306'.
Creating decoders for process `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$1303'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1302'.
Creating decoders for process `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$1296'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1295'.
Creating decoders for process `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$1292'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1291'.
Creating decoders for process `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$1285'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1284'.
Creating decoders for process `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$1282'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1281'.
Creating decoders for process `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$1279'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1278'.
Creating decoders for process `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$1276'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1275'.
Creating decoders for process `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$1273'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1272'.
Creating decoders for process `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$1271'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1270'.
Creating decoders for process `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:269$1269'.
Creating decoders for process `\display.$proc$display.v:0$1100'.
Creating decoders for process `\display.$proc$display.v:67$1099'.
Creating decoders for process `\display.$proc$display.v:0$1098'.
Creating decoders for process `\display.$proc$display.v:112$1097'.
     1/4: $1\seg[6:0]
     2/4: $1\hex_to_display[3:0]
     3/4: $1\dec[0:0]
     4/4: $1\comm[3:0]
Creating decoders for process `\display.$proc$display.v:98$1096'.
     1/1: $1\dd[1:0]
Creating decoders for process `\display.$proc$display.v:85$1093'.
     1/2: $1\refresh_tick[0:0]
     2/2: $1\refresh_timer_state[23:0]
Creating decoders for process `\display.$proc$display.v:51$1089'.
     1/2: $1\second_toggle[0:0]
     2/2: $1\second_timer_state[23:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
     1/82: $20\next_irq_pending[2:2]
     2/82: $19\next_irq_pending[2:2]
     3/82: $18\next_irq_pending[2:2]
     4/82: $17\next_irq_pending[2:2]
     5/82: $16\next_irq_pending[2:2]
     6/82: $15\next_irq_pending[2:2]
     7/82: $14\next_irq_pending[2:2]
     8/82: $13\next_irq_pending[0:0]
     9/82: $12\next_irq_pending[0:0]
    10/82: $11\next_irq_pending[31:0] [0]
    11/82: $11\next_irq_pending[31:0] [31:1]
    12/82: $2\next_irq_pending[31:0] [31:2]
    13/82: $3\set_mem_do_rdata[0:0]
    14/82: $2\next_irq_pending[31:0] [1]
    15/82: $3\set_mem_do_wdata[0:0]
    16/82: $2\next_irq_pending[31:0] [0]
    17/82: $4\set_mem_do_rinst[0:0]
    18/82: $3\set_mem_do_rinst[0:0]
    19/82: $4\set_mem_do_wdata[0:0]
    20/82: $9\next_irq_pending[1:1]
    21/82: $8\next_irq_pending[1:1]
    22/82: $7\next_irq_pending[1:1]
    23/82: $4\set_mem_do_rdata[0:0]
    24/82: $5\next_irq_pending[1:1]
    25/82: $4\next_irq_pending[1:1]
    26/82: $10\next_irq_pending[1:1]
    27/82: $5\set_mem_do_rinst[0:0]
    28/82: $6\next_irq_pending[1:1]
    29/82: $3\next_irq_pending[31:0]
    30/82: $3\current_pc[31:0]
    31/82: $2\current_pc[31:0]
    32/82: $2\set_mem_do_wdata[0:0]
    33/82: $2\set_mem_do_rdata[0:0]
    34/82: $2\set_mem_do_rinst[0:0]
    35/82: $1\next_irq_pending[31:0]
    36/82: $1\current_pc[31:0]
    37/82: $1\set_mem_do_wdata[0:0]
    38/82: $1\set_mem_do_rdata[0:0]
    39/82: $1\set_mem_do_rinst[0:0]
    40/82: $0\trace_data[35:0]
    41/82: $0\count_cycle[63:0]
    42/82: $0\trace_valid[0:0]
    43/82: $0\do_waitirq[0:0]
    44/82: $0\decoder_pseudo_trigger[0:0]
    45/82: $0\decoder_trigger[0:0]
    46/82: $0\alu_wait_2[0:0]
    47/82: $0\alu_wait[0:0]
    48/82: $0\reg_out[31:0]
    49/82: $0\reg_sh[4:0]
    50/82: $0\trap[0:0]
    51/82: $0\pcpi_timeout[0:0]
    52/82: $0\latched_rd[4:0]
    53/82: $0\latched_is_lb[0:0]
    54/82: $0\latched_is_lh[0:0]
    55/82: $0\latched_is_lu[0:0]
    56/82: $0\latched_trace[0:0]
    57/82: $0\latched_compr[0:0]
    58/82: $0\latched_branch[0:0]
    59/82: $0\latched_stalu[0:0]
    60/82: $0\latched_store[0:0]
    61/82: $0\irq_state[1:0]
    62/82: $0\cpu_state[7:0]
    63/82: $0\dbg_rs2val_valid[0:0]
    64/82: $0\dbg_rs1val_valid[0:0]
    65/82: $0\dbg_rs2val[31:0]
    66/82: $0\dbg_rs1val[31:0]
    67/82: $0\mem_do_wdata[0:0]
    68/82: $0\mem_do_rdata[0:0]
    69/82: $0\mem_do_rinst[0:0]
    70/82: $0\mem_do_prefetch[0:0]
    71/82: $0\mem_wordsize[1:0]
    72/82: $0\timer[31:0]
    73/82: $0\irq_mask[31:0]
    74/82: $0\irq_active[0:0]
    75/82: $0\irq_delay[0:0]
    76/82: $0\reg_op2[31:0]
    77/82: $0\reg_op1[31:0]
    78/82: $0\reg_next_pc[31:0]
    79/82: $0\reg_pc[31:0]
    80/82: $0\count_instr[63:0]
    81/82: $0\eoi[31:0]
    82/82: $0\pcpi_valid[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$2697'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$2683'.
     1/4: $2\cpuregs_write[0:0]
     2/4: $2\cpuregs_wrdata[31:0]
     3/4: $1\cpuregs_wrdata[31:0]
     4/4: $1\cpuregs_write[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$2678'.
     1/2: $2\clear_prefetched_high_word[0:0]
     2/2: $1\clear_prefetched_high_word[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1288$2677'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$2655'.
     1/2: $1\alu_out[31:0]
     2/2: $1\alu_out_0[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$2643'.
     1/8: $8\dbg_ascii_state[127:0]
     2/8: $7\dbg_ascii_state[127:0]
     3/8: $6\dbg_ascii_state[127:0]
     4/8: $5\dbg_ascii_state[127:0]
     5/8: $4\dbg_ascii_state[127:0]
     6/8: $3\dbg_ascii_state[127:0]
     7/8: $2\dbg_ascii_state[127:0]
     8/8: $1\dbg_ascii_state[127:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
     1/76: $0\decoded_rs1[4:0] [4]
     2/76: $0\decoded_imm_j[31:0] [10]
     3/76: $0\decoded_imm_j[31:0] [7]
     4/76: $0\decoded_imm_j[31:0] [6]
     5/76: $0\decoded_imm_j[31:0] [3:1]
     6/76: $0\decoded_imm_j[31:0] [5]
     7/76: $0\decoded_imm_j[31:0] [9:8]
     8/76: $0\decoded_imm_j[31:0] [31:20]
     9/76: $0\decoded_imm_j[31:0] [4]
    10/76: $0\decoded_imm_j[31:0] [11]
    11/76: $0\decoded_imm_j[31:0] [0]
    12/76: $0\decoded_rs1[4:0] [3:0]
    13/76: $0\is_lui_auipc_jal_jalr_addi_add_sub[0:0]
    14/76: $0\is_alu_reg_reg[0:0]
    15/76: $0\is_alu_reg_imm[0:0]
    16/76: $0\is_beq_bne_blt_bge_bltu_bgeu[0:0]
    17/76: $0\is_sll_srl_sra[0:0]
    18/76: $0\is_sb_sh_sw[0:0]
    19/76: $0\is_jalr_addi_slti_sltiu_xori_ori_andi[0:0]
    20/76: $0\is_slli_srli_srai[0:0]
    21/76: $0\is_lb_lh_lw_lbu_lhu[0:0]
    22/76: $0\compressed_instr[0:0]
    23/76: $0\is_compare[0:0]
    24/76: $0\decoded_imm[31:0]
    25/76: $0\decoded_rs2[4:0]
    26/76: $0\decoded_imm_j[31:0] [19:12]
    27/76: $0\decoded_rd[4:0]
    28/76: $0\instr_timer[0:0]
    29/76: $0\instr_waitirq[0:0]
    30/76: $0\instr_maskirq[0:0]
    31/76: $0\instr_retirq[0:0]
    32/76: $0\instr_setq[0:0]
    33/76: $0\instr_getq[0:0]
    34/76: $0\instr_ecall_ebreak[0:0]
    35/76: $0\instr_rdinstrh[0:0]
    36/76: $0\instr_rdinstr[0:0]
    37/76: $0\instr_rdcycleh[0:0]
    38/76: $0\instr_rdcycle[0:0]
    39/76: $0\instr_and[0:0]
    40/76: $0\instr_or[0:0]
    41/76: $0\instr_sra[0:0]
    42/76: $0\instr_srl[0:0]
    43/76: $0\instr_xor[0:0]
    44/76: $0\instr_sltu[0:0]
    45/76: $0\instr_slt[0:0]
    46/76: $0\instr_sll[0:0]
    47/76: $0\instr_sub[0:0]
    48/76: $0\instr_add[0:0]
    49/76: $0\instr_srai[0:0]
    50/76: $0\instr_srli[0:0]
    51/76: $0\instr_slli[0:0]
    52/76: $0\instr_andi[0:0]
    53/76: $0\instr_ori[0:0]
    54/76: $0\instr_xori[0:0]
    55/76: $0\instr_sltiu[0:0]
    56/76: $0\instr_slti[0:0]
    57/76: $0\instr_addi[0:0]
    58/76: $0\instr_sw[0:0]
    59/76: $0\instr_sh[0:0]
    60/76: $0\instr_sb[0:0]
    61/76: $0\instr_lhu[0:0]
    62/76: $0\instr_lbu[0:0]
    63/76: $0\instr_lw[0:0]
    64/76: $0\instr_lh[0:0]
    65/76: $0\instr_lb[0:0]
    66/76: $0\instr_bgeu[0:0]
    67/76: $0\instr_bltu[0:0]
    68/76: $0\instr_bge[0:0]
    69/76: $0\instr_blt[0:0]
    70/76: $0\instr_bne[0:0]
    71/76: $0\instr_beq[0:0]
    72/76: $0\instr_jalr[0:0]
    73/76: $0\instr_jal[0:0]
    74/76: $0\instr_auipc[0:0]
    75/76: $0\instr_lui[0:0]
    76/76: $0\pcpi_insn[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
     1/13: $3\dbg_insn_opcode[31:0]
     2/13: $2\dbg_insn_rd[4:0]
     3/13: $2\dbg_insn_rs2[4:0]
     4/13: $2\dbg_insn_rs1[4:0]
     5/13: $2\dbg_insn_opcode[31:0]
     6/13: $2\dbg_insn_imm[31:0]
     7/13: $2\dbg_ascii_instr[63:0]
     8/13: $1\dbg_insn_rd[4:0]
     9/13: $1\dbg_insn_rs2[4:0]
    10/13: $1\dbg_insn_rs1[4:0]
    11/13: $1\dbg_insn_imm[31:0]
    12/13: $1\dbg_ascii_instr[63:0]
    13/13: $1\dbg_insn_opcode[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
     1/8: $0\cached_insn_rd[4:0]
     2/8: $0\cached_insn_rs2[4:0]
     3/8: $0\cached_insn_rs1[4:0]
     4/8: $0\cached_insn_opcode[31:0]
     5/8: $0\cached_insn_imm[31:0]
     6/8: $0\cached_ascii_instr[63:0]
     7/8: $0\dbg_valid_insn[0:0]
     8/8: $0\dbg_insn_addr[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$2376'.
     1/47: $47\new_ascii_instr[63:0]
     2/47: $46\new_ascii_instr[63:0]
     3/47: $45\new_ascii_instr[63:0]
     4/47: $44\new_ascii_instr[63:0]
     5/47: $43\new_ascii_instr[63:0]
     6/47: $42\new_ascii_instr[63:0]
     7/47: $41\new_ascii_instr[63:0]
     8/47: $40\new_ascii_instr[63:0]
     9/47: $39\new_ascii_instr[63:0]
    10/47: $38\new_ascii_instr[63:0]
    11/47: $37\new_ascii_instr[63:0]
    12/47: $36\new_ascii_instr[63:0]
    13/47: $35\new_ascii_instr[63:0]
    14/47: $34\new_ascii_instr[63:0]
    15/47: $33\new_ascii_instr[63:0]
    16/47: $32\new_ascii_instr[63:0]
    17/47: $31\new_ascii_instr[63:0]
    18/47: $30\new_ascii_instr[63:0]
    19/47: $29\new_ascii_instr[63:0]
    20/47: $28\new_ascii_instr[63:0]
    21/47: $27\new_ascii_instr[63:0]
    22/47: $26\new_ascii_instr[63:0]
    23/47: $25\new_ascii_instr[63:0]
    24/47: $24\new_ascii_instr[63:0]
    25/47: $23\new_ascii_instr[63:0]
    26/47: $22\new_ascii_instr[63:0]
    27/47: $21\new_ascii_instr[63:0]
    28/47: $20\new_ascii_instr[63:0]
    29/47: $19\new_ascii_instr[63:0]
    30/47: $18\new_ascii_instr[63:0]
    31/47: $17\new_ascii_instr[63:0]
    32/47: $16\new_ascii_instr[63:0]
    33/47: $15\new_ascii_instr[63:0]
    34/47: $14\new_ascii_instr[63:0]
    35/47: $13\new_ascii_instr[63:0]
    36/47: $12\new_ascii_instr[63:0]
    37/47: $11\new_ascii_instr[63:0]
    38/47: $10\new_ascii_instr[63:0]
    39/47: $9\new_ascii_instr[63:0]
    40/47: $8\new_ascii_instr[63:0]
    41/47: $7\new_ascii_instr[63:0]
    42/47: $6\new_ascii_instr[63:0]
    43/47: $5\new_ascii_instr[63:0]
    44/47: $4\new_ascii_instr[63:0]
    45/47: $3\new_ascii_instr[63:0]
    46/47: $2\new_ascii_instr[63:0]
    47/47: $1\new_ascii_instr[63:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
     1/9: $0\mem_16bit_buffer[15:0]
     2/9: $0\prefetched_high_word[0:0]
     3/9: $0\mem_la_secondword[0:0]
     4/9: $0\mem_state[1:0]
     5/9: $0\mem_wstrb[3:0]
     6/9: $0\mem_wdata[31:0]
     7/9: $0\mem_addr[31:0]
     8/9: $0\mem_instr[0:0]
     9/9: $0\mem_valid[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$2314'.
     1/9: $0\mem_rdata_q[31:0] [31]
     2/9: $0\mem_rdata_q[31:0] [7]
     3/9: $0\mem_rdata_q[31:0] [24:20]
     4/9: $0\mem_rdata_q[31:0] [19:15]
     5/9: $0\mem_rdata_q[31:0] [6:0]
     6/9: $0\mem_rdata_q[31:0] [14:12]
     7/9: $0\mem_rdata_q[31:0] [11:8]
     8/9: $0\mem_rdata_q[31:0] [30:25]
     9/9: $0\next_insn_opcode[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$2311'.
     1/5: $3\mem_rdata_word[31:0]
     2/5: $2\mem_rdata_word[31:0]
     3/5: $1\mem_rdata_word[31:0]
     4/5: $1\mem_la_wstrb[3:0]
     5/5: $1\mem_la_wdata[31:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$2306'.
     1/2: $0\last_mem_valid[0:0]
     2/2: $0\mem_la_firstword_reg[0:0]
Creating decoders for process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
     1/2: $1\pcpi_int_rd[31:0]
     2/2: $1\pcpi_int_wr[0:0]
Creating decoders for process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:205$1514'.
Creating decoders for process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:87$1481'.
Creating decoders for process `\picosoc_regs.$proc$picosoc.v:233$207'.
     1/3: $1$memwr$\regs$picosoc.v:234$206_EN[31:0]$213
     2/3: $1$memwr$\regs$picosoc.v:234$206_DATA[31:0]$212
     3/3: $1$memwr$\regs$picosoc.v:234$206_ADDR[4:0]$211
Creating decoders for process `\simpleuart.$proc$simpleuart.v:109$152'.
     1/4: $0\send_divcnt[31:0]
     2/4: $0\send_dummy[0:0]
     3/4: $0\send_bitcnt[3:0]
     4/4: $0\send_pattern[9:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:66$143'.
     1/5: $0\recv_divcnt[31:0]
     2/5: $0\recv_buf_valid[0:0]
     3/5: $0\recv_buf_data[7:0]
     4/5: $0\recv_pattern[7:0]
     5/5: $0\recv_state[3:0]
Creating decoders for process `\simpleuart.$proc$simpleuart.v:55$141'.
     1/4: $0\cfg_divider[31:0] [31:24]
     2/4: $0\cfg_divider[31:0] [23:16]
     3/4: $0\cfg_divider[31:0] [15:8]
     4/4: $0\cfg_divider[31:0] [7:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:535$121'.
     1/14: $0\last_fetch[0:0]
     2/14: $0\fetch[0:0]
     3/14: $0\xfer_tag[3:0]
     4/14: $0\xfer_rd[0:0]
     5/14: $0\xfer_qspi[0:0]
     6/14: $0\xfer_cont[0:0]
     7/14: $0\dummy_count[3:0]
     8/14: $0\count[3:0]
     9/14: $0\ibuffer[7:0]
    10/14: $0\obuffer[7:0]
    11/14: $0\xfer_ddr[0:0]
    12/14: $0\xfer_dspi[0:0]
    13/14: $0\flash_clk[0:0]
    14/14: $0\flash_csb[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:447$97'.
     1/33: $5\next_count[3:0]
     2/33: $5\next_obuffer[7:0]
     3/33: $5\next_ibuffer[7:0]
     4/33: $4\next_count[3:0]
     5/33: $4\next_obuffer[7:0]
     6/33: $4\next_ibuffer[7:0]
     7/33: $3\next_count[3:0]
     8/33: $3\next_obuffer[7:0]
     9/33: $3\next_ibuffer[7:0]
    10/33: $2\next_fetch[0:0]
    11/33: $2\next_count[3:0]
    12/33: $2\next_ibuffer[7:0]
    13/33: $2\next_obuffer[7:0]
    14/33: $2\flash_io0_do[0:0]
    15/33: $2\flash_io0_oe[0:0]
    16/33: $2\flash_io3_do[0:0]
    17/33: $2\flash_io3_oe[0:0]
    18/33: $2\flash_io2_do[0:0]
    19/33: $2\flash_io2_oe[0:0]
    20/33: $2\flash_io1_do[0:0]
    21/33: $2\flash_io1_oe[0:0]
    22/33: $1\next_fetch[0:0]
    23/33: $1\next_count[3:0]
    24/33: $1\next_ibuffer[7:0]
    25/33: $1\next_obuffer[7:0]
    26/33: $1\flash_io3_do[0:0]
    27/33: $1\flash_io3_oe[0:0]
    28/33: $1\flash_io2_do[0:0]
    29/33: $1\flash_io2_oe[0:0]
    30/33: $1\flash_io1_do[0:0]
    31/33: $1\flash_io1_oe[0:0]
    32/33: $1\flash_io0_do[0:0]
    33/33: $1\flash_io0_oe[0:0]
Creating decoders for process `\spimemio_xfer.$proc$spimemio.v:436$88'.
Creating decoders for process `\spimemio.$proc$spimemio.v:207$67'.
     1/17: $0\buffer[23:0] [23:16]
     2/17: $0\buffer[23:0] [15:8]
     3/17: $0\buffer[23:0] [7:0]
     4/17: $0\xfer_resetn[0:0]
     5/17: $0\state[3:0]
     6/17: $0\rd_inc[0:0]
     7/17: $0\rd_wait[0:0]
     8/17: $0\rd_valid[0:0]
     9/17: $0\rd_addr[23:0]
    10/17: $0\din_valid[0:0]
    11/17: $0\din_rd[0:0]
    12/17: $0\din_ddr[0:0]
    13/17: $0\din_qspi[0:0]
    14/17: $0\din_cont[0:0]
    15/17: $0\din_tag[3:0]
    16/17: $0\din_data[7:0]
    17/17: $0\rdata[31:0]
Creating decoders for process `\spimemio.$proc$spimemio.v:151$49'.
Creating decoders for process `\spimemio.$proc$spimemio.v:99$45'.
     1/10: $0\softreset[0:0]
     2/10: $0\config_do[3:0]
     3/10: $0\config_clk[0:0]
     4/10: $0\config_csb[0:0]
     5/10: $0\config_oe[3:0]
     6/10: $0\config_dummy[3:0]
     7/10: $0\config_cont[0:0]
     8/10: $0\config_qspi[0:0]
     9/10: $0\config_ddr[0:0]
    10/10: $0\config_en[0:0]
Creating decoders for process `\top.$proc$top.v:63$29'.
Creating decoders for process `\top.$proc$top.v:129$19'.
     1/6: $0\gpio_out[31:0] [31:24]
     2/6: $0\gpio_out[31:0] [23:16]
     3/6: $0\gpio_out[31:0] [15:8]
     4/6: $0\gpio_out[31:0] [7:0]
     5/6: $0\iomem_rdata[31:0]
     6/6: $0\iomem_ready[0:0]
Creating decoders for process `\top.$proc$top.v:66$2'.

8.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\display.\comm' from process `\display.$proc$display.v:112$1097'.
No latch inferred for signal `\display.\dec' from process `\display.$proc$display.v:112$1097'.
No latch inferred for signal `\display.\seg' from process `\display.$proc$display.v:112$1097'.
No latch inferred for signal `\display.\hex_to_display' from process `\display.$proc$display.v:112$1097'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_rs1' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$2697'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_rs2' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$2697'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rs' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$2697'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_write' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$2683'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpuregs_wrdata' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$2683'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\clear_prefetched_high_word' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$2678'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$2655'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out_0' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$2655'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_ascii_state' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$2643'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_opcode' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_ascii_instr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_imm' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_rs1' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_rs2' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_rd' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\new_ascii_instr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$2376'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_add_sub' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_shl' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_shr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_eq' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_ltu' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_lts' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_wdata' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$2311'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_wstrb' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$2311'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_rdata_word' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$2311'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_wr' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_rd' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_wait' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
No latch inferred for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_int_ready' from process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
No latch inferred for signal `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.\irq' from process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:87$1481'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io0_do' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io1_do' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io2_do' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_oe' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\flash_io3_do' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\next_obuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\next_ibuffer' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\next_count' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.
No latch inferred for signal `\spimemio_xfer.\next_fetch' from process `\spimemio_xfer.$proc$spimemio.v:447$97'.

8.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$1341'.
  created $adff cell `$procdff$6539' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$1334'.
  created $dff cell `$procdff$6540' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$1330'.
  created $adff cell `$procdff$6541' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$1323'.
  created $dff cell `$procdff$6542' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$1320'.
  created $adff cell `$procdff$6543' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$1317'.
  created $dff cell `$procdff$6544' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$1314'.
  created $adff cell `$procdff$6545' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$1311'.
  created $dff cell `$procdff$6546' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$1309'.
  created $dff cell `$procdff$6547' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:846$1307'.
  created $dff cell `$procdff$6548' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$1303'.
  created $adff cell `$procdff$6549' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$1296'.
  created $dff cell `$procdff$6550' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$1292'.
  created $adff cell `$procdff$6551' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$1285'.
  created $dff cell `$procdff$6552' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$1282'.
  created $adff cell `$procdff$6553' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$1279'.
  created $dff cell `$procdff$6554' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$1276'.
  created $adff cell `$procdff$6555' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$1273'.
  created $dff cell `$procdff$6556' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$1271'.
  created $dff cell `$procdff$6557' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:269$1269'.
  created $dff cell `$procdff$6558' with positive edge clock.
Creating register for signal `\display.\dd' using process `\display.$proc$display.v:98$1096'.
  created $dff cell `$procdff$6559' with positive edge clock.
Creating register for signal `\display.\refresh_timer_state' using process `\display.$proc$display.v:85$1093'.
  created $dff cell `$procdff$6560' with positive edge clock.
Creating register for signal `\display.\refresh_tick' using process `\display.$proc$display.v:85$1093'.
  created $dff cell `$procdff$6561' with positive edge clock.
Creating register for signal `\display.\second_toggle' using process `\display.$proc$display.v:51$1089'.
  created $dff cell `$procdff$6562' with positive edge clock.
Creating register for signal `\display.\second_timer_state' using process `\display.$proc$display.v:51$1089'.
  created $dff cell `$procdff$6563' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\trap' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6564' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6565' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\eoi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6566' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\trace_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6567' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\trace_data' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6568' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\count_cycle' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6569' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\count_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6570' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_pc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6571' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_next_pc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6572' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_op1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6573' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_op2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6574' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_out' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6575' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\reg_sh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6576' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_delay' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6577' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_active' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6578' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_mask' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6579' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_pending' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6580' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\timer' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6581' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_wordsize' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6582' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_prefetch' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6583' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_rinst' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6584' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_rdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6585' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_do_wdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6586' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_trigger' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6587' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_trigger_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6588' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_pseudo_trigger' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6589' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoder_pseudo_trigger_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6590' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs1val' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6591' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs2val' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6592' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs1val_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6593' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_rs2val_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6594' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cpu_state' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6595' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\irq_state' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6596' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\set_mem_do_rinst' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6597' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\set_mem_do_rdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6598' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\set_mem_do_wdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6599' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_store' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6600' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_stalu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6601' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_branch' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6602' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_compr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6603' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_trace' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6604' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_is_lu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6605' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_is_lh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6606' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_is_lb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6607' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\latched_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6608' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\current_pc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6609' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_timeout' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6610' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\next_irq_pending' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6611' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\do_waitirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6612' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6613' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_out_0_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6614' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_wait' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6615' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\alu_wait_2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
  created $dff cell `$procdff$6616' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\clear_prefetched_high_word_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1288$2677'.
  created $dff cell `$procdff$6617' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\pcpi_insn' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6618' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lui' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6619' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_auipc' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6620' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_jal' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6621' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_jalr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6622' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_beq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6623' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bne' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6624' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_blt' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6625' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bge' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6626' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bltu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6627' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_bgeu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6628' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6629' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6630' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6631' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lbu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6632' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_lhu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6633' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6634' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6635' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6636' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_addi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6637' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_slti' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6638' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sltiu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6639' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_xori' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6640' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_ori' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6641' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_andi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6642' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_slli' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6643' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_srli' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6644' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_srai' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6645' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_add' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6646' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sub' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6647' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sll' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6648' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_slt' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6649' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sltu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6650' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_xor' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6651' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_srl' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6652' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_sra' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6653' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_or' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6654' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_and' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6655' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdcycle' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6656' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdcycleh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6657' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdinstr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6658' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_rdinstrh' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6659' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_ecall_ebreak' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6660' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_getq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6661' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_setq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6662' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_retirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6663' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_maskirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6664' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_waitirq' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6665' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\instr_timer' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6666' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6667' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rs1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6668' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_rs2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6669' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6670' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\decoded_imm_j' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6671' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\compressed_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6672' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lui_auipc_jal' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6673' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lb_lh_lw_lbu_lhu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6674' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_slli_srli_srai' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6675' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_jalr_addi_slti_sltiu_xori_ori_andi' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6676' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_sb_sh_sw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6677' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_sll_srl_sra' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6678' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lui_auipc_jal_jalr_addi_add_sub' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6679' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_slti_blt_slt' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6680' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_sltiu_bltu_sltu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6681' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_beq_bne_blt_bge_bltu_bgeu' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6682' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_lbu_lhu_lw' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6683' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_alu_reg_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6684' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_alu_reg_reg' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6685' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\is_compare' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
  created $dff cell `$procdff$6686' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_insn_addr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6687' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_ascii_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6688' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6689' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_opcode' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6690' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_rs1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6691' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_rs2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6692' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\q_insn_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6693' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_next' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6694' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\dbg_valid_insn' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6695' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_ascii_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6696' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_imm' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6697' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_opcode' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6698' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_rs1' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6699' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_rs2' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6700' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\cached_insn_rd' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
  created $dff cell `$procdff$6701' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6702' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_instr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6703' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_addr' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6704' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_wdata' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6705' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_wstrb' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6706' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_state' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6707' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_secondword' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6708' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\prefetched_high_word' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6709' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_16bit_buffer' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
  created $dff cell `$procdff$6710' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\next_insn_opcode' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$2314'.
  created $dff cell `$procdff$6711' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_rdata_q' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$2314'.
  created $dff cell `$procdff$6712' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\mem_la_firstword_reg' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$2306'.
  created $dff cell `$procdff$6713' with positive edge clock.
Creating register for signal `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.\last_mem_valid' using process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$2306'.
  created $dff cell `$procdff$6714' with positive edge clock.
Creating register for signal `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.\ram_ready' using process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:205$1514'.
  created $dff cell `$procdff$6715' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$206_ADDR' using process `\picosoc_regs.$proc$picosoc.v:233$207'.
  created $dff cell `$procdff$6716' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$206_DATA' using process `\picosoc_regs.$proc$picosoc.v:233$207'.
  created $dff cell `$procdff$6717' with positive edge clock.
Creating register for signal `\picosoc_regs.$memwr$\regs$picosoc.v:234$206_EN' using process `\picosoc_regs.$proc$picosoc.v:233$207'.
  created $dff cell `$procdff$6718' with positive edge clock.
Creating register for signal `\simpleuart.\send_pattern' using process `\simpleuart.$proc$simpleuart.v:109$152'.
  created $dff cell `$procdff$6719' with positive edge clock.
Creating register for signal `\simpleuart.\send_bitcnt' using process `\simpleuart.$proc$simpleuart.v:109$152'.
  created $dff cell `$procdff$6720' with positive edge clock.
Creating register for signal `\simpleuart.\send_divcnt' using process `\simpleuart.$proc$simpleuart.v:109$152'.
  created $dff cell `$procdff$6721' with positive edge clock.
Creating register for signal `\simpleuart.\send_dummy' using process `\simpleuart.$proc$simpleuart.v:109$152'.
  created $dff cell `$procdff$6722' with positive edge clock.
Creating register for signal `\simpleuart.\recv_state' using process `\simpleuart.$proc$simpleuart.v:66$143'.
  created $dff cell `$procdff$6723' with positive edge clock.
Creating register for signal `\simpleuart.\recv_divcnt' using process `\simpleuart.$proc$simpleuart.v:66$143'.
  created $dff cell `$procdff$6724' with positive edge clock.
Creating register for signal `\simpleuart.\recv_pattern' using process `\simpleuart.$proc$simpleuart.v:66$143'.
  created $dff cell `$procdff$6725' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_data' using process `\simpleuart.$proc$simpleuart.v:66$143'.
  created $dff cell `$procdff$6726' with positive edge clock.
Creating register for signal `\simpleuart.\recv_buf_valid' using process `\simpleuart.$proc$simpleuart.v:66$143'.
  created $dff cell `$procdff$6727' with positive edge clock.
Creating register for signal `\simpleuart.\cfg_divider' using process `\simpleuart.$proc$simpleuart.v:55$141'.
  created $dff cell `$procdff$6728' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_csb' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6729' with positive edge clock.
Creating register for signal `\spimemio_xfer.\flash_clk' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6730' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_dspi' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6731' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6732' with positive edge clock.
Creating register for signal `\spimemio_xfer.\obuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6733' with positive edge clock.
Creating register for signal `\spimemio_xfer.\ibuffer' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6734' with positive edge clock.
Creating register for signal `\spimemio_xfer.\count' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6735' with positive edge clock.
Creating register for signal `\spimemio_xfer.\dummy_count' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6736' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_cont' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6737' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_qspi' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6738' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_rd' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6739' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6740' with positive edge clock.
Creating register for signal `\spimemio_xfer.\fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6741' with positive edge clock.
Creating register for signal `\spimemio_xfer.\last_fetch' using process `\spimemio_xfer.$proc$spimemio.v:535$121'.
  created $dff cell `$procdff$6742' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_ddr_q' using process `\spimemio_xfer.$proc$spimemio.v:436$88'.
  created $dff cell `$procdff$6743' with positive edge clock.
Creating register for signal `\spimemio_xfer.\xfer_tag_q' using process `\spimemio_xfer.$proc$spimemio.v:436$88'.
  created $dff cell `$procdff$6744' with positive edge clock.
Creating register for signal `\spimemio.\rdata' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6745' with positive edge clock.
Creating register for signal `\spimemio.\xfer_resetn' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6746' with positive edge clock.
Creating register for signal `\spimemio.\din_valid' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6747' with positive edge clock.
Creating register for signal `\spimemio.\din_data' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6748' with positive edge clock.
Creating register for signal `\spimemio.\din_tag' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6749' with positive edge clock.
Creating register for signal `\spimemio.\din_cont' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6750' with positive edge clock.
Creating register for signal `\spimemio.\din_qspi' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6751' with positive edge clock.
Creating register for signal `\spimemio.\din_ddr' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6752' with positive edge clock.
Creating register for signal `\spimemio.\din_rd' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6753' with positive edge clock.
Creating register for signal `\spimemio.\buffer' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6754' with positive edge clock.
Creating register for signal `\spimemio.\rd_addr' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6755' with positive edge clock.
Creating register for signal `\spimemio.\rd_valid' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6756' with positive edge clock.
Creating register for signal `\spimemio.\rd_wait' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6757' with positive edge clock.
Creating register for signal `\spimemio.\rd_inc' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6758' with positive edge clock.
Creating register for signal `\spimemio.\state' using process `\spimemio.$proc$spimemio.v:207$67'.
  created $dff cell `$procdff$6759' with positive edge clock.
Creating register for signal `\spimemio.\xfer_io0_90' using process `\spimemio.$proc$spimemio.v:151$49'.
  created $dff cell `$procdff$6760' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io1_90' using process `\spimemio.$proc$spimemio.v:151$49'.
  created $dff cell `$procdff$6761' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io2_90' using process `\spimemio.$proc$spimemio.v:151$49'.
  created $dff cell `$procdff$6762' with negative edge clock.
Creating register for signal `\spimemio.\xfer_io3_90' using process `\spimemio.$proc$spimemio.v:151$49'.
  created $dff cell `$procdff$6763' with negative edge clock.
Creating register for signal `\spimemio.\softreset' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6764' with positive edge clock.
Creating register for signal `\spimemio.\config_en' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6765' with positive edge clock.
Creating register for signal `\spimemio.\config_ddr' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6766' with positive edge clock.
Creating register for signal `\spimemio.\config_qspi' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6767' with positive edge clock.
Creating register for signal `\spimemio.\config_cont' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6768' with positive edge clock.
Creating register for signal `\spimemio.\config_dummy' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6769' with positive edge clock.
Creating register for signal `\spimemio.\config_oe' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6770' with positive edge clock.
Creating register for signal `\spimemio.\config_csb' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6771' with positive edge clock.
Creating register for signal `\spimemio.\config_clk' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6772' with positive edge clock.
Creating register for signal `\spimemio.\config_do' using process `\spimemio.$proc$spimemio.v:99$45'.
  created $dff cell `$procdff$6773' with positive edge clock.
Creating register for signal `\top.\iomem_ready' using process `\top.$proc$top.v:129$19'.
  created $dff cell `$procdff$6774' with positive edge clock.
Creating register for signal `\top.\iomem_rdata' using process `\top.$proc$top.v:129$19'.
  created $dff cell `$procdff$6775' with positive edge clock.
Creating register for signal `\top.\gpio_out' using process `\top.$proc$top.v:129$19'.
  created $dff cell `$procdff$6776' with positive edge clock.
Creating register for signal `\top.\reset_cnt' using process `\top.$proc$top.v:66$2'.
  created $dff cell `$procdff$6777' with positive edge clock.

8.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

8.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1344'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$1341'.
Removing empty process `SB_DFFNES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1346$1341'.
Removing empty process `SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1340'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$1334'.
Removing empty process `SB_DFFNESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1290$1334'.
Removing empty process `SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1333'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$1330'.
Removing empty process `SB_DFFNER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1215$1330'.
Removing empty process `SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1329'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$1323'.
Removing empty process `SB_DFFNESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1159$1323'.
Removing empty process `SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1322'.
Removing empty process `SB_DFFNS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1090$1320'.
Removing empty process `SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1319'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$1317'.
Removing empty process `SB_DFFNSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:1042$1317'.
Removing empty process `SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1316'.
Removing empty process `SB_DFFNR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:973$1314'.
Removing empty process `SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1313'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$1311'.
Removing empty process `SB_DFFNSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:925$1311'.
Removing empty process `SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1310'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$1309'.
Removing empty process `SB_DFFNE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:882$1309'.
Removing empty process `SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1308'.
Removing empty process `SB_DFFN.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:846$1307'.
Removing empty process `SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1306'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$1303'.
Removing empty process `SB_DFFES.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:769$1303'.
Removing empty process `SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1302'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$1296'.
Removing empty process `SB_DFFESS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:713$1296'.
Removing empty process `SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1295'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$1292'.
Removing empty process `SB_DFFER.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:638$1292'.
Removing empty process `SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1291'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$1285'.
Removing empty process `SB_DFFESR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:582$1285'.
Removing empty process `SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1284'.
Removing empty process `SB_DFFS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:513$1282'.
Removing empty process `SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1281'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$1279'.
Removing empty process `SB_DFFSS.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:465$1279'.
Removing empty process `SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1278'.
Removing empty process `SB_DFFR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:396$1276'.
Removing empty process `SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1275'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$1273'.
Removing empty process `SB_DFFSR.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:348$1273'.
Removing empty process `SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1272'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$1271'.
Removing empty process `SB_DFFE.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:305$1271'.
Removing empty process `SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:0$1270'.
Removing empty process `SB_DFF.$proc$/opt/sft/bin/../share/yosys/ice40/cells_sim.v:269$1269'.
Removing empty process `display.$proc$display.v:0$1100'.
Removing empty process `display.$proc$display.v:67$1099'.
Removing empty process `display.$proc$display.v:0$1098'.
Found and cleaned up 4 empty switches in `\display.$proc$display.v:112$1097'.
Removing empty process `display.$proc$display.v:112$1097'.
Found and cleaned up 1 empty switch in `\display.$proc$display.v:98$1096'.
Removing empty process `display.$proc$display.v:98$1096'.
Found and cleaned up 1 empty switch in `\display.$proc$display.v:85$1093'.
Removing empty process `display.$proc$display.v:85$1093'.
Found and cleaned up 1 empty switch in `\display.$proc$display.v:51$1089'.
Removing empty process `display.$proc$display.v:51$1089'.
Found and cleaned up 56 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1397$2711'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1382$2697'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$2683'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1304$2683'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$2678'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1290$2678'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1288$2677'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$2655'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1244$2655'.
Found and cleaned up 8 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$2643'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1181$2643'.
Found and cleaned up 22 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:856$2383'.
Found and cleaned up 3 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:807$2381'.
Found and cleaned up 5 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:776$2377'.
Found and cleaned up 47 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$2376'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:700$2376'.
Found and cleaned up 16 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:565$2352'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:1234$2883'.
Found and cleaned up 19 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$2314'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:430$2314'.
Found and cleaned up 3 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$2311'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:401$2311'.
Found and cleaned up 2 empty switches in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$2306'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:390$2306'.
Found and cleaned up 1 empty switch in `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
Removing empty process `$paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.$proc$picorv32.v:325$2232'.
Removing empty process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:205$1514'.
Removing empty process `$paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.$proc$picosoc.v:87$1481'.
Found and cleaned up 1 empty switch in `\picosoc_regs.$proc$picosoc.v:233$207'.
Removing empty process `picosoc_regs.$proc$picosoc.v:233$207'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:109$152'.
Removing empty process `simpleuart.$proc$simpleuart.v:109$152'.
Found and cleaned up 7 empty switches in `\simpleuart.$proc$simpleuart.v:66$143'.
Removing empty process `simpleuart.$proc$simpleuart.v:66$143'.
Found and cleaned up 5 empty switches in `\simpleuart.$proc$simpleuart.v:55$141'.
Removing empty process `simpleuart.$proc$simpleuart.v:55$141'.
Found and cleaned up 4 empty switches in `\spimemio_xfer.$proc$spimemio.v:535$121'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:535$121'.
Found and cleaned up 5 empty switches in `\spimemio_xfer.$proc$spimemio.v:447$97'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:447$97'.
Removing empty process `spimemio_xfer.$proc$spimemio.v:436$88'.
Found and cleaned up 25 empty switches in `\spimemio.$proc$spimemio.v:207$67'.
Removing empty process `spimemio.$proc$spimemio.v:207$67'.
Removing empty process `spimemio.$proc$spimemio.v:151$49'.
Found and cleaned up 5 empty switches in `\spimemio.$proc$spimemio.v:99$45'.
Removing empty process `spimemio.$proc$spimemio.v:99$45'.
Removing empty process `top.$proc$top.v:63$29'.
Found and cleaned up 7 empty switches in `\top.$proc$top.v:129$19'.
Removing empty process `top.$proc$top.v:129$19'.
Removing empty process `top.$proc$top.v:66$2'.
Cleaned up 277 empty switches.

8.4. Executing FLATTEN pass (flatten design).
Deleting now unused module display.
Deleting now unused module $paramod$9ea2d1f43ea9221ac6743123cde856d8532cb2a5\picorv32.
Deleting now unused module $paramod\ice40up5k_spram\WORDS=s32'00000000000000000000100000000000.
Deleting now unused module $paramod$7ee209ee374cf87b6f7bc2a46011383675bafe99\picosoc.
Deleting now unused module picosoc_regs.
Deleting now unused module simpleuart.
Deleting now unused module spimemio_xfer.
Deleting now unused module spimemio.
<suppressed ~8 debug messages>

8.5. Executing TRIBUF pass.

8.6. Executing DEMINOUT pass (demote inout ports to input or output).

8.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~729 debug messages>

8.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 289 unused cells and 2084 unused wires.
<suppressed ~354 debug messages>

8.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

8.10. Executing OPT pass (performing simple optimizations).

8.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1662 debug messages>
Removed a total of 554 cells.

8.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$2991.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3001.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3003.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3009.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3016.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3018.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3024.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3033.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3053.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3059.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3062.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3075.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3082.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3085.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3098.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3110.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3113.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3122.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3125.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3133.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3135.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3138.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3189.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3192.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3199.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3201.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3204.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3223.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3225.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3228.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3249.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3252.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3286.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3291.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3294.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3316.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3318.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3321.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3333.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3336.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3379.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3392.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3405.
    dead port 4/7 on $pmux $flatten\soc.\cpu.$procmux$3632.
    dead port 5/7 on $pmux $flatten\soc.\cpu.$procmux$3632.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$3672.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$3672.
    dead port 4/7 on $pmux $flatten\soc.\cpu.$procmux$3877.
    dead port 5/7 on $pmux $flatten\soc.\cpu.$procmux$3877.
    dead port 3/4 on $pmux $flatten\soc.\cpu.$procmux$3941.
    dead port 1/2 on $mux $flatten\soc.\cpu.$procmux$3946.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3946.
    dead port 1/2 on $mux $flatten\soc.\cpu.$procmux$3948.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$3948.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$3960.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$3960.
    dead port 3/4 on $pmux $flatten\soc.\cpu.$procmux$4142.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$4158.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$4158.
    dead port 7/12 on $pmux $flatten\soc.\cpu.$procmux$4341.
    dead port 8/12 on $pmux $flatten\soc.\cpu.$procmux$4341.
    dead port 4/9 on $pmux $flatten\soc.\cpu.$procmux$4394.
    dead port 5/9 on $pmux $flatten\soc.\cpu.$procmux$4394.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$4516.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$4525.
    dead port 1/8 on $pmux $flatten\soc.\cpu.$procmux$4540.
    dead port 2/8 on $pmux $flatten\soc.\cpu.$procmux$4540.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$5671.
    dead port 2/2 on $mux $flatten\soc.\cpu.$procmux$5678.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5943.
    dead port 1/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$5945.
    dead port 2/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$5945.
    dead port 3/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$5945.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5949.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5956.
    dead port 1/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$5958.
    dead port 2/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$5958.
    dead port 3/4 on $pmux $flatten\soc.\spimemio.\xfer.$procmux$5958.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5962.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5982.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5984.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5993.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$5995.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6017.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6019.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6029.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6031.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6041.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6051.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6061.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6071.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6081.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6091.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6099.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6107.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6115.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6123.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6133.
    dead port 2/2 on $mux $flatten\soc.\spimemio.\xfer.$procmux$6143.
Removed 99 multiplexer ports.
<suppressed ~264 debug messages>

8.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3065: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $flatten\soc.\cpu.$procmux$3049_CMP $auto$opt_reduce.cc:134:opt_mux$6780 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3088: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $auto$opt_reduce.cc:134:opt_mux$6782 }
    New ctrl vector for $pmux cell $flatten\display.$procmux$2961: $auto$opt_reduce.cc:134:opt_mux$6784
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3369: { $flatten\soc.\cpu.$procmux$3045_CMP $auto$opt_reduce.cc:134:opt_mux$6786 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3382: { $auto$opt_reduce.cc:134:opt_mux$6788 $flatten\soc.\cpu.$procmux$3044_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3395: { $flatten\soc.\cpu.$procmux$3047_CMP $auto$opt_reduce.cc:134:opt_mux$6790 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3612: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $flatten\soc.\cpu.$procmux$3049_CMP $flatten\soc.\cpu.$procmux$3047_CMP $flatten\soc.\cpu.$procmux$3046_CMP $flatten\soc.\cpu.$procmux$3044_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3672: { \soc.cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_mux$6792 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3714: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $flatten\soc.\cpu.$procmux$3047_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3854: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $flatten\soc.\cpu.$procmux$3049_CMP $flatten\soc.\cpu.$procmux$3047_CMP $auto$opt_reduce.cc:134:opt_mux$6794 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3877: $auto$opt_reduce.cc:134:opt_mux$6796
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3960: { \soc.cpu.instr_trap $auto$opt_reduce.cc:134:opt_mux$6800 $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y \soc.cpu.is_slli_srli_srai $auto$opt_reduce.cc:134:opt_mux$6798 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4132: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $flatten\soc.\cpu.$procmux$3049_CMP $flatten\soc.\cpu.$procmux$3048_CMP $flatten\soc.\cpu.$procmux$3046_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4158: { $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y $auto$opt_reduce.cc:134:opt_mux$6804 $auto$opt_reduce.cc:134:opt_mux$6802 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4341: { $auto$opt_reduce.cc:134:opt_mux$6808 $auto$opt_reduce.cc:134:opt_mux$6806 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4394: { \soc.cpu.is_lui_auipc_jal $auto$opt_reduce.cc:134:opt_mux$6810 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4511: $auto$opt_reduce.cc:134:opt_mux$6812
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4601: { $flatten\soc.\cpu.$procmux$4598_CMP $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6814 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4619: $auto$opt_reduce.cc:134:opt_mux$6816
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4687: { $flatten\soc.\cpu.$procmux$4598_CMP $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6818 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4705: { $flatten\soc.\cpu.$procmux$4598_CMP $auto$opt_reduce.cc:134:opt_mux$6820 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4753: { $auto$opt_reduce.cc:134:opt_mux$6822 $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4774: $auto$opt_reduce.cc:134:opt_mux$6824
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4895: { $flatten\soc.\cpu.$procmux$4903_CMP $auto$opt_reduce.cc:134:opt_mux$6826 $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4907: $auto$opt_reduce.cc:134:opt_mux$6828
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5063: $auto$opt_reduce.cc:134:opt_mux$6830
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5450: { $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6832 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5465: { $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6834 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5483: $auto$opt_reduce.cc:134:opt_mux$6836
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5496: $auto$opt_reduce.cc:134:opt_mux$6838
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5521: { $auto$opt_reduce.cc:134:opt_mux$6840 $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5556: { $flatten\soc.\cpu.$procmux$4598_CMP $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6842 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5571: { $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6844 $flatten\soc.\cpu.$procmux$4602_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5598: { $flatten\soc.\cpu.$procmux$4598_CMP $auto$opt_reduce.cc:134:opt_mux$6846 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5611: $auto$opt_reduce.cc:134:opt_mux$6848
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5637: { $auto$opt_reduce.cc:134:opt_mux$6852 $flatten\soc.\cpu.$procmux$4616_CMP $flatten\soc.\cpu.$procmux$4594_CMP $auto$opt_reduce.cc:134:opt_mux$6850 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5656: { $flatten\soc.\cpu.$procmux$4598_CMP $auto$opt_reduce.cc:134:opt_mux$6854 }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.\cpuregs.$procmux$5713:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210
      New ports: A=1'0, B=1'1, Y=$flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0]
      New connections: $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [31:1] = { $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] $flatten\soc.\cpu.\cpuregs.$0$memwr$\regs$picosoc.v:234$206_EN[31:0]$210 [0] }
    New ctrl vector for $pmux cell $flatten\soc.\simpleuart.$procmux$5795: $auto$opt_reduce.cc:134:opt_mux$6856
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$6402: { $flatten\soc.\spimemio.$procmux$6245_CMP $auto$opt_reduce.cc:134:opt_mux$6858 $flatten\soc.\spimemio.$procmux$6231_CMP $flatten\soc.\spimemio.$procmux$6228_CMP $flatten\soc.\spimemio.$procmux$6225_CMP $flatten\soc.\spimemio.$procmux$6222_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$5932: $auto$opt_reduce.cc:134:opt_mux$6860
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6077: { $flatten\soc.\spimemio.\xfer.$procmux$5935_CMP $auto$opt_reduce.cc:134:opt_mux$6862 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6087: { $flatten\soc.\spimemio.\xfer.$procmux$5935_CMP $auto$opt_reduce.cc:134:opt_mux$6864 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6096: $auto$opt_reduce.cc:134:opt_mux$6866
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6104: $auto$opt_reduce.cc:134:opt_mux$6868
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6112: $auto$opt_reduce.cc:134:opt_mux$6870
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6120: $auto$opt_reduce.cc:134:opt_mux$6872
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6129: { $flatten\soc.\spimemio.\xfer.$procmux$5935_CMP $auto$opt_reduce.cc:134:opt_mux$6874 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6139: { $flatten\soc.\spimemio.\xfer.$procmux$5935_CMP $auto$opt_reduce.cc:134:opt_mux$6876 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3043: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $auto$opt_reduce.cc:134:opt_mux$6878 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6791: { $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi \soc.cpu.is_lui_auipc_jal \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6795: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6799: { \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6803: { \soc.cpu.is_slli_srli_srai \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6807: { $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y \soc.cpu.is_slli_srli_srai \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6809: { \soc.cpu.instr_trap \soc.cpu.instr_timer \soc.cpu.instr_maskirq \soc.cpu.instr_retirq \soc.cpu.instr_rdinstrh \soc.cpu.instr_rdinstr \soc.cpu.instr_rdcycleh \soc.cpu.instr_rdcycle }
  Optimizing cells in module \top.
Performed a total of 56 changes.

8.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~177 debug messages>
Removed a total of 59 cells.

8.10.6. Executing OPT_DFF pass (perform DFF optimizations).

8.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 14 unused cells and 703 unused wires.
<suppressed ~21 debug messages>

8.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.10.9. Rerunning OPT passes. (Maybe there is more to do..)

8.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~269 debug messages>

8.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3482: $auto$opt_reduce.cc:134:opt_mux$6880
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3499: { $flatten\soc.\cpu.$procmux$3047_CMP $auto$opt_reduce.cc:134:opt_mux$6882 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3919: { $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y $flatten\soc.\cpu.$procmux$3049_CMP $flatten\soc.\cpu.$procmux$3048_CMP $flatten\soc.\cpu.$procmux$3047_CMP $flatten\soc.\cpu.$procmux$3046_CMP $auto$opt_reduce.cc:134:opt_mux$6884 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4789: $auto$opt_reduce.cc:134:opt_mux$6886
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5494: { $flatten\soc.\cpu.$procmux$4618_CMP $auto$opt_reduce.cc:134:opt_mux$6888 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$6207: $auto$opt_reduce.cc:134:opt_mux$6890
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$6309: { $flatten\soc.\spimemio.$procmux$6245_CMP $auto$opt_reduce.cc:134:opt_mux$6892 $flatten\soc.\spimemio.$procmux$6222_CMP }
  Optimizing cells in module \top.
Performed a total of 7 changes.

8.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.10.13. Executing OPT_DFF pass (perform DFF optimizations).

8.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

8.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.10.16. Rerunning OPT passes. (Maybe there is more to do..)

8.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~269 debug messages>

8.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.10.20. Executing OPT_DFF pass (perform DFF optimizations).

8.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.10.23. Finished OPT passes. (There is nothing left to do.)

8.11. Executing FSM pass (extract and optimize FSM).

8.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.display.dd as FSM state register:
    Register has an initialization value.
    Circuit seems to be self-resetting.
Found FSM state register top.soc.cpu.cpu_state.
Not marking top.soc.cpu.irq_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.soc.cpu.mem_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.soc.cpu.mem_wordsize.
Not marking top.soc.spimemio.din_tag as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.soc.spimemio.state.

8.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\soc.cpu.cpu_state' from module `\top'.
  found $dff cell for state register: $flatten\soc.\cpu.$procdff$6595
  root of input selection tree: $flatten\soc.\cpu.$0\cpu_state[7:0]
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1933$2871_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1917$2854_Y
  found ctrl input: \soc.cpu.resetn
  found state code: 8'01000000
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$6880
  found ctrl input: $flatten\soc.\cpu.$procmux$3046_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$3047_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$3048_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$3049_CMP
  found ctrl input: $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1867$2839_Y
  found ctrl input: $flatten\soc.\cpu.$eq$picorv32.v:1826$2817_Y
  found ctrl input: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
  found ctrl input: \soc.cpu.mem_done
  found ctrl input: \soc.cpu.is_sll_srl_sra
  found ctrl input: \soc.cpu.is_sb_sh_sw
  found state code: 8'00001000
  found state code: 8'00000100
  found state code: 8'00000010
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$6798
  found ctrl input: \soc.cpu.is_slli_srli_srai
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$6796
  found ctrl input: \soc.cpu.instr_trap
  found state code: 8'00000001
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1614$2775_Y
  found state code: 8'10000000
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1533$2752_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1543$2760_Y
  found ctrl input: \soc.cpu.decoder_trigger
  found ctrl input: \soc.cpu.instr_jal
  found state code: 8'00100000
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1925$2864_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1918$2857_Y
  found ctrl input: $flatten\soc.\cpu.$logic_and$picorv32.v:1920$2861_Y
  found ctrl output: $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y
  found ctrl output: $flatten\soc.\cpu.$procmux$3044_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$3045_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$3046_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$3047_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$3048_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$3049_CMP
  found ctrl output: $flatten\soc.\cpu.$procmux$3051_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_mux$6798 $auto$opt_reduce.cc:134:opt_mux$6796 $auto$opt_reduce.cc:134:opt_mux$6880 $flatten\soc.\cpu.$logic_and$picorv32.v:1933$2871_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1925$2864_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1920$2861_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1918$2857_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1917$2854_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1867$2839_Y $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y $flatten\soc.\cpu.$eq$picorv32.v:1826$2817_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1614$2775_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1543$2760_Y $flatten\soc.\cpu.$logic_and$picorv32.v:1533$2752_Y \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu \soc.cpu.is_sll_srl_sra \soc.cpu.is_sb_sh_sw \soc.cpu.is_slli_srli_srai \soc.cpu.decoder_trigger \soc.cpu.instr_trap \soc.cpu.instr_jal \soc.cpu.mem_done \soc.cpu.resetn }
  ctrl outputs: { $flatten\soc.\cpu.$procmux$3051_CMP $flatten\soc.\cpu.$procmux$3049_CMP $flatten\soc.\cpu.$procmux$3048_CMP $flatten\soc.\cpu.$procmux$3047_CMP $flatten\soc.\cpu.$procmux$3046_CMP $flatten\soc.\cpu.$procmux$3045_CMP $flatten\soc.\cpu.$procmux$3044_CMP $flatten\soc.\cpu.$0\cpu_state[7:0] $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y }
  transition: 8'10000000 24'---0---0---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---0---0---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---00-01---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---00-01---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---00011---------------- -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---00111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---00111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---010-1---------------- -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---01101---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---01101---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---01111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---01111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---1-0------------------ -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---1-1-0---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---1-1-0---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---10101---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---10101---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---10111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---10111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---11101---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---11101---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'10000000 24'---11111---------------0 -> 8'01000000 16'1000000010000000
  transition: 8'10000000 24'---11111---------------1 -> 8'10000000 16'1000000100000000
  transition: 8'01000000 24'---0---0---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---0---0-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---0---0------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---00-01-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00-01------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00011---------------- -> 8'10000000 16'0000000100000001
  transition: 8'01000000 24'---00111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---00111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---00111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---010-1---------------- -> 8'10000000 16'0000000100000001
  transition: 8'01000000 24'---01101---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---01101-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01101------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---01111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---01111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-0------------------ -> 8'10000000 16'0000000100000001
  transition: 8'01000000 24'---1-1-0---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---1-1-0-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---1-1-0------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---10101-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10101------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---10111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---10111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---11101-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11101------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111---------------0 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111-----00----0---1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111-----00----1-0-1 -> 8'00100000 16'0000000001000001
  transition: 8'01000000 24'---11111-----00----1-1-1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111-----10--------1 -> 8'01000000 16'0000000010000001
  transition: 8'01000000 24'---11111------1--------1 -> 8'01000000 16'0000000010000001
  transition: 8'00100000 24'---0---0---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-0---0---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-0---0---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-0---0---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---0---0----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---0---0----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-0---0---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---0---0---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---0---0----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--0---0---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---00-01---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-00-01---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-00-01---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-00-01---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---00-01----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---00-01----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-00-01---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---00-01---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---00-01----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--00-01---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---00011---------------- -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---00111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-00111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-00111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-00111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---00111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---00111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-00111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---00111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---00111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--00111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---010-1---------------- -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---01101---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-01101---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-01101---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-01101---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---01101----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---01101----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-01101---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---01101---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---01101----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--01101---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---01111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-01111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-01111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-01111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---01111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---01111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-01111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---01111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---01111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--01111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---1-0------------------ -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---1-1-0---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-1-1-0---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-1-1-0---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-1-1-0---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---1-1-0----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---1-1-0----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-1-1-0---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---1-1-0---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---1-1-0----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--1-1-0---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---10101---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-10101---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-10101---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-10101---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---10101----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---10101----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-10101---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---10101---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---10101----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--10101---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---10111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-10111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-10111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-10111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---10111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---10111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-10111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---10111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---10111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--10111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---11101---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-11101---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-11101---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-11101---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---11101----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---11101----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-11101---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---11101---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---11101----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--11101---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'---11111---------------0 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'00-11111---0----000-0--1 -> 8'00001000 16'0100000000010000
  transition: 8'00100000 24'00-11111---0-----10-0--1 -> 8'00000010 16'0100000000000100
  transition: 8'00100000 24'00-11111---0----1-0-0--1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'---11111----0-------1--1 -> 8'10000000 16'0100000100000000
  transition: 8'00100000 24'---11111----1-------1--1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'-1-11111---------------1 -> 8'01000000 16'0100000010000000
  transition: 8'00100000 24'---11111---1-----------1 -> 8'00000001 16'0100000000000010
  transition: 8'00100000 24'---11111----------1----1 -> 8'00000100 16'0100000000001000
  transition: 8'00100000 24'1--11111---------------1 -> 8'00001000 16'0100000000010000
  transition: 8'00001000 24'---0---0---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---0---0-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---0---0-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---0---0-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00-01---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00-01-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00-01-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---00-01-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00011---------------- -> 8'10000000 16'0001000100000000
  transition: 8'00001000 24'---00111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---00111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---00111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---010-1---------------- -> 8'10000000 16'0001000100000000
  transition: 8'00001000 24'---01101---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01101-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01101-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---01101-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---01111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---01111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---1-0------------------ -> 8'10000000 16'0001000100000000
  transition: 8'00001000 24'---1-1-0---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---1-1-0-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---1-1-0-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---1-1-0-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10101---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10101-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10101-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---10101-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---10111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---10111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11101---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11101-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11101-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---11101-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11111---------------0 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11111-------0-------1 -> 8'01000000 16'0001000010000000
  transition: 8'00001000 24'---11111-------1------01 -> 8'00001000 16'0001000000010000
  transition: 8'00001000 24'---11111-------1------11 -> 8'01000000 16'0001000010000000
  transition: 8'00000100 24'---0---0---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---0---0--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---0---0--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00-01---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00-01--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---00-01--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00011---------------- -> 8'10000000 16'0000100100000000
  transition: 8'00000100 24'---00111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---00111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---00111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---010-1---------------- -> 8'10000000 16'0000100100000000
  transition: 8'00000100 24'---01101---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---01101--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---01101--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---01111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---01111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---01111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---1-0------------------ -> 8'10000000 16'0000100100000000
  transition: 8'00000100 24'---1-1-0---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---1-1-0--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---1-1-0--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10101---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10101--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---10101--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---10111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---10111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11101---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11101--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---11101--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11111---------------0 -> 8'01000000 16'0000100010000000
  transition: 8'00000100 24'---11111--0------------1 -> 8'00000100 16'0000100000001000
  transition: 8'00000100 24'---11111--1------------1 -> 8'01000000 16'0000100010000000
  transition: 8'00000010 24'---0---0---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---0---0-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0---001-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0---011-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00-01---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00-01-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---00-0101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---00-0111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00011---------------- -> 8'10000000 16'0000010100000000
  transition: 8'00000010 24'---00111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---00111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0011101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0011111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---010-1---------------- -> 8'10000000 16'0000010100000000
  transition: 8'00000010 24'---01101---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---01101-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0110101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0110111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---01111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---01111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0111101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---0111111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---1-0------------------ -> 8'10000000 16'0000010100000000
  transition: 8'00000010 24'---1-1-0---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---1-1-0-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1-1-001-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1-1-011-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10101---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10101-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1010101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1010111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---10111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1011101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1011111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11101---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11101-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1110101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1110111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11111---------------0 -> 8'01000000 16'0000010010000000
  transition: 8'00000010 24'---11111-0-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1111101-------------1 -> 8'00000010 16'0000010000000100
  transition: 8'00000010 24'---1111111-------------1 -> 8'01000000 16'0000010010000000
  transition: 8'00000001 24'---0---0---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---0---0-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0---001-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0---011-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00-01---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00-01-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---00-0101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---00-0111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00011---------------- -> 8'10000000 16'0000001100000000
  transition: 8'00000001 24'---00111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---00111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0011101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0011111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---010-1---------------- -> 8'10000000 16'0000001100000000
  transition: 8'00000001 24'---01101---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---01101-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0110101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0110111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---01111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---01111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0111101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---0111111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---1-0------------------ -> 8'10000000 16'0000001100000000
  transition: 8'00000001 24'---1-1-0---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---1-1-0-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1-1-001-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1-1-011-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10101---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10101-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1010101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1010111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---10111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1011101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1011111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11101---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11101-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1110101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1110111-------------1 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11111---------------0 -> 8'01000000 16'0000001010000000
  transition: 8'00000001 24'---11111-0-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1111101-------------1 -> 8'00000001 16'0000001000000010
  transition: 8'00000001 24'---1111111-------------1 -> 8'01000000 16'0000001010000000
Extracting FSM `\soc.cpu.mem_wordsize' from module `\top'.
  found $dff cell for state register: $flatten\soc.\cpu.$procdff$6582
  root of input selection tree: $flatten\soc.\cpu.$0\mem_wordsize[1:0]
  found ctrl input: \soc.cpu.resetn
  found ctrl input: $flatten\soc.\cpu.$procmux$3044_CMP
  found ctrl input: $flatten\soc.\cpu.$procmux$3045_CMP
  found ctrl input: $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y
  found ctrl input: \soc.cpu.mem_do_rdata
  found ctrl input: \soc.cpu.instr_lw
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1882$2844_Y
  found ctrl input: $flatten\soc.\cpu.$logic_or$picorv32.v:1881$2843_Y
  found state code: 2'00
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \soc.cpu.mem_do_wdata
  found ctrl input: \soc.cpu.instr_sw
  found ctrl input: \soc.cpu.instr_sh
  found ctrl input: \soc.cpu.instr_sb
  found ctrl output: $flatten\soc.\cpu.$eq$picorv32.v:1918$2855_Y
  found ctrl output: $flatten\soc.\cpu.$eq$picorv32.v:1925$2862_Y
  found ctrl output: $flatten\soc.\cpu.$procmux$5672_CMP
  ctrl inputs: { $flatten\soc.\cpu.$procmux$3045_CMP $flatten\soc.\cpu.$procmux$3044_CMP $flatten\soc.\cpu.$logic_or$picorv32.v:1882$2844_Y $flatten\soc.\cpu.$logic_or$picorv32.v:1881$2843_Y $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y \soc.cpu.instr_sw \soc.cpu.instr_sh \soc.cpu.instr_sb \soc.cpu.instr_lw \soc.cpu.mem_do_wdata \soc.cpu.mem_do_rdata \soc.cpu.resetn }
  ctrl outputs: { $flatten\soc.\cpu.$procmux$5672_CMP $flatten\soc.\cpu.$eq$picorv32.v:1925$2862_Y $flatten\soc.\cpu.$eq$picorv32.v:1918$2855_Y $flatten\soc.\cpu.$0\mem_wordsize[1:0] }
  transition:       2'00 13'------------0 ->       2'00 5'00100
  transition:       2'00 13'00---0------1 ->       2'00 5'00100
  transition:       2'00 13'-----1------1 ->       2'00 5'00100
  transition:       2'00 13'1---0-------1 ->       2'00 5'00100
  transition:       2'00 13'1---1-000-0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1---1-0-1 ->       2'10 5'00110
  transition:       2'00 13'1---1--1--0-1 ->       2'01 5'00101
  transition:       2'00 13'1---1-1---0-1 ->       2'00 5'00100
  transition:       2'00 13'1---1-----1-1 ->       2'00 5'00100
  transition:       2'00 13'-1--0-------1 ->       2'00 5'00100
  transition:       2'00 13'-1001----0-01 ->       2'00 5'00100
  transition:       2'00 13'-1-11------01 ->       2'10 5'00110
  transition:       2'00 13'-11-1------01 ->       2'01 5'00101
  transition:       2'00 13'-1--1----1-01 ->       2'00 5'00100
  transition:       2'00 13'-1--1------11 ->       2'00 5'00100
  transition:       2'10 13'------------0 ->       2'10 5'10010
  transition:       2'10 13'00---0------1 ->       2'10 5'10010
  transition:       2'10 13'-----1------1 ->       2'00 5'10000
  transition:       2'10 13'1---0-------1 ->       2'10 5'10010
  transition:       2'10 13'1---1-000-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1---1-0-1 ->       2'10 5'10010
  transition:       2'10 13'1---1--1--0-1 ->       2'01 5'10001
  transition:       2'10 13'1---1-1---0-1 ->       2'00 5'10000
  transition:       2'10 13'1---1-----1-1 ->       2'10 5'10010
  transition:       2'10 13'-1--0-------1 ->       2'10 5'10010
  transition:       2'10 13'-1001----0-01 ->       2'10 5'10010
  transition:       2'10 13'-1-11------01 ->       2'10 5'10010
  transition:       2'10 13'-11-1------01 ->       2'01 5'10001
  transition:       2'10 13'-1--1----1-01 ->       2'00 5'10000
  transition:       2'10 13'-1--1------11 ->       2'10 5'10010
  transition:       2'01 13'------------0 ->       2'01 5'01001
  transition:       2'01 13'00---0------1 ->       2'01 5'01001
  transition:       2'01 13'-----1------1 ->       2'00 5'01000
  transition:       2'01 13'1---0-------1 ->       2'01 5'01001
  transition:       2'01 13'1---1-000-0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1---1-0-1 ->       2'10 5'01010
  transition:       2'01 13'1---1--1--0-1 ->       2'01 5'01001
  transition:       2'01 13'1---1-1---0-1 ->       2'00 5'01000
  transition:       2'01 13'1---1-----1-1 ->       2'01 5'01001
  transition:       2'01 13'-1--0-------1 ->       2'01 5'01001
  transition:       2'01 13'-1001----0-01 ->       2'01 5'01001
  transition:       2'01 13'-1-11------01 ->       2'10 5'01010
  transition:       2'01 13'-11-1------01 ->       2'01 5'01001
  transition:       2'01 13'-1--1----1-01 ->       2'00 5'01000
  transition:       2'01 13'-1--1------11 ->       2'01 5'01001
Extracting FSM `\soc.spimemio.state' from module `\top'.
  found $dff cell for state register: $flatten\soc.\spimemio.$procdff$6759
  root of input selection tree: $flatten\soc.\spimemio.$0\state[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: $flatten\soc.\spimemio.$logic_or$spimemio.v:211$69_Y
  found ctrl input: \soc.spimemio.jump
  found ctrl input: $flatten\soc.\spimemio.$procmux$6222_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6225_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6228_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6231_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6234_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6237_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6240_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6245_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6248_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6208_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6254_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6211_CMP
  found ctrl input: $flatten\soc.\spimemio.$procmux$6260_CMP
  found ctrl input: $flatten\soc.\spimemio.$logic_or$spimemio.v:350$87_Y
  found ctrl input: \soc.spimemio.xfer.din_ready
  found state code: 4'1001
  found state code: 4'1100
  found state code: 4'1011
  found state code: 4'1010
  found ctrl input: $flatten\soc.\spimemio.$logic_or$spimemio.v:310$83_Y
  found state code: 4'1000
  found state code: 4'0111
  found ctrl input: $flatten\soc.\spimemio.$logic_and$spimemio.v:282$82_Y
  found state code: 4'0110
  found state code: 4'0101
  found ctrl input: \soc.spimemio.dout_valid
  found state code: 4'0100
  found state code: 4'0011
  found state code: 4'0010
  found state code: 4'0001
  found ctrl input: \soc.spimemio.config_cont
  found state code: 4'0000
  found ctrl output: $flatten\soc.\spimemio.$procmux$6208_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6211_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6222_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6225_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6228_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6231_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6234_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6237_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6240_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6245_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6248_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6254_CMP
  found ctrl output: $flatten\soc.\spimemio.$procmux$6260_CMP
  ctrl inputs: { \soc.spimemio.xfer.din_ready $flatten\soc.\spimemio.$logic_or$spimemio.v:350$87_Y $flatten\soc.\spimemio.$logic_or$spimemio.v:310$83_Y $flatten\soc.\spimemio.$logic_and$spimemio.v:282$82_Y $flatten\soc.\spimemio.$logic_or$spimemio.v:211$69_Y \soc.spimemio.config_cont \soc.spimemio.jump \soc.spimemio.dout_valid }
  ctrl outputs: { $flatten\soc.\spimemio.$procmux$6260_CMP $flatten\soc.\spimemio.$procmux$6254_CMP $flatten\soc.\spimemio.$procmux$6248_CMP $flatten\soc.\spimemio.$procmux$6245_CMP $flatten\soc.\spimemio.$procmux$6240_CMP $flatten\soc.\spimemio.$procmux$6237_CMP $flatten\soc.\spimemio.$procmux$6234_CMP $flatten\soc.\spimemio.$procmux$6231_CMP $flatten\soc.\spimemio.$procmux$6228_CMP $flatten\soc.\spimemio.$procmux$6225_CMP $flatten\soc.\spimemio.$procmux$6222_CMP $flatten\soc.\spimemio.$procmux$6211_CMP $flatten\soc.\spimemio.$procmux$6208_CMP $flatten\soc.\spimemio.$0\state[3:0] }
  transition:     4'0000 8'0---0-0- ->     4'0000 17'10000000000000000
  transition:     4'0000 8'1---0-0- ->     4'0001 17'10000000000000001
  transition:     4'0000 8'----001- ->     4'0100 17'10000000000000100
  transition:     4'0000 8'----011- ->     4'0101 17'10000000000000101
  transition:     4'0000 8'----1--- ->     4'0000 17'10000000000000000
  transition:     4'1000 8'0---0-0- ->     4'1000 17'00000010000001000
  transition:     4'1000 8'1---0-0- ->     4'1001 17'00000010000001001
  transition:     4'1000 8'----001- ->     4'0100 17'00000010000000100
  transition:     4'1000 8'----011- ->     4'0101 17'00000010000000101
  transition:     4'1000 8'----1--- ->     4'0000 17'00000010000000000
  transition:     4'0100 8'0---0-0- ->     4'0100 17'00100000000000100
  transition:     4'0100 8'1---0-0- ->     4'0101 17'00100000000000101
  transition:     4'0100 8'----001- ->     4'0100 17'00100000000000100
  transition:     4'0100 8'----011- ->     4'0101 17'00100000000000101
  transition:     4'0100 8'----1--- ->     4'0000 17'00100000000000000
  transition:     4'1100 8'-0--0-0- ->     4'1100 17'00000000001001100
  transition:     4'1100 8'01--0-0- ->     4'1100 17'00000000001001100
  transition:     4'1100 8'11--0-0- ->     4'1001 17'00000000001001001
  transition:     4'1100 8'----001- ->     4'0100 17'00000000001000100
  transition:     4'1100 8'----011- ->     4'0101 17'00000000001000101
  transition:     4'1100 8'----1--- ->     4'0000 17'00000000001000000
  transition:     4'0010 8'0---0-0- ->     4'0010 17'01000000000000010
  transition:     4'0010 8'1---0-0- ->     4'0011 17'01000000000000011
  transition:     4'0010 8'----001- ->     4'0100 17'01000000000000100
  transition:     4'0010 8'----011- ->     4'0101 17'01000000000000101
  transition:     4'0010 8'----1--- ->     4'0000 17'01000000000000000
  transition:     4'1010 8'0---0-0- ->     4'1010 17'00000000100001010
  transition:     4'1010 8'1---0-0- ->     4'1011 17'00000000100001011
  transition:     4'1010 8'----001- ->     4'0100 17'00000000100000100
  transition:     4'1010 8'----011- ->     4'0101 17'00000000100000101
  transition:     4'1010 8'----1--- ->     4'0000 17'00000000100000000
  transition:     4'0110 8'0---0-0- ->     4'0110 17'00001000000000110
  transition:     4'0110 8'1---0-0- ->     4'0111 17'00001000000000111
  transition:     4'0110 8'----001- ->     4'0100 17'00001000000000100
  transition:     4'0110 8'----011- ->     4'0101 17'00001000000000101
  transition:     4'0110 8'----1--- ->     4'0000 17'00001000000000000
  transition:     4'0001 8'----0-00 ->     4'0001 17'00000000000100001
  transition:     4'0001 8'----0-01 ->     4'0010 17'00000000000100010
  transition:     4'0001 8'----001- ->     4'0100 17'00000000000100100
  transition:     4'0001 8'----011- ->     4'0101 17'00000000000100101
  transition:     4'0001 8'----1--- ->     4'0000 17'00000000000100000
  transition:     4'1001 8'0---0-0- ->     4'1001 17'00000001000001001
  transition:     4'1001 8'1---0-0- ->     4'1010 17'00000001000001010
  transition:     4'1001 8'----001- ->     4'0100 17'00000001000000100
  transition:     4'1001 8'----011- ->     4'0101 17'00000001000000101
  transition:     4'1001 8'----1--- ->     4'0000 17'00000001000000000
  transition:     4'0101 8'---00-0- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'0--10-0- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'1--10-0- ->     4'0110 17'00010000000000110
  transition:     4'0101 8'----001- ->     4'0100 17'00010000000000100
  transition:     4'0101 8'----011- ->     4'0101 17'00010000000000101
  transition:     4'0101 8'----1--- ->     4'0000 17'00010000000000000
  transition:     4'0011 8'----0-00 ->     4'0011 17'00000000000010011
  transition:     4'0011 8'----0-01 ->     4'0100 17'00000000000010100
  transition:     4'0011 8'----001- ->     4'0100 17'00000000000010100
  transition:     4'0011 8'----011- ->     4'0101 17'00000000000010101
  transition:     4'0011 8'----1--- ->     4'0000 17'00000000000010000
  transition:     4'1011 8'0---0-0- ->     4'1011 17'00000000010001011
  transition:     4'1011 8'1---0-0- ->     4'1100 17'00000000010001100
  transition:     4'1011 8'----001- ->     4'0100 17'00000000010000100
  transition:     4'1011 8'----011- ->     4'0101 17'00000000010000101
  transition:     4'1011 8'----1--- ->     4'0000 17'00000000010000000
  transition:     4'0111 8'0---0-0- ->     4'0111 17'00000100000000111
  transition:     4'0111 8'1-0-0-0- ->     4'1001 17'00000100000001001
  transition:     4'0111 8'1-1-0-0- ->     4'1000 17'00000100000001000
  transition:     4'0111 8'----001- ->     4'0100 17'00000100000000100
  transition:     4'0111 8'----011- ->     4'0101 17'00000100000000101
  transition:     4'0111 8'----1--- ->     4'0000 17'00000100000000000

8.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.spimemio.state$6908' from module `\top'.
Optimizing FSM `$fsm$\soc.cpu.mem_wordsize$6903' from module `\top'.
Optimizing FSM `$fsm$\soc.cpu.cpu_state$6893' from module `\top'.
  Merging pattern 24'---10101---------------1 and 24'---10111---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---01101---------------1 and 24'---01111---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---11101---------------1 and 24'---11111---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---10111---------------1 and 24'---10101---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---01111---------------1 and 24'---01101---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---11111---------------1 and 24'---11101---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---101-1---------------1 and 24'---111-1---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---111-1---------------1 and 24'---101-1---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---1-1-0---------------1 and 24'---1-1-1---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---1-1-1---------------1 and 24'---1-1-0---------------1 from group (0 0 16'1000000100000000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (0 1 16'1000000010000000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----00----1-1-1 and 24'---10111-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101-----00----1-1-1 and 24'---01111-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101-----00----1-1-1 and 24'---11111-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111-----00----1-1-1 and 24'---10101-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111-----00----1-1-1 and 24'---01101-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111-----00----1-1-1 and 24'---11101-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----00----0---1 and 24'---10111-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101-----00----0---1 and 24'---01111-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101-----00----0---1 and 24'---11111-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111-----00----0---1 and 24'---10101-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111-----00----0---1 and 24'---01101-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111-----00----0---1 and 24'---11101-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----10--------1 and 24'---10111-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101-----10--------1 and 24'---01111-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101-----10--------1 and 24'---11111-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111-----10--------1 and 24'---10101-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111-----10--------1 and 24'---01101-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111-----10--------1 and 24'---11101-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101------1--------1 and 24'---10111------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01101------1--------1 and 24'---01111------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11101------1--------1 and 24'---11111------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10111------1--------1 and 24'---10101------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---01111------1--------1 and 24'---01101------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---11111------1--------1 and 24'---11101------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1-----00----1-1-1 and 24'---111-1-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1-----00----1-1-1 and 24'---101-1-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1-----00----0---1 and 24'---111-1-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1-----00----0---1 and 24'---101-1-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1-----10--------1 and 24'---111-1-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1-----10--------1 and 24'---101-1-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---101-1------1--------1 and 24'---111-1------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---111-1------1--------1 and 24'---101-1------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0-----00----1-1-1 and 24'---1-1-1-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1-----00----1-1-1 and 24'---1-1-0-----00----1-1-1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0-----00----0---1 and 24'---1-1-1-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1-----00----0---1 and 24'---1-1-0-----00----0---1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0-----10--------1 and 24'---1-1-1-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1-----10--------1 and 24'---1-1-0-----10--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-0------1--------1 and 24'---1-1-1------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---1-1-1------1--------1 and 24'---1-1-0------1--------1 from group (1 1 16'0000000010000001).
  Merging pattern 24'---10101-----00----1-0-1 and 24'---10111-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---01101-----00----1-0-1 and 24'---01111-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---11101-----00----1-0-1 and 24'---11111-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---10111-----00----1-0-1 and 24'---10101-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---01111-----00----1-0-1 and 24'---01101-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---11111-----00----1-0-1 and 24'---11101-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---101-1-----00----1-0-1 and 24'---111-1-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---111-1-----00----1-0-1 and 24'---101-1-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---1-1-0-----00----1-0-1 and 24'---1-1-1-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---1-1-1-----00----1-0-1 and 24'---1-1-0-----00----1-0-1 from group (1 2 16'0000000001000001).
  Merging pattern 24'---10101----0-------1--1 and 24'---10111----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---01101----0-------1--1 and 24'---01111----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---11101----0-------1--1 and 24'---11111----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---10111----0-------1--1 and 24'---10101----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---01111----0-------1--1 and 24'---01101----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---11111----0-------1--1 and 24'---11101----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---101-1----0-------1--1 and 24'---111-1----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---111-1----0-------1--1 and 24'---101-1----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---1-1-0----0-------1--1 and 24'---1-1-1----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---1-1-1----0-------1--1 and 24'---1-1-0----0-------1--1 from group (2 0 16'0100000100000000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---10101----1-------1--1 and 24'---10111----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01101----1-------1--1 and 24'---01111----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11101----1-------1--1 and 24'---11111----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---10111----1-------1--1 and 24'---10101----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---01111----1-------1--1 and 24'---01101----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---11111----1-------1--1 and 24'---11101----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-10101---------------1 and 24'-1-10111---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-01101---------------1 and 24'-1-01111---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-11101---------------1 and 24'-1-11111---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-10111---------------1 and 24'-1-10101---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-01111---------------1 and 24'-1-01101---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-11111---------------1 and 24'-1-11101---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---101-1----1-------1--1 and 24'---111-1----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---111-1----1-------1--1 and 24'---101-1----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-101-1---------------1 and 24'-1-111-1---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-111-1---------------1 and 24'-1-101-1---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-0----1-------1--1 and 24'---1-1-1----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'---1-1-1----1-------1--1 and 24'---1-1-0----1-------1--1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-1-1-0---------------1 and 24'-1-1-1-1---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'-1-1-1-1---------------1 and 24'-1-1-1-0---------------1 from group (2 1 16'0100000010000000).
  Merging pattern 24'00-10101---0----000-0--1 and 24'00-10111---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-01101---0----000-0--1 and 24'00-01111---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-11101---0----000-0--1 and 24'00-11111---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-10111---0----000-0--1 and 24'00-10101---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-01111---0----000-0--1 and 24'00-01101---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-11111---0----000-0--1 and 24'00-11101---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--10101---------------1 and 24'1--10111---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--01101---------------1 and 24'1--01111---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--11101---------------1 and 24'1--11111---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--10111---------------1 and 24'1--10101---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--01111---------------1 and 24'1--01101---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--11111---------------1 and 24'1--11101---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-101-1---0----000-0--1 and 24'00-111-1---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-111-1---0----000-0--1 and 24'00-101-1---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--101-1---------------1 and 24'1--111-1---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--111-1---------------1 and 24'1--101-1---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-1-1-0---0----000-0--1 and 24'00-1-1-1---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-1-1-1---0----000-0--1 and 24'00-1-1-0---0----000-0--1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--1-1-0---------------1 and 24'1--1-1-1---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'1--1-1-1---------------1 and 24'1--1-1-0---------------1 from group (2 3 16'0100000000010000).
  Merging pattern 24'00-10101---0----1-0-0--1 and 24'00-10111---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-01101---0----1-0-0--1 and 24'00-01111---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-11101---0----1-0-0--1 and 24'00-11111---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-10111---0----1-0-0--1 and 24'00-10101---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-01111---0----1-0-0--1 and 24'00-01101---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-11111---0----1-0-0--1 and 24'00-11101---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---10101----------1----1 and 24'---10111----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---01101----------1----1 and 24'---01111----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---11101----------1----1 and 24'---11111----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---10111----------1----1 and 24'---10101----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---01111----------1----1 and 24'---01101----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---11111----------1----1 and 24'---11101----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-101-1---0----1-0-0--1 and 24'00-111-1---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-111-1---0----1-0-0--1 and 24'00-101-1---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---101-1----------1----1 and 24'---111-1----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---111-1----------1----1 and 24'---101-1----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-1-1-0---0----1-0-0--1 and 24'00-1-1-1---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-1-1-1---0----1-0-0--1 and 24'00-1-1-0---0----1-0-0--1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---1-1-0----------1----1 and 24'---1-1-1----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'---1-1-1----------1----1 and 24'---1-1-0----------1----1 from group (2 4 16'0100000000001000).
  Merging pattern 24'00-10101---0-----10-0--1 and 24'00-10111---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-01101---0-----10-0--1 and 24'00-01111---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-11101---0-----10-0--1 and 24'00-11111---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-10111---0-----10-0--1 and 24'00-10101---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-01111---0-----10-0--1 and 24'00-01101---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-11111---0-----10-0--1 and 24'00-11101---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-101-1---0-----10-0--1 and 24'00-111-1---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-111-1---0-----10-0--1 and 24'00-101-1---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-1-1-0---0-----10-0--1 and 24'00-1-1-1---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'00-1-1-1---0-----10-0--1 and 24'00-1-1-0---0-----10-0--1 from group (2 5 16'0100000000000100).
  Merging pattern 24'---10101---1-----------1 and 24'---10111---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---01101---1-----------1 and 24'---01111---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---11101---1-----------1 and 24'---11111---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---10111---1-----------1 and 24'---10101---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---01111---1-----------1 and 24'---01101---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---11111---1-----------1 and 24'---11101---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---101-1---1-----------1 and 24'---111-1---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---111-1---1-----------1 and 24'---101-1---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---1-1-0---1-----------1 and 24'---1-1-1---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---1-1-1---1-----------1 and 24'---1-1-0---1-----------1 from group (2 6 16'0100000000000010).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10101-------1------11 and 24'---10111-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01101-------1------11 and 24'---01111-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11101-------1------11 and 24'---11111-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10111-------1------11 and 24'---10101-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01111-------1------11 and 24'---01101-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11111-------1------11 and 24'---11101-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10101-------0-------1 and 24'---10111-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01101-------0-------1 and 24'---01111-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11101-------0-------1 and 24'---11111-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10111-------0-------1 and 24'---10101-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---01111-------0-------1 and 24'---01101-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---11111-------0-------1 and 24'---11101-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---101-1-------1------11 and 24'---111-1-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---111-1-------1------11 and 24'---101-1-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---101-1-------0-------1 and 24'---111-1-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---111-1-------0-------1 and 24'---101-1-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-0-------1------11 and 24'---1-1-1-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-1-------1------11 and 24'---1-1-0-------1------11 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-0-------0-------1 and 24'---1-1-1-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---1-1-1-------0-------1 and 24'---1-1-0-------0-------1 from group (3 1 16'0001000010000000).
  Merging pattern 24'---10101-------1------01 and 24'---10111-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---01101-------1------01 and 24'---01111-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---11101-------1------01 and 24'---11111-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---10111-------1------01 and 24'---10101-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---01111-------1------01 and 24'---01101-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---11111-------1------01 and 24'---11101-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---101-1-------1------01 and 24'---111-1-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---111-1-------1------01 and 24'---101-1-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---1-1-0-------1------01 and 24'---1-1-1-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---1-1-1-------1------01 and 24'---1-1-0-------1------01 from group (3 3 16'0001000000010000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10101--1------------1 and 24'---10111--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01101--1------------1 and 24'---01111--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11101--1------------1 and 24'---11111--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10111--1------------1 and 24'---10101--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---01111--1------------1 and 24'---01101--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---11111--1------------1 and 24'---11101--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---101-1--1------------1 and 24'---111-1--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---111-1--1------------1 and 24'---101-1--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-0--1------------1 and 24'---1-1-1--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---1-1-1--1------------1 and 24'---1-1-0--1------------1 from group (4 1 16'0000100010000000).
  Merging pattern 24'---10101--0------------1 and 24'---10111--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---01101--0------------1 and 24'---01111--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---11101--0------------1 and 24'---11111--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---10111--0------------1 and 24'---10101--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---01111--0------------1 and 24'---01101--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---11111--0------------1 and 24'---11101--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---101-1--0------------1 and 24'---111-1--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---111-1--0------------1 and 24'---101-1--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---1-1-0--0------------1 and 24'---1-1-1--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---1-1-1--0------------1 and 24'---1-1-0--0------------1 from group (4 4 16'0000100000001000).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1010111-------------1 and 24'---1011111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---0110111-------------1 and 24'---0111111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1110111-------------1 and 24'---1111111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1011111-------------1 and 24'---1010111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---0111111-------------1 and 24'---0110111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1111111-------------1 and 24'---1110111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---101-111-------------1 and 24'---111-111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---111-111-------------1 and 24'---101-111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-011-------------1 and 24'---1-1-111-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---1-1-111-------------1 and 24'---1-1-011-------------1 from group (5 1 16'0000010010000000).
  Merging pattern 24'---10101-0-------------1 and 24'---10111-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---01101-0-------------1 and 24'---01111-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---11101-0-------------1 and 24'---11111-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---10111-0-------------1 and 24'---10101-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---01111-0-------------1 and 24'---01101-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---11111-0-------------1 and 24'---11101-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1010101-------------1 and 24'---1011101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---0110101-------------1 and 24'---0111101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1110101-------------1 and 24'---1111101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1011101-------------1 and 24'---1010101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---0111101-------------1 and 24'---0110101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1111101-------------1 and 24'---1110101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---101-1-0-------------1 and 24'---111-1-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---111-1-0-------------1 and 24'---101-1-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---101-101-------------1 and 24'---111-101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---111-101-------------1 and 24'---101-101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-0-0-------------1 and 24'---1-1-1-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-1-0-------------1 and 24'---1-1-0-0-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-001-------------1 and 24'---1-1-101-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---1-1-101-------------1 and 24'---1-1-001-------------1 from group (5 5 16'0000010000000100).
  Merging pattern 24'---10101---------------0 and 24'---10111---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---01101---------------0 and 24'---01111---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---11101---------------0 and 24'---11111---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---10111---------------0 and 24'---10101---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---01111---------------0 and 24'---01101---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---11111---------------0 and 24'---11101---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1010111-------------1 and 24'---1011111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---0110111-------------1 and 24'---0111111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1110111-------------1 and 24'---1111111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1011111-------------1 and 24'---1010111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---0111111-------------1 and 24'---0110111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1111111-------------1 and 24'---1110111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---101-1---------------0 and 24'---111-1---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---111-1---------------0 and 24'---101-1---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---101-111-------------1 and 24'---111-111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---111-111-------------1 and 24'---101-111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-0---------------0 and 24'---1-1-1---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-1---------------0 and 24'---1-1-0---------------0 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-011-------------1 and 24'---1-1-111-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---1-1-111-------------1 and 24'---1-1-011-------------1 from group (6 1 16'0000001010000000).
  Merging pattern 24'---10101-0-------------1 and 24'---10111-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---01101-0-------------1 and 24'---01111-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---11101-0-------------1 and 24'---11111-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---10111-0-------------1 and 24'---10101-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---01111-0-------------1 and 24'---01101-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---11111-0-------------1 and 24'---11101-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1010101-------------1 and 24'---1011101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---0110101-------------1 and 24'---0111101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1110101-------------1 and 24'---1111101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1011101-------------1 and 24'---1010101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---0111101-------------1 and 24'---0110101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1111101-------------1 and 24'---1110101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---101-1-0-------------1 and 24'---111-1-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---111-1-0-------------1 and 24'---101-1-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---101-101-------------1 and 24'---111-101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---111-101-------------1 and 24'---101-101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-0-0-------------1 and 24'---1-1-1-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-1-0-------------1 and 24'---1-1-0-0-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-001-------------1 and 24'---1-1-101-------------1 from group (6 6 16'0000001000000010).
  Merging pattern 24'---1-1-101-------------1 and 24'---1-1-001-------------1 from group (6 6 16'0000001000000010).
  Removing unused input signal $auto$opt_reduce.cc:134:opt_mux$6880.

8.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 75 unused cells and 75 unused wires.
<suppressed ~76 debug messages>

8.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\soc.cpu.cpu_state$6893' from module `\top'.
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [0].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [1].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [2].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [3].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [4].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [5].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [6].
  Removing unused output signal $flatten\soc.\cpu.$0\cpu_state[7:0] [7].
Optimizing FSM `$fsm$\soc.cpu.mem_wordsize$6903' from module `\top'.
  Removing unused output signal $flatten\soc.\cpu.$0\mem_wordsize[1:0] [0].
  Removing unused output signal $flatten\soc.\cpu.$0\mem_wordsize[1:0] [1].
Optimizing FSM `$fsm$\soc.spimemio.state$6908' from module `\top'.
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [0].
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [1].
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [2].
  Removing unused output signal $flatten\soc.\spimemio.$0\state[3:0] [3].

8.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\soc.cpu.cpu_state$6893' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  10000000 -> ------1
  01000000 -> -----1-
  00100000 -> ----1--
  00001000 -> ---1---
  00000100 -> --1----
  00000010 -> -1-----
  00000001 -> 1------
Recoding FSM `$fsm$\soc.cpu.mem_wordsize$6903' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\soc.spimemio.state$6908' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------------1
  1000 -> -----------1-
  0100 -> ----------1--
  1100 -> ---------1---
  0010 -> --------1----
  1010 -> -------1-----
  0110 -> ------1------
  0001 -> -----1-------
  1001 -> ----1--------
  0101 -> ---1---------
  0011 -> --1----------
  1011 -> -1-----------
  0111 -> 1------------

8.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\soc.cpu.cpu_state$6893' from module `top':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.cpu_state$6893 (\soc.cpu.cpu_state):

  Number of input signals:   23
  Number of output signals:   8
  Number of state bits:       7

  Input signals:
    0: \soc.cpu.resetn
    1: \soc.cpu.mem_done
    2: \soc.cpu.instr_jal
    3: \soc.cpu.instr_trap
    4: \soc.cpu.decoder_trigger
    5: \soc.cpu.is_slli_srli_srai
    6: \soc.cpu.is_sb_sh_sw
    7: \soc.cpu.is_sll_srl_sra
    8: \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu
    9: $flatten\soc.\cpu.$logic_and$picorv32.v:1533$2752_Y
   10: $flatten\soc.\cpu.$logic_and$picorv32.v:1543$2760_Y
   11: $flatten\soc.\cpu.$logic_and$picorv32.v:1614$2775_Y
   12: $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y
   13: $flatten\soc.\cpu.$eq$picorv32.v:1826$2817_Y
   14: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y
   15: $flatten\soc.\cpu.$logic_and$picorv32.v:1867$2839_Y
   16: $flatten\soc.\cpu.$logic_and$picorv32.v:1917$2854_Y
   17: $flatten\soc.\cpu.$logic_and$picorv32.v:1918$2857_Y
   18: $flatten\soc.\cpu.$logic_and$picorv32.v:1920$2861_Y
   19: $flatten\soc.\cpu.$logic_and$picorv32.v:1925$2864_Y
   20: $flatten\soc.\cpu.$logic_and$picorv32.v:1933$2871_Y
   21: $auto$opt_reduce.cc:134:opt_mux$6796
   22: $auto$opt_reduce.cc:134:opt_mux$6798

  Output signals:
    0: $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y
    1: $flatten\soc.\cpu.$procmux$3044_CMP
    2: $flatten\soc.\cpu.$procmux$3045_CMP
    3: $flatten\soc.\cpu.$procmux$3046_CMP
    4: $flatten\soc.\cpu.$procmux$3047_CMP
    5: $flatten\soc.\cpu.$procmux$3048_CMP
    6: $flatten\soc.\cpu.$procmux$3049_CMP
    7: $flatten\soc.\cpu.$procmux$3051_CMP

  State encoding:
    0:  7'------1
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 23'--0---0---------------1   ->     0 8'10000000
      1:     0 23'--00-01---------------1   ->     0 8'10000000
      2:     0 23'--00111---------------1   ->     0 8'10000000
      3:     0 23'--011-1---------------1   ->     0 8'10000000
      4:     0 23'--1-1-----------------1   ->     0 8'10000000
      5:     0 23'--00011----------------   ->     0 8'10000000
      6:     0 23'--010-1----------------   ->     0 8'10000000
      7:     0 23'--1-0------------------   ->     0 8'10000000
      8:     0 23'--0---0---------------0   ->     1 8'10000000
      9:     0 23'--00-01---------------0   ->     1 8'10000000
     10:     0 23'--00111---------------0   ->     1 8'10000000
     11:     0 23'--011-1---------------0   ->     1 8'10000000
     12:     0 23'--1-1-----------------0   ->     1 8'10000000
     13:     1 23'--00011----------------   ->     0 8'00000001
     14:     1 23'--010-1----------------   ->     0 8'00000001
     15:     1 23'--1-0------------------   ->     0 8'00000001
     16:     1 23'--0---0---------------0   ->     1 8'00000001
     17:     1 23'--00-01---------------0   ->     1 8'00000001
     18:     1 23'--00111---------------0   ->     1 8'00000001
     19:     1 23'--011-1---------------0   ->     1 8'00000001
     20:     1 23'--1-1-----------------0   ->     1 8'00000001
     21:     1 23'--0---0-----00----1-1-1   ->     1 8'00000001
     22:     1 23'--00-01-----00----1-1-1   ->     1 8'00000001
     23:     1 23'--00111-----00----1-1-1   ->     1 8'00000001
     24:     1 23'--011-1-----00----1-1-1   ->     1 8'00000001
     25:     1 23'--1-1-------00----1-1-1   ->     1 8'00000001
     26:     1 23'--0---0-----00----0---1   ->     1 8'00000001
     27:     1 23'--00-01-----00----0---1   ->     1 8'00000001
     28:     1 23'--00111-----00----0---1   ->     1 8'00000001
     29:     1 23'--011-1-----00----0---1   ->     1 8'00000001
     30:     1 23'--1-1-------00----0---1   ->     1 8'00000001
     31:     1 23'--0---0-----10--------1   ->     1 8'00000001
     32:     1 23'--00-01-----10--------1   ->     1 8'00000001
     33:     1 23'--00111-----10--------1   ->     1 8'00000001
     34:     1 23'--011-1-----10--------1   ->     1 8'00000001
     35:     1 23'--1-1-------10--------1   ->     1 8'00000001
     36:     1 23'--0---0------1--------1   ->     1 8'00000001
     37:     1 23'--00-01------1--------1   ->     1 8'00000001
     38:     1 23'--00111------1--------1   ->     1 8'00000001
     39:     1 23'--011-1------1--------1   ->     1 8'00000001
     40:     1 23'--1-1--------1--------1   ->     1 8'00000001
     41:     1 23'--0---0-----00----1-0-1   ->     2 8'00000001
     42:     1 23'--00-01-----00----1-0-1   ->     2 8'00000001
     43:     1 23'--00111-----00----1-0-1   ->     2 8'00000001
     44:     1 23'--011-1-----00----1-0-1   ->     2 8'00000001
     45:     1 23'--1-1-------00----1-0-1   ->     2 8'00000001
     46:     2 23'--0---0----0-------1--1   ->     0 8'01000000
     47:     2 23'--00-01----0-------1--1   ->     0 8'01000000
     48:     2 23'--00111----0-------1--1   ->     0 8'01000000
     49:     2 23'--011-1----0-------1--1   ->     0 8'01000000
     50:     2 23'--1-1------0-------1--1   ->     0 8'01000000
     51:     2 23'--00011----------------   ->     0 8'01000000
     52:     2 23'--010-1----------------   ->     0 8'01000000
     53:     2 23'--1-0------------------   ->     0 8'01000000
     54:     2 23'--0---0---------------0   ->     1 8'01000000
     55:     2 23'--00-01---------------0   ->     1 8'01000000
     56:     2 23'--00111---------------0   ->     1 8'01000000
     57:     2 23'--011-1---------------0   ->     1 8'01000000
     58:     2 23'--1-1-----------------0   ->     1 8'01000000
     59:     2 23'--0---0----1-------1--1   ->     1 8'01000000
     60:     2 23'--00-01----1-------1--1   ->     1 8'01000000
     61:     2 23'--00111----1-------1--1   ->     1 8'01000000
     62:     2 23'--011-1----1-------1--1   ->     1 8'01000000
     63:     2 23'--1-1------1-------1--1   ->     1 8'01000000
     64:     2 23'-10---0---------------1   ->     1 8'01000000
     65:     2 23'-100-01---------------1   ->     1 8'01000000
     66:     2 23'-100111---------------1   ->     1 8'01000000
     67:     2 23'-1011-1---------------1   ->     1 8'01000000
     68:     2 23'-11-1-----------------1   ->     1 8'01000000
     69:     2 23'000---0---0----000-0--1   ->     3 8'01000000
     70:     2 23'0000-01---0----000-0--1   ->     3 8'01000000
     71:     2 23'0000111---0----000-0--1   ->     3 8'01000000
     72:     2 23'00011-1---0----000-0--1   ->     3 8'01000000
     73:     2 23'001-1-----0----000-0--1   ->     3 8'01000000
     74:     2 23'1-0---0---------------1   ->     3 8'01000000
     75:     2 23'1-00-01---------------1   ->     3 8'01000000
     76:     2 23'1-00111---------------1   ->     3 8'01000000
     77:     2 23'1-011-1---------------1   ->     3 8'01000000
     78:     2 23'1-1-1-----------------1   ->     3 8'01000000
     79:     2 23'000---0---0----1-0-0--1   ->     4 8'01000000
     80:     2 23'0000-01---0----1-0-0--1   ->     4 8'01000000
     81:     2 23'0000111---0----1-0-0--1   ->     4 8'01000000
     82:     2 23'00011-1---0----1-0-0--1   ->     4 8'01000000
     83:     2 23'001-1-----0----1-0-0--1   ->     4 8'01000000
     84:     2 23'--0---0----------1----1   ->     4 8'01000000
     85:     2 23'--00-01----------1----1   ->     4 8'01000000
     86:     2 23'--00111----------1----1   ->     4 8'01000000
     87:     2 23'--011-1----------1----1   ->     4 8'01000000
     88:     2 23'--1-1------------1----1   ->     4 8'01000000
     89:     2 23'000---0---0-----10-0--1   ->     5 8'01000000
     90:     2 23'0000-01---0-----10-0--1   ->     5 8'01000000
     91:     2 23'0000111---0-----10-0--1   ->     5 8'01000000
     92:     2 23'00011-1---0-----10-0--1   ->     5 8'01000000
     93:     2 23'001-1-----0-----10-0--1   ->     5 8'01000000
     94:     2 23'--0---0---1-----------1   ->     6 8'01000000
     95:     2 23'--00-01---1-----------1   ->     6 8'01000000
     96:     2 23'--00111---1-----------1   ->     6 8'01000000
     97:     2 23'--011-1---1-----------1   ->     6 8'01000000
     98:     2 23'--1-1-----1-----------1   ->     6 8'01000000
     99:     3 23'--00011----------------   ->     0 8'00010000
    100:     3 23'--010-1----------------   ->     0 8'00010000
    101:     3 23'--1-0------------------   ->     0 8'00010000
    102:     3 23'--0---0---------------0   ->     1 8'00010000
    103:     3 23'--00-01---------------0   ->     1 8'00010000
    104:     3 23'--00111---------------0   ->     1 8'00010000
    105:     3 23'--011-1---------------0   ->     1 8'00010000
    106:     3 23'--1-1-----------------0   ->     1 8'00010000
    107:     3 23'--0---0-------1------11   ->     1 8'00010000
    108:     3 23'--00-01-------1------11   ->     1 8'00010000
    109:     3 23'--00111-------1------11   ->     1 8'00010000
    110:     3 23'--011-1-------1------11   ->     1 8'00010000
    111:     3 23'--1-1---------1------11   ->     1 8'00010000
    112:     3 23'--0---0-------0-------1   ->     1 8'00010000
    113:     3 23'--00-01-------0-------1   ->     1 8'00010000
    114:     3 23'--00111-------0-------1   ->     1 8'00010000
    115:     3 23'--011-1-------0-------1   ->     1 8'00010000
    116:     3 23'--1-1---------0-------1   ->     1 8'00010000
    117:     3 23'--0---0-------1------01   ->     3 8'00010000
    118:     3 23'--00-01-------1------01   ->     3 8'00010000
    119:     3 23'--00111-------1------01   ->     3 8'00010000
    120:     3 23'--011-1-------1------01   ->     3 8'00010000
    121:     3 23'--1-1---------1------01   ->     3 8'00010000
    122:     4 23'--00011----------------   ->     0 8'00001000
    123:     4 23'--010-1----------------   ->     0 8'00001000
    124:     4 23'--1-0------------------   ->     0 8'00001000
    125:     4 23'--0---0---------------0   ->     1 8'00001000
    126:     4 23'--00-01---------------0   ->     1 8'00001000
    127:     4 23'--00111---------------0   ->     1 8'00001000
    128:     4 23'--011-1---------------0   ->     1 8'00001000
    129:     4 23'--1-1-----------------0   ->     1 8'00001000
    130:     4 23'--0---0--1------------1   ->     1 8'00001000
    131:     4 23'--00-01--1------------1   ->     1 8'00001000
    132:     4 23'--00111--1------------1   ->     1 8'00001000
    133:     4 23'--011-1--1------------1   ->     1 8'00001000
    134:     4 23'--1-1----1------------1   ->     1 8'00001000
    135:     4 23'--0---0--0------------1   ->     4 8'00001000
    136:     4 23'--00-01--0------------1   ->     4 8'00001000
    137:     4 23'--00111--0------------1   ->     4 8'00001000
    138:     4 23'--011-1--0------------1   ->     4 8'00001000
    139:     4 23'--1-1----0------------1   ->     4 8'00001000
    140:     5 23'--00011----------------   ->     0 8'00000100
    141:     5 23'--010-1----------------   ->     0 8'00000100
    142:     5 23'--1-0------------------   ->     0 8'00000100
    143:     5 23'--0---0---------------0   ->     1 8'00000100
    144:     5 23'--00-01---------------0   ->     1 8'00000100
    145:     5 23'--00111---------------0   ->     1 8'00000100
    146:     5 23'--011-1---------------0   ->     1 8'00000100
    147:     5 23'--1-1-----------------0   ->     1 8'00000100
    148:     5 23'--0---011-------------1   ->     1 8'00000100
    149:     5 23'--00-0111-------------1   ->     1 8'00000100
    150:     5 23'--0011111-------------1   ->     1 8'00000100
    151:     5 23'--011-111-------------1   ->     1 8'00000100
    152:     5 23'--1-1--11-------------1   ->     1 8'00000100
    153:     5 23'--0---0-0-------------1   ->     5 8'00000100
    154:     5 23'--00-01-0-------------1   ->     5 8'00000100
    155:     5 23'--00111-0-------------1   ->     5 8'00000100
    156:     5 23'--011-1-0-------------1   ->     5 8'00000100
    157:     5 23'--1-1---0-------------1   ->     5 8'00000100
    158:     5 23'--0---001-------------1   ->     5 8'00000100
    159:     5 23'--00-0101-------------1   ->     5 8'00000100
    160:     5 23'--0011101-------------1   ->     5 8'00000100
    161:     5 23'--011-101-------------1   ->     5 8'00000100
    162:     5 23'--1-1--01-------------1   ->     5 8'00000100
    163:     6 23'--00011----------------   ->     0 8'00000010
    164:     6 23'--010-1----------------   ->     0 8'00000010
    165:     6 23'--1-0------------------   ->     0 8'00000010
    166:     6 23'--0---0---------------0   ->     1 8'00000010
    167:     6 23'--00-01---------------0   ->     1 8'00000010
    168:     6 23'--00111---------------0   ->     1 8'00000010
    169:     6 23'--011-1---------------0   ->     1 8'00000010
    170:     6 23'--1-1-----------------0   ->     1 8'00000010
    171:     6 23'--0---011-------------1   ->     1 8'00000010
    172:     6 23'--00-0111-------------1   ->     1 8'00000010
    173:     6 23'--0011111-------------1   ->     1 8'00000010
    174:     6 23'--011-111-------------1   ->     1 8'00000010
    175:     6 23'--1-1--11-------------1   ->     1 8'00000010
    176:     6 23'--0---0-0-------------1   ->     6 8'00000010
    177:     6 23'--00-01-0-------------1   ->     6 8'00000010
    178:     6 23'--00111-0-------------1   ->     6 8'00000010
    179:     6 23'--011-1-0-------------1   ->     6 8'00000010
    180:     6 23'--1-1---0-------------1   ->     6 8'00000010
    181:     6 23'--0---001-------------1   ->     6 8'00000010
    182:     6 23'--00-0101-------------1   ->     6 8'00000010
    183:     6 23'--0011101-------------1   ->     6 8'00000010
    184:     6 23'--011-101-------------1   ->     6 8'00000010
    185:     6 23'--1-1--01-------------1   ->     6 8'00000010

-------------------------------------

FSM `$fsm$\soc.cpu.mem_wordsize$6903' from module `top':
-------------------------------------

  Information on FSM $fsm$\soc.cpu.mem_wordsize$6903 (\soc.cpu.mem_wordsize):

  Number of input signals:   13
  Number of output signals:   3
  Number of state bits:       3

  Input signals:
    0: \soc.cpu.resetn
    1: \soc.cpu.mem_do_rdata
    2: \soc.cpu.mem_do_wdata
    3: \soc.cpu.instr_lw
    4: \soc.cpu.instr_sb
    5: \soc.cpu.instr_sh
    6: \soc.cpu.instr_sw
    7: $flatten\soc.\cpu.$eq$picorv32.v:1308$2684_Y
    8: $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y
    9: $flatten\soc.\cpu.$logic_or$picorv32.v:1881$2843_Y
   10: $flatten\soc.\cpu.$logic_or$picorv32.v:1882$2844_Y
   11: $flatten\soc.\cpu.$procmux$3044_CMP
   12: $flatten\soc.\cpu.$procmux$3045_CMP

  Output signals:
    0: $flatten\soc.\cpu.$eq$picorv32.v:1918$2855_Y
    1: $flatten\soc.\cpu.$eq$picorv32.v:1925$2862_Y
    2: $flatten\soc.\cpu.$procmux$5672_CMP

  State encoding:
    0:      3'--1
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 13'------------0   ->     0 3'001
      1:     0 13'-1001----0-01   ->     0 3'001
      2:     0 13'-1--1----1-01   ->     0 3'001
      3:     0 13'-1--1------11   ->     0 3'001
      4:     0 13'1---1-000-0-1   ->     0 3'001
      5:     0 13'1---1-1---0-1   ->     0 3'001
      6:     0 13'1---1-----1-1   ->     0 3'001
      7:     0 13'00---0------1   ->     0 3'001
      8:     0 13'-----1------1   ->     0 3'001
      9:     0 13'-1--0-------1   ->     0 3'001
     10:     0 13'1---0-------1   ->     0 3'001
     11:     0 13'-1-11------01   ->     1 3'001
     12:     0 13'1---1---1-0-1   ->     1 3'001
     13:     0 13'-11-1------01   ->     2 3'001
     14:     0 13'1---1--1--0-1   ->     2 3'001
     15:     1 13'-1--1----1-01   ->     0 3'100
     16:     1 13'1---1-1---0-1   ->     0 3'100
     17:     1 13'-----1------1   ->     0 3'100
     18:     1 13'------------0   ->     1 3'100
     19:     1 13'-1001----0-01   ->     1 3'100
     20:     1 13'-1-11------01   ->     1 3'100
     21:     1 13'-1--1------11   ->     1 3'100
     22:     1 13'1---1-000-0-1   ->     1 3'100
     23:     1 13'1---1---1-0-1   ->     1 3'100
     24:     1 13'1---1-----1-1   ->     1 3'100
     25:     1 13'00---0------1   ->     1 3'100
     26:     1 13'-1--0-------1   ->     1 3'100
     27:     1 13'1---0-------1   ->     1 3'100
     28:     1 13'-11-1------01   ->     2 3'100
     29:     1 13'1---1--1--0-1   ->     2 3'100
     30:     2 13'-1--1----1-01   ->     0 3'010
     31:     2 13'1---1-1---0-1   ->     0 3'010
     32:     2 13'-----1------1   ->     0 3'010
     33:     2 13'-1-11------01   ->     1 3'010
     34:     2 13'1---1---1-0-1   ->     1 3'010
     35:     2 13'------------0   ->     2 3'010
     36:     2 13'-1001----0-01   ->     2 3'010
     37:     2 13'-11-1------01   ->     2 3'010
     38:     2 13'-1--1------11   ->     2 3'010
     39:     2 13'1---1-000-0-1   ->     2 3'010
     40:     2 13'1---1--1--0-1   ->     2 3'010
     41:     2 13'1---1-----1-1   ->     2 3'010
     42:     2 13'00---0------1   ->     2 3'010
     43:     2 13'-1--0-------1   ->     2 3'010
     44:     2 13'1---0-------1   ->     2 3'010

-------------------------------------

FSM `$fsm$\soc.spimemio.state$6908' from module `top':
-------------------------------------

  Information on FSM $fsm$\soc.spimemio.state$6908 (\soc.spimemio.state):

  Number of input signals:    8
  Number of output signals:  13
  Number of state bits:      13

  Input signals:
    0: \soc.spimemio.dout_valid
    1: \soc.spimemio.jump
    2: \soc.spimemio.config_cont
    3: $flatten\soc.\spimemio.$logic_or$spimemio.v:211$69_Y
    4: $flatten\soc.\spimemio.$logic_and$spimemio.v:282$82_Y
    5: $flatten\soc.\spimemio.$logic_or$spimemio.v:310$83_Y
    6: $flatten\soc.\spimemio.$logic_or$spimemio.v:350$87_Y
    7: \soc.spimemio.xfer.din_ready

  Output signals:
    0: $flatten\soc.\spimemio.$procmux$6208_CMP
    1: $flatten\soc.\spimemio.$procmux$6211_CMP
    2: $flatten\soc.\spimemio.$procmux$6222_CMP
    3: $flatten\soc.\spimemio.$procmux$6225_CMP
    4: $flatten\soc.\spimemio.$procmux$6228_CMP
    5: $flatten\soc.\spimemio.$procmux$6231_CMP
    6: $flatten\soc.\spimemio.$procmux$6234_CMP
    7: $flatten\soc.\spimemio.$procmux$6237_CMP
    8: $flatten\soc.\spimemio.$procmux$6240_CMP
    9: $flatten\soc.\spimemio.$procmux$6245_CMP
   10: $flatten\soc.\spimemio.$procmux$6248_CMP
   11: $flatten\soc.\spimemio.$procmux$6254_CMP
   12: $flatten\soc.\spimemio.$procmux$6260_CMP

  State encoding:
    0: 13'------------1  <RESET STATE>
    1: 13'-----------1-
    2: 13'----------1--
    3: 13'---------1---
    4: 13'--------1----
    5: 13'-------1-----
    6: 13'------1------
    7: 13'-----1-------
    8: 13'----1--------
    9: 13'---1---------
   10: 13'--1----------
   11: 13'-1-----------
   12: 13'1------------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'0---0-0-   ->     0 13'1000000000000
      1:     0 8'----1---   ->     0 13'1000000000000
      2:     0 8'----001-   ->     2 13'1000000000000
      3:     0 8'1---0-0-   ->     7 13'1000000000000
      4:     0 8'----011-   ->     9 13'1000000000000
      5:     1 8'----1---   ->     0 13'0000001000000
      6:     1 8'0---0-0-   ->     1 13'0000001000000
      7:     1 8'----001-   ->     2 13'0000001000000
      8:     1 8'1---0-0-   ->     8 13'0000001000000
      9:     1 8'----011-   ->     9 13'0000001000000
     10:     2 8'----1---   ->     0 13'0010000000000
     11:     2 8'0---0-0-   ->     2 13'0010000000000
     12:     2 8'----001-   ->     2 13'0010000000000
     13:     2 8'1---0-0-   ->     9 13'0010000000000
     14:     2 8'----011-   ->     9 13'0010000000000
     15:     3 8'----1---   ->     0 13'0000000000100
     16:     3 8'----001-   ->     2 13'0000000000100
     17:     3 8'-0--0-0-   ->     3 13'0000000000100
     18:     3 8'01--0-0-   ->     3 13'0000000000100
     19:     3 8'11--0-0-   ->     8 13'0000000000100
     20:     3 8'----011-   ->     9 13'0000000000100
     21:     4 8'----1---   ->     0 13'0100000000000
     22:     4 8'----001-   ->     2 13'0100000000000
     23:     4 8'0---0-0-   ->     4 13'0100000000000
     24:     4 8'----011-   ->     9 13'0100000000000
     25:     4 8'1---0-0-   ->    10 13'0100000000000
     26:     5 8'----1---   ->     0 13'0000000010000
     27:     5 8'----001-   ->     2 13'0000000010000
     28:     5 8'0---0-0-   ->     5 13'0000000010000
     29:     5 8'----011-   ->     9 13'0000000010000
     30:     5 8'1---0-0-   ->    11 13'0000000010000
     31:     6 8'----1---   ->     0 13'0000100000000
     32:     6 8'----001-   ->     2 13'0000100000000
     33:     6 8'0---0-0-   ->     6 13'0000100000000
     34:     6 8'----011-   ->     9 13'0000100000000
     35:     6 8'1---0-0-   ->    12 13'0000100000000
     36:     7 8'----1---   ->     0 13'0000000000010
     37:     7 8'----001-   ->     2 13'0000000000010
     38:     7 8'----0-01   ->     4 13'0000000000010
     39:     7 8'----0-00   ->     7 13'0000000000010
     40:     7 8'----011-   ->     9 13'0000000000010
     41:     8 8'----1---   ->     0 13'0000000100000
     42:     8 8'----001-   ->     2 13'0000000100000
     43:     8 8'1---0-0-   ->     5 13'0000000100000
     44:     8 8'0---0-0-   ->     8 13'0000000100000
     45:     8 8'----011-   ->     9 13'0000000100000
     46:     9 8'----1---   ->     0 13'0001000000000
     47:     9 8'----001-   ->     2 13'0001000000000
     48:     9 8'1--10-0-   ->     6 13'0001000000000
     49:     9 8'---00-0-   ->     9 13'0001000000000
     50:     9 8'0--10-0-   ->     9 13'0001000000000
     51:     9 8'----011-   ->     9 13'0001000000000
     52:    10 8'----1---   ->     0 13'0000000000001
     53:    10 8'----0-01   ->     2 13'0000000000001
     54:    10 8'----001-   ->     2 13'0000000000001
     55:    10 8'----011-   ->     9 13'0000000000001
     56:    10 8'----0-00   ->    10 13'0000000000001
     57:    11 8'----1---   ->     0 13'0000000001000
     58:    11 8'----001-   ->     2 13'0000000001000
     59:    11 8'1---0-0-   ->     3 13'0000000001000
     60:    11 8'----011-   ->     9 13'0000000001000
     61:    11 8'0---0-0-   ->    11 13'0000000001000
     62:    12 8'----1---   ->     0 13'0000010000000
     63:    12 8'1-1-0-0-   ->     1 13'0000010000000
     64:    12 8'----001-   ->     2 13'0000010000000
     65:    12 8'1-0-0-0-   ->     8 13'0000010000000
     66:    12 8'----011-   ->     9 13'0000010000000
     67:    12 8'0---0-0-   ->    12 13'0000010000000

-------------------------------------

8.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\soc.cpu.cpu_state$6893' from module `\top'.
Mapping FSM `$fsm$\soc.cpu.mem_wordsize$6903' from module `\top'.
Mapping FSM `$fsm$\soc.spimemio.state$6908' from module `\top'.

8.12. Executing OPT pass (performing simple optimizations).

8.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~18 debug messages>

8.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~144 debug messages>
Removed a total of 48 cells.

8.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 2/4 on $pmux $flatten\soc.\cpu.$procmux$3668.
    dead port 2/5 on $pmux $flatten\soc.\cpu.$procmux$4132.
    dead port 1/3 on $pmux $flatten\soc.\cpu.$procmux$4338.
Removed 3 multiplexer ports.
<suppressed ~259 debug messages>

8.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6877: { \soc.cpu.cpu_state [6:2] \soc.cpu.cpu_state [0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6789: { \soc.cpu.cpu_state [6:4] \soc.cpu.cpu_state [2:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6787: \soc.cpu.cpu_state [5:0]
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6785: { \soc.cpu.cpu_state [6] \soc.cpu.cpu_state [4:0] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$6779: { \soc.cpu.cpu_state [6:3] \soc.cpu.cpu_state [0] }
  Optimizing cells in module \top.
Performed a total of 5 changes.

8.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $procdff$6776 ($dff) from module top (D = { $procmux$6499_Y $procmux$6506_Y $procmux$6513_Y $procmux$6520_Y }, Q = \gpio_out, rval = 0).
Adding EN signal on $auto$opt_dff.cc:702:run$7716 ($sdff) from module top (D = \soc.cpu.mem_wdata [7:0], Q = \gpio_out [7:0]).
Adding EN signal on $auto$opt_dff.cc:702:run$7716 ($sdff) from module top (D = \soc.cpu.mem_wdata [15:8], Q = \gpio_out [15:8]).
Adding EN signal on $auto$opt_dff.cc:702:run$7716 ($sdff) from module top (D = \soc.cpu.mem_wdata [23:16], Q = \gpio_out [23:16]).
Adding EN signal on $auto$opt_dff.cc:702:run$7716 ($sdff) from module top (D = \soc.cpu.mem_wdata [31:24], Q = \gpio_out [31:24]).
Adding EN signal on $procdff$6775 ($dff) from module top (D = $procmux$6527_Y, Q = \iomem_rdata).
Adding SRST signal on $auto$opt_dff.cc:764:run$7733 ($dffe) from module top (D = $procmux$6525_Y, Q = \iomem_rdata, rval = 0).
Adding EN signal on $procdff$6774 ($dff) from module top (D = $procmux$6534_Y, Q = \iomem_ready).
Adding SRST signal on $auto$opt_dff.cc:764:run$7735 ($dffe) from module top (D = $procmux$6532_Y, Q = \iomem_ready, rval = 1'1).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6742 ($dff) from module top (D = \soc.spimemio.xfer.fetch, Q = \soc.spimemio.xfer.last_fetch, rval = 1'1).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6741 ($dff) from module top (D = \soc.spimemio.xfer.next_fetch, Q = \soc.spimemio.xfer.fetch, rval = 1'1).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6740 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5844_Y, Q = \soc.spimemio.xfer.xfer_tag, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7741 ($sdff) from module top (D = \soc.spimemio.din_tag, Q = \soc.spimemio.xfer.xfer_tag).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6739 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5849_Y, Q = \soc.spimemio.xfer.xfer_rd, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7743 ($sdff) from module top (D = \soc.spimemio.din_rd, Q = \soc.spimemio.xfer.xfer_rd).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6738 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5854_Y, Q = \soc.spimemio.xfer.xfer_qspi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7745 ($sdff) from module top (D = \soc.spimemio.din_qspi, Q = \soc.spimemio.xfer.xfer_qspi).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6736 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5867_Y, Q = \soc.spimemio.xfer.dummy_count, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7747 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5867_Y, Q = \soc.spimemio.xfer.dummy_count).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6735 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5877_Y [3], Q = \soc.spimemio.xfer.count [3], rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6735 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5875_Y [2:0], Q = \soc.spimemio.xfer.count [2:0], rval = 3'000).
Adding EN signal on $auto$opt_dff.cc:702:run$7756 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$2\next_count[3:0] [2:0], Q = \soc.spimemio.xfer.count [2:0]).
Adding EN signal on $auto$opt_dff.cc:702:run$7751 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5877_Y [3], Q = \soc.spimemio.xfer.count [3]).
Adding EN signal on $flatten\soc.\spimemio.\xfer.$procdff$6734 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$2\next_ibuffer[7:0], Q = \soc.spimemio.xfer.ibuffer).
Adding EN signal on $flatten\soc.\spimemio.\xfer.$procdff$6733 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5895_Y, Q = \soc.spimemio.xfer.obuffer).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6732 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5900_Y, Q = \soc.spimemio.xfer.xfer_ddr, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7805 ($sdff) from module top (D = \soc.spimemio.xfer.din_ddr, Q = \soc.spimemio.xfer.xfer_ddr).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6731 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5905_Y, Q = \soc.spimemio.xfer.xfer_dspi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7807 ($sdff) from module top (D = \soc.spimemio.xfer.din_dspi, Q = \soc.spimemio.xfer.xfer_dspi).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6730 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5913_Y, Q = \soc.spimemio.xfer.flash_clk, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7813 ($sdff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5913_Y, Q = \soc.spimemio.xfer.flash_clk).
Adding SRST signal on $flatten\soc.\spimemio.\xfer.$procdff$6729 ($dff) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$5920_Y, Q = \soc.spimemio.xfer.flash_csb, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$7817 ($sdff) from module top (D = 1'0, Q = \soc.spimemio.xfer.flash_csb).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6773 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6452_Y, Q = \soc.spimemio.config_do, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7819 ($sdff) from module top (D = \soc.cpu.mem_wdata [3:0], Q = \soc.spimemio.config_do).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6772 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6457_Y, Q = \soc.spimemio.config_clk, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7821 ($sdff) from module top (D = \soc.cpu.mem_wdata [4], Q = \soc.spimemio.config_clk).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6771 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6462_Y, Q = \soc.spimemio.config_csb, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7823 ($sdff) from module top (D = \soc.cpu.mem_wdata [5], Q = \soc.spimemio.config_csb).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6770 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6467_Y, Q = \soc.spimemio.config_oe, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7825 ($sdff) from module top (D = \soc.cpu.mem_wdata [11:8], Q = \soc.spimemio.config_oe).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6769 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6472_Y, Q = \soc.spimemio.config_dummy, rval = 4'1000).
Adding EN signal on $auto$opt_dff.cc:702:run$7827 ($sdff) from module top (D = \soc.cpu.mem_wdata [19:16], Q = \soc.spimemio.config_dummy).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6768 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6477_Y, Q = \soc.spimemio.config_cont, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7829 ($sdff) from module top (D = \soc.cpu.mem_wdata [20], Q = \soc.spimemio.config_cont).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6767 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6482_Y, Q = \soc.spimemio.config_qspi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7831 ($sdff) from module top (D = \soc.cpu.mem_wdata [21], Q = \soc.spimemio.config_qspi).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6766 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6487_Y, Q = \soc.spimemio.config_ddr, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7833 ($sdff) from module top (D = \soc.cpu.mem_wdata [22], Q = \soc.spimemio.config_ddr).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6765 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6492_Y, Q = \soc.spimemio.config_en, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$7835 ($sdff) from module top (D = \soc.cpu.mem_wdata [31], Q = \soc.spimemio.config_en).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6764 ($dff) from module top (D = $flatten\soc.\spimemio.$logic_or$spimemio.v:100$47_Y, Q = \soc.spimemio.softreset, rval = 1'1).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6758 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6281_Y, Q = \soc.spimemio.rd_inc).
Adding SRST signal on $auto$opt_dff.cc:764:run$7844 ($dffe) from module top (D = $flatten\soc.\spimemio.$procmux$6269_Y, Q = \soc.spimemio.rd_inc, rval = 1'0).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6757 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6288_Y, Q = \soc.spimemio.rd_wait).
Adding SRST signal on $auto$opt_dff.cc:764:run$7854 ($dffe) from module top (D = $flatten\soc.\spimemio.$procmux$6286_Y, Q = \soc.spimemio.rd_wait, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6756 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6293_Y, Q = \soc.spimemio.rd_valid, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7858 ($sdff) from module top (D = 1'1, Q = \soc.spimemio.rd_valid).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6755 ($dff) from module top (D = $flatten\soc.\spimemio.$ternary$spimemio.v:226$80_Y [23:0], Q = \soc.spimemio.rd_addr).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6754 ($dff) from module top (D = \soc.spimemio.xfer.ibuffer, Q = \soc.spimemio.buffer [7:0]).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6754 ($dff) from module top (D = \soc.spimemio.xfer.ibuffer, Q = \soc.spimemio.buffer [15:8]).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6754 ($dff) from module top (D = \soc.spimemio.xfer.ibuffer, Q = \soc.spimemio.buffer [23:16]).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6753 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6352_Y, Q = \soc.spimemio.din_rd, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7882 ($sdff) from module top (D = 1'1, Q = \soc.spimemio.din_rd).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6752 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6373_Y, Q = \soc.spimemio.din_ddr, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6751 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6392_Y, Q = \soc.spimemio.din_qspi, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6749 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6402_Y, Q = \soc.spimemio.din_tag, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7888 ($sdff) from module top (D = $flatten\soc.\spimemio.$procmux$6402_Y, Q = \soc.spimemio.din_tag).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6748 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6421_Y, Q = \soc.spimemio.din_data).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6747 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6309_Y, Q = \soc.spimemio.din_valid, rval = 1'0).
Adding SRST signal on $flatten\soc.\spimemio.$procdff$6746 ($dff) from module top (D = $flatten\soc.\spimemio.$procmux$6207_Y, Q = \soc.spimemio.xfer_resetn, rval = 1'0).
Adding EN signal on $flatten\soc.\spimemio.$procdff$6745 ($dff) from module top (D = { \soc.spimemio.xfer.ibuffer \soc.spimemio.buffer }, Q = \soc.spimemio.rdata).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6728 ($dff) from module top (D = { $flatten\soc.\simpleuart.$procmux$5818_Y $flatten\soc.\simpleuart.$procmux$5823_Y $flatten\soc.\simpleuart.$procmux$5828_Y $flatten\soc.\simpleuart.$procmux$5833_Y }, Q = \soc.simpleuart.cfg_divider, rval = 1).
Adding EN signal on $auto$opt_dff.cc:702:run$7916 ($sdff) from module top (D = \soc.cpu.mem_wdata [7:0], Q = \soc.simpleuart.cfg_divider [7:0]).
Adding EN signal on $auto$opt_dff.cc:702:run$7916 ($sdff) from module top (D = \soc.cpu.mem_wdata [15:8], Q = \soc.simpleuart.cfg_divider [15:8]).
Adding EN signal on $auto$opt_dff.cc:702:run$7916 ($sdff) from module top (D = \soc.cpu.mem_wdata [23:16], Q = \soc.simpleuart.cfg_divider [23:16]).
Adding EN signal on $auto$opt_dff.cc:702:run$7916 ($sdff) from module top (D = \soc.cpu.mem_wdata [31:24], Q = \soc.simpleuart.cfg_divider [31:24]).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6727 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5779_Y, Q = \soc.simpleuart.recv_buf_valid, rval = 1'0).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6726 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5787_Y, Q = \soc.simpleuart.recv_buf_data, rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$7922 ($sdff) from module top (D = \soc.simpleuart.recv_pattern, Q = \soc.simpleuart.recv_buf_data).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6725 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5795_Y, Q = \soc.simpleuart.recv_pattern, rval = 8'00000000).
Adding EN signal on $auto$opt_dff.cc:702:run$7926 ($sdff) from module top (D = { \UART_RX \soc.simpleuart.recv_pattern [7:1] }, Q = \soc.simpleuart.recv_pattern).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6724 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5765_Y, Q = \soc.simpleuart.recv_divcnt, rval = 0).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6723 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5807_Y, Q = \soc.simpleuart.recv_state, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7933 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$5807_Y, Q = \soc.simpleuart.recv_state).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6722 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5735_Y, Q = \soc.simpleuart.send_dummy, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$7945 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$5735_Y, Q = \soc.simpleuart.send_dummy).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6721 ($dff) from module top (D = $flatten\soc.\simpleuart.$add$simpleuart.v:112$154_Y, Q = \soc.simpleuart.send_divcnt, rval = 0).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6720 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5746_Y, Q = \soc.simpleuart.send_bitcnt, rval = 4'0000).
Adding EN signal on $auto$opt_dff.cc:702:run$7954 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$5746_Y, Q = \soc.simpleuart.send_bitcnt).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6719 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5751_Y [9], Q = \soc.simpleuart.send_pattern [9], rval = 1'1).
Adding SRST signal on $flatten\soc.\simpleuart.$procdff$6719 ($dff) from module top (D = $flatten\soc.\simpleuart.$procmux$5754_Y [8:0], Q = \soc.simpleuart.send_pattern [8:0], rval = 9'111111111).
Adding EN signal on $auto$opt_dff.cc:702:run$7967 ($sdff) from module top (D = $flatten\soc.\simpleuart.$procmux$5754_Y [8:0], Q = \soc.simpleuart.send_pattern [8:0]).
Adding EN signal on $auto$opt_dff.cc:702:run$7962 ($sdff) from module top (D = 1'1, Q = \soc.simpleuart.send_pattern [9]).
Setting constant 1-bit at position 0 on $auto$opt_dff.cc:764:run$7971 ($sdffe) from module top.
Adding SRST signal on $flatten\soc.\cpu.$procdff$6714 ($dff) from module top (D = $flatten\soc.$logic_and$picosoc.v:206$1516_Y, Q = \soc.cpu.last_mem_valid, rval = 1'0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6713 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5698_Y, Q = \soc.cpu.mem_la_firstword_reg, rval = 1'0).
Adding EN signal on $flatten\soc.\cpu.$procdff$6712 ($dff) from module top (D = \soc.cpu.mem_rdata_latched [6:0], Q = \soc.cpu.mem_rdata_q [6:0]).
Adding EN signal on $flatten\soc.\cpu.$procdff$6710 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5330_Y, Q = \soc.cpu.mem_16bit_buffer).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6709 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5351_Y, Q = \soc.cpu.prefetched_high_word, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7988 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$5342_Y, Q = \soc.cpu.prefetched_high_word).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6708 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5365_Y, Q = \soc.cpu.mem_la_secondword, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$7996 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$5361_Y, Q = \soc.cpu.mem_la_secondword).
Adding EN signal on $flatten\soc.\cpu.$procdff$6707 ($dff) from module top (D = $flatten\soc.\cpu.$0\mem_state[1:0], Q = \soc.cpu.mem_state).
Adding EN signal on $flatten\soc.\cpu.$procdff$6706 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5400_Y, Q = \soc.cpu.mem_wstrb).
Adding EN signal on $flatten\soc.\cpu.$procdff$6705 ($dff) from module top (D = \soc.cpu.mem_la_wdata, Q = \soc.cpu.mem_wdata).
Adding EN signal on $flatten\soc.\cpu.$procdff$6704 ($dff) from module top (D = \soc.cpu.mem_la_addr, Q = \soc.cpu.mem_addr).
Adding EN signal on $flatten\soc.\cpu.$procdff$6702 ($dff) from module top (D = $flatten\soc.\cpu.$0\mem_valid[0:0], Q = \soc.cpu.mem_valid).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6686 ($dff) from module top (D = $flatten\soc.\cpu.$reduce_or$picorv32.v:862$2389_Y, Q = \soc.cpu.is_compare, rval = 1'0).
Adding EN signal on $flatten\soc.\cpu.$procdff$6685 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4733_Y, Q = \soc.cpu.is_alu_reg_reg).
Adding EN signal on $flatten\soc.\cpu.$procdff$6684 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4769_Y, Q = \soc.cpu.is_alu_reg_imm).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6682 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4781_Y, Q = \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8048 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$4779_Y, Q = \soc.cpu.is_beq_bne_blt_bge_bltu_bgeu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6679 ($dff) from module top (D = $flatten\soc.\cpu.$reduce_or$picorv32.v:858$2385_Y, Q = \soc.cpu.is_lui_auipc_jal_jalr_addi_add_sub, rval = 1'0).
Adding EN signal on $flatten\soc.\cpu.$procdff$6678 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1107$2638_Y, Q = \soc.cpu.is_sll_srl_sra).
Adding EN signal on $flatten\soc.\cpu.$procdff$6677 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4794_Y, Q = \soc.cpu.is_sb_sh_sw).
Adding EN signal on $flatten\soc.\cpu.$procdff$6676 ($dff) from module top (D = $flatten\soc.\cpu.$logic_or$picorv32.v:1098$2627_Y, Q = \soc.cpu.is_jalr_addi_slti_sltiu_xori_ori_andi).
Adding EN signal on $flatten\soc.\cpu.$procdff$6675 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1092$2618_Y, Q = \soc.cpu.is_slli_srli_srai).
Adding EN signal on $flatten\soc.\cpu.$procdff$6674 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4814_Y, Q = \soc.cpu.is_lb_lh_lw_lbu_lhu).
Adding EN signal on $flatten\soc.\cpu.$procdff$6672 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4818_Y, Q = \soc.cpu.compressed_instr).
Adding EN signal on $flatten\soc.\cpu.$procdff$6671 ($dff) from module top (D = { $flatten\soc.\cpu.$procmux$4651_Y $flatten\soc.\cpu.$procmux$4864_Y $flatten\soc.\cpu.$procmux$4659_Y $flatten\soc.\cpu.$procmux$4627_Y $flatten\soc.\cpu.$procmux$4647_Y $flatten\soc.\cpu.$procmux$4631_Y $flatten\soc.\cpu.$procmux$4635_Y $flatten\soc.\cpu.$procmux$4643_Y $flatten\soc.\cpu.$procmux$4655_Y $flatten\soc.\cpu.$procmux$4639_Y 1'0 }, Q = \soc.cpu.decoded_imm_j).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$8057 ($dffe) from module top.
Adding EN signal on $flatten\soc.\cpu.$procdff$6670 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4827_Y, Q = \soc.cpu.decoded_imm).
Adding EN signal on $flatten\soc.\cpu.$procdff$6669 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4860_Y, Q = \soc.cpu.decoded_rs2).
Adding EN signal on $flatten\soc.\cpu.$procdff$6668 ($dff) from module top (D = { $flatten\soc.\cpu.$procmux$4623_Y $flatten\soc.\cpu.$procmux$4710_Y }, Q = \soc.cpu.decoded_rs1).
Adding EN signal on $flatten\soc.\cpu.$procdff$6667 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4911_Y, Q = \soc.cpu.decoded_rd).
Adding EN signal on $flatten\soc.\cpu.$procdff$6666 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1090$2605_Y, Q = \soc.cpu.instr_timer).
Adding EN signal on $flatten\soc.\cpu.$procdff$6665 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:870$2403_Y, Q = \soc.cpu.instr_waitirq).
Adding EN signal on $flatten\soc.\cpu.$procdff$6664 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1089$2601_Y, Q = \soc.cpu.instr_maskirq).
Adding EN signal on $flatten\soc.\cpu.$procdff$6663 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:869$2399_Y, Q = \soc.cpu.instr_retirq).
Adding EN signal on $flatten\soc.\cpu.$procdff$6662 ($dff) from module top (D = 1'0, Q = \soc.cpu.instr_setq).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$8066 ($dffe) from module top.
Adding EN signal on $flatten\soc.\cpu.$procdff$6661 ($dff) from module top (D = 1'0, Q = \soc.cpu.instr_getq).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$8067 ($dffe) from module top.
Adding EN signal on $flatten\soc.\cpu.$procdff$6659 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1082$2578_Y, Q = \soc.cpu.instr_rdinstrh).
Adding EN signal on $flatten\soc.\cpu.$procdff$6658 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1081$2574_Y, Q = \soc.cpu.instr_rdinstr).
Adding EN signal on $flatten\soc.\cpu.$procdff$6657 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1079$2570_Y, Q = \soc.cpu.instr_rdcycleh).
Adding EN signal on $flatten\soc.\cpu.$procdff$6656 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1077$2562_Y, Q = \soc.cpu.instr_rdcycle).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6655 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4937_Y, Q = \soc.cpu.instr_and, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8072 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1075$2554_Y, Q = \soc.cpu.instr_and).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6654 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4941_Y, Q = \soc.cpu.instr_or, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8074 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1074$2550_Y, Q = \soc.cpu.instr_or).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6653 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4945_Y, Q = \soc.cpu.instr_sra, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8076 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1073$2546_Y, Q = \soc.cpu.instr_sra).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6652 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4949_Y, Q = \soc.cpu.instr_srl, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8078 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1072$2542_Y, Q = \soc.cpu.instr_srl).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6651 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4953_Y, Q = \soc.cpu.instr_xor, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8080 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1071$2538_Y, Q = \soc.cpu.instr_xor).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6650 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4957_Y, Q = \soc.cpu.instr_sltu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8082 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1070$2534_Y, Q = \soc.cpu.instr_sltu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6649 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4961_Y, Q = \soc.cpu.instr_slt, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8084 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1069$2530_Y, Q = \soc.cpu.instr_slt).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6648 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4965_Y, Q = \soc.cpu.instr_sll, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8086 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1068$2526_Y, Q = \soc.cpu.instr_sll).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6647 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4969_Y, Q = \soc.cpu.instr_sub, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8088 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1067$2522_Y, Q = \soc.cpu.instr_sub).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6646 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4973_Y, Q = \soc.cpu.instr_add, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8090 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1066$2518_Y, Q = \soc.cpu.instr_add).
Adding EN signal on $flatten\soc.\cpu.$procdff$6645 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1064$2514_Y, Q = \soc.cpu.instr_srai).
Adding EN signal on $flatten\soc.\cpu.$procdff$6644 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1063$2510_Y, Q = \soc.cpu.instr_srli).
Adding EN signal on $flatten\soc.\cpu.$procdff$6643 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1062$2506_Y, Q = \soc.cpu.instr_slli).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6642 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4983_Y, Q = \soc.cpu.instr_andi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8095 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1060$2502_Y, Q = \soc.cpu.instr_andi).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6641 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4987_Y, Q = \soc.cpu.instr_ori, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8097 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1059$2500_Y, Q = \soc.cpu.instr_ori).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6640 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4991_Y, Q = \soc.cpu.instr_xori, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8099 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1058$2498_Y, Q = \soc.cpu.instr_xori).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6639 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4995_Y, Q = \soc.cpu.instr_sltiu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8101 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1057$2496_Y, Q = \soc.cpu.instr_sltiu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6638 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4999_Y, Q = \soc.cpu.instr_slti, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8103 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1056$2494_Y, Q = \soc.cpu.instr_slti).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6637 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5003_Y, Q = \soc.cpu.instr_addi, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8105 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1055$2492_Y, Q = \soc.cpu.instr_addi).
Adding EN signal on $flatten\soc.\cpu.$procdff$6636 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1053$2490_Y, Q = \soc.cpu.instr_sw).
Adding EN signal on $flatten\soc.\cpu.$procdff$6635 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1052$2488_Y, Q = \soc.cpu.instr_sh).
Adding EN signal on $flatten\soc.\cpu.$procdff$6634 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1051$2486_Y, Q = \soc.cpu.instr_sb).
Adding EN signal on $flatten\soc.\cpu.$procdff$6633 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1049$2484_Y, Q = \soc.cpu.instr_lhu).
Adding EN signal on $flatten\soc.\cpu.$procdff$6632 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1048$2482_Y, Q = \soc.cpu.instr_lbu).
Adding EN signal on $flatten\soc.\cpu.$procdff$6631 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1047$2480_Y, Q = \soc.cpu.instr_lw).
Adding EN signal on $flatten\soc.\cpu.$procdff$6630 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1046$2478_Y, Q = \soc.cpu.instr_lh).
Adding EN signal on $flatten\soc.\cpu.$procdff$6629 ($dff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1045$2476_Y, Q = \soc.cpu.instr_lb).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6628 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5023_Y, Q = \soc.cpu.instr_bgeu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8115 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1043$2474_Y, Q = \soc.cpu.instr_bgeu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6627 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5027_Y, Q = \soc.cpu.instr_bltu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8117 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1042$2472_Y, Q = \soc.cpu.instr_bltu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6626 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5031_Y, Q = \soc.cpu.instr_bge, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8119 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1041$2470_Y, Q = \soc.cpu.instr_bge).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6625 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5035_Y, Q = \soc.cpu.instr_blt, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8121 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1040$2468_Y, Q = \soc.cpu.instr_blt).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6624 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5039_Y, Q = \soc.cpu.instr_bne, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8123 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1039$2466_Y, Q = \soc.cpu.instr_bne).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6623 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5043_Y, Q = \soc.cpu.instr_beq, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8125 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1038$2464_Y, Q = \soc.cpu.instr_beq).
Adding EN signal on $flatten\soc.\cpu.$procdff$6622 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5056_Y, Q = \soc.cpu.instr_jalr).
Adding EN signal on $flatten\soc.\cpu.$procdff$6621 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5068_Y, Q = \soc.cpu.instr_jal).
Adding EN signal on $flatten\soc.\cpu.$procdff$6620 ($dff) from module top (D = $flatten\soc.\cpu.$eq$picorv32.v:866$2392_Y, Q = \soc.cpu.instr_auipc).
Adding EN signal on $flatten\soc.\cpu.$procdff$6619 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$5088_Y, Q = \soc.cpu.instr_lui).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6612 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3464_Y, Q = \soc.cpu.do_waitirq, rval = 1'0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6608 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3714_Y, Q = \soc.cpu.latched_rd, rval = 5'00010).
Adding EN signal on $auto$opt_dff.cc:702:run$8140 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3714_Y, Q = \soc.cpu.latched_rd).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6607 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3740_Y, Q = \soc.cpu.latched_is_lb, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8148 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3740_Y, Q = \soc.cpu.latched_is_lb).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6606 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3753_Y, Q = \soc.cpu.latched_is_lh, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8158 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3753_Y, Q = \soc.cpu.latched_is_lh).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6605 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3766_Y, Q = \soc.cpu.latched_is_lu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8168 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3766_Y, Q = \soc.cpu.latched_is_lu).
Adding EN signal on $flatten\soc.\cpu.$procdff$6603 ($dff) from module top (D = \soc.cpu.compressed_instr, Q = \soc.cpu.latched_compr).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6602 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3811_Y, Q = \soc.cpu.latched_branch, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8183 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3811_Y, Q = \soc.cpu.latched_branch).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6601 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3847_Y, Q = \soc.cpu.latched_stalu, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8191 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3847_Y, Q = \soc.cpu.latched_stalu).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6600 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3854_Y, Q = \soc.cpu.latched_store, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$8199 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$3854_Y, Q = \soc.cpu.latched_store).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6596 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3908_Y, Q = \soc.cpu.irq_state, rval = 2'00).
Adding EN signal on $auto$opt_dff.cc:702:run$8207 ($sdff) from module top (D = $flatten\soc.\cpu.$ternary$picorv32.v:1535$2756_Y, Q = \soc.cpu.irq_state).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6589 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3478_Y, Q = \soc.cpu.decoder_pseudo_trigger, rval = 1'0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6586 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4118_Y, Q = \soc.cpu.mem_do_wdata, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$8214 ($sdff) from module top (D = 1'0, Q = \soc.cpu.mem_do_wdata).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6585 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4122_Y, Q = \soc.cpu.mem_do_rdata, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$8216 ($sdff) from module top (D = 1'0, Q = \soc.cpu.mem_do_rdata).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6584 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4193_Y, Q = \soc.cpu.mem_do_rinst, rval = 1'1).
Adding EN signal on $auto$opt_dff.cc:702:run$8218 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$4193_Y, Q = \soc.cpu.mem_do_rinst).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6583 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4218_Y, Q = \soc.cpu.mem_do_prefetch, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8232 ($sdff) from module top (D = $flatten\soc.\cpu.$logic_and$picorv32.v:1568$2770_Y, Q = \soc.cpu.mem_do_prefetch).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6581 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4266_Y, Q = \soc.cpu.timer, rval = 0).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6579 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4284_Y, Q = \soc.cpu.irq_mask, rval = 32'11111111111111111111111111111111).
Adding EN signal on $auto$opt_dff.cc:702:run$8243 ($sdff) from module top (D = \soc.cpu.cpuregs_rs1, Q = \soc.cpu.irq_mask).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6578 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4303_Y, Q = \soc.cpu.irq_active, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8247 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$4303_Y, Q = \soc.cpu.irq_active).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6577 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4328_Y, Q = \soc.cpu.irq_delay, rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$8257 ($sdff) from module top (D = \soc.cpu.irq_active, Q = \soc.cpu.irq_delay).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6575 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3612_Y, Q = \soc.cpu.reg_out, rval = 8192).
Adding EN signal on $flatten\soc.\cpu.$procdff$6574 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4341_Y, Q = \soc.cpu.reg_op2).
Adding EN signal on $flatten\soc.\cpu.$procdff$6573 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4364_Y [31], Q = \soc.cpu.reg_op1 [31]).
Adding EN signal on $flatten\soc.\cpu.$procdff$6573 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4364_Y [30:0], Q = \soc.cpu.reg_op1 [30:0]).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6572 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4428_Y, Q = \soc.cpu.reg_next_pc, rval = 1048576).
Adding EN signal on $auto$opt_dff.cc:702:run$8311 ($sdff) from module top (D = $flatten\soc.\cpu.$procmux$4426_Y, Q = \soc.cpu.reg_next_pc).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6571 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4440_Y, Q = \soc.cpu.reg_pc, rval = 1048576).
Adding EN signal on $auto$opt_dff.cc:702:run$8313 ($sdff) from module top (D = $flatten\soc.\cpu.$3\current_pc[31:0], Q = \soc.cpu.reg_pc).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6570 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$4460_Y, Q = \soc.cpu.count_instr, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding EN signal on $auto$opt_dff.cc:702:run$8315 ($sdff) from module top (D = $flatten\soc.\cpu.$add$picorv32.v:1559$2766_Y, Q = \soc.cpu.count_instr).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6569 ($dff) from module top (D = $flatten\soc.\cpu.$add$picorv32.v:1428$2712_Y, Q = \soc.cpu.count_cycle, rval = 64'0000000000000000000000000000000000000000000000000000000000000000).
Adding SRST signal on $flatten\soc.\cpu.$procdff$6564 ($dff) from module top (D = $flatten\soc.\cpu.$procmux$3696_Y, Q = \soc.cpu.trap, rval = 1'0).
Adding SRST signal on $flatten\display.$procdff$6563 ($dff) from module top (D = $flatten\display.$sub$display.v:61$1092_Y [23:0], Q = \display.second_timer_state, rval = 24'101101110001101011111111).
Adding EN signal on $flatten\display.$procdff$6562 ($dff) from module top (D = $flatten\display.$not$display.v:56$1091_Y, Q = \display.second_toggle).
Adding SRST signal on $flatten\display.$procdff$6560 ($dff) from module top (D = $flatten\display.$sub$display.v:91$1095_Y [23:0], Q = \display.refresh_timer_state, rval = 24'000000000000111100000000).

8.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 295 unused cells and 356 unused wires.
<suppressed ~297 debug messages>

8.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~29 debug messages>

8.12.9. Rerunning OPT passes. (Maybe there is more to do..)

8.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~158 debug messages>

8.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:277:combine_resets$8212: { $flatten\soc.\cpu.$logic_or$picorv32.v:1852$2835_Y $auto$fsm_map.cc:102:implement_pattern_cache$7146 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$8309: { $auto$opt_dff.cc:217:make_patterns_logic$8292 $auto$opt_dff.cc:217:make_patterns_logic$8294 $auto$opt_dff.cc:217:make_patterns_logic$8296 $auto$opt_dff.cc:217:make_patterns_logic$8298 $auto$opt_dff.cc:217:make_patterns_logic$8300 $auto$opt_dff.cc:217:make_patterns_logic$8302 $auto$opt_dff.cc:217:make_patterns_logic$8304 $auto$opt_dff.cc:217:make_patterns_logic$8306 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$8290: { $auto$opt_dff.cc:217:make_patterns_logic$8269 $auto$opt_dff.cc:217:make_patterns_logic$8271 $auto$opt_dff.cc:217:make_patterns_logic$8273 $auto$opt_dff.cc:217:make_patterns_logic$8275 $auto$opt_dff.cc:217:make_patterns_logic$8277 $auto$opt_dff.cc:217:make_patterns_logic$8279 $auto$opt_dff.cc:217:make_patterns_logic$8281 $auto$opt_dff.cc:217:make_patterns_logic$8283 $auto$opt_dff.cc:217:make_patterns_logic$8285 $auto$opt_dff.cc:217:make_patterns_logic$8287 \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$8267: { \soc.cpu.cpu_state [2] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$8240: { $auto$rtlil.cc:2127:Not$8234 $auto$rtlil.cc:2127:Not$8236 $auto$rtlil.cc:2127:Not$8238 \soc.cpu.cpu_state [1] \soc.cpu.decoder_trigger \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$8181: { $auto$rtlil.cc:2127:Not$8179 \soc.cpu.cpu_state [1] \reset_cnt }
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$7732: { $auto$opt_dff.cc:217:make_patterns_logic$7729 \reset_cnt }
  Optimizing cells in module \top.
Performed a total of 7 changes.

8.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~165 debug messages>
Removed a total of 55 cells.

8.12.13. Executing OPT_DFF pass (perform DFF optimizations).

8.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

8.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.12.16. Rerunning OPT passes. (Maybe there is more to do..)

8.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~158 debug messages>

8.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.12.20. Executing OPT_DFF pass (perform DFF optimizations).

8.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.12.23. Finished OPT passes. (There is nothing left to do.)

8.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 5 bits (of 6) from port B of cell top.$add$top.v:67$4 ($add).
Removed top 31 bits (of 32) from port A of cell top.$or$top.v:120$9 ($or).
Removed top 30 bits (of 32) from port B of cell top.$or$top.v:120$9 ($or).
Removed top 30 bits (of 32) from port Y of cell top.$or$top.v:120$9 ($or).
Removed top 30 bits (of 32) from port A of cell top.$or$top.v:120$12 ($or).
Removed top 29 bits (of 32) from port B of cell top.$or$top.v:120$12 ($or).
Removed top 29 bits (of 32) from port Y of cell top.$or$top.v:120$12 ($or).
Removed top 29 bits (of 32) from port A of cell top.$or$top.v:120$15 ($or).
Removed top 28 bits (of 32) from port B of cell top.$or$top.v:120$15 ($or).
Removed top 28 bits (of 32) from port Y of cell top.$or$top.v:120$15 ($or).
Removed top 28 bits (of 32) from port A of cell top.$or$top.v:120$18 ($or).
Removed top 27 bits (of 32) from port B of cell top.$or$top.v:120$18 ($or).
Removed top 27 bits (of 32) from port Y of cell top.$or$top.v:120$18 ($or).
Removed top 6 bits (of 8) from port B of cell top.$eq$top.v:141$23 ($eq).
Removed top 5 bits (of 8) from port B of cell top.$eq$top.v:154$27 ($eq).
Removed cell top.$procmux$6525 ($mux).
Removed top 27 bits (of 32) from FF cell top.$auto$opt_dff.cc:702:run$7734 ($sdffce).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6928 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6932 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\display.$procmux$2964_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\display.$procmux$2958_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\display.$procmux$2953_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\display.$procmux$2952_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\display.$procmux$2951_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\display.$procmux$2950_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\display.$procmux$2949_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\display.$procmux$2948_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\display.$procmux$2947_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\display.$sub$display.v:91$1095 ($sub).
Removed top 8 bits (of 32) from port Y of cell top.$flatten\display.$sub$display.v:91$1095 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\display.$sub$display.v:61$1092 ($sub).
Removed top 8 bits (of 32) from port Y of cell top.$flatten\display.$sub$display.v:61$1092 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$7765 ($ne).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6977 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6979 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6981 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6985 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6989 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6993 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7606 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7613 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$7769 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7622 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$7771 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$7795 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$7793 ($ne).
Removed top 1 bits (of 9) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$7791 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7687 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7679 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6948 ($eq).
Removed top 2 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7204 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7217 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7157 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7225 ($eq).
Removed top 1 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7208 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7221 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7163 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7085 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7089 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7093 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7097 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7105 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7109 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7113 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7117 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7125 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7129 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7133 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7137 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7145 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7151 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7077 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7196 ($eq).
Removed top 3 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7200 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7229 ($eq).
Removed top 9 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7237 ($eq).
Removed top 5 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7241 ($eq).
Removed top 4 bits (of 13) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7245 ($eq).
Removed top 3 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7249 ($eq).
Removed top 2 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7253 ($eq).
Removed top 5 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7278 ($eq).
Removed top 5 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7282 ($eq).
Removed top 4 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7286 ($eq).
Removed top 3 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7290 ($eq).
Removed top 2 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7294 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7298 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7302 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7306 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7310 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7318 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7322 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7326 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7330 ($eq).
Removed top 5 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7339 ($eq).
Removed top 5 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7343 ($eq).
Removed top 4 bits (of 12) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7347 ($eq).
Removed top 3 bits (of 11) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7351 ($eq).
Removed top 2 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7355 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6952 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6956 ($eq).
Removed top 4 bits (of 8) from FF cell top.$auto$opt_dff.cc:764:run$7725 ($sdffe).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6960 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6968 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6970 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7400 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7404 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7408 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7412 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7420 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7424 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7428 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7432 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7440 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7444 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7448 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7452 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7565 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7073 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:74$145 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:99$151 ($add).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:99$151 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$add$simpleuart.v:112$154 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\simpleuart.$sub$simpleuart.v:132$162 ($sub).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\soc.\simpleuart.$sub$simpleuart.v:132$162 ($sub).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5732 ($mux).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5740 ($mux).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5751 ($mux).
Removed top 1 bits (of 10) from mux cell top.$flatten\soc.\simpleuart.$procmux$5754 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\soc.\simpleuart.$procmux$5769_CMP0 ($eq).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5802 ($mux).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5805 ($mux).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5809 ($mux).
Removed cell top.$flatten\soc.\simpleuart.$procmux$5812 ($mux).
Removed top 3 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:221$70 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:222$72 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:223$74 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.$eq$spimemio.v:224$76 ($eq).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\spimemio.$add$spimemio.v:226$78 ($add).
Removed top 7 bits (of 32) from port Y of cell top.$flatten\soc.\spimemio.$add$spimemio.v:226$78 ($add).
Removed top 8 bits (of 32) from mux cell top.$flatten\soc.\spimemio.$ternary$spimemio.v:226$80 ($mux).
Removed top 1 bits (of 8) from mux cell top.$flatten\soc.\spimemio.$ternary$spimemio.v:316$85 ($mux).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7069 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7065 ($eq).
Removed top 1 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7057 ($eq).
Removed top 2 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7053 ($eq).
Removed top 3 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7049 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7045 ($eq).
Removed cell top.$flatten\soc.\spimemio.$procmux$6269 ($mux).
Removed cell top.$flatten\soc.\spimemio.$procmux$6286 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$8037 ($ne).
Removed cell top.$flatten\soc.\spimemio.$procmux$6400 ($mux).
Removed cell top.$flatten\soc.\spimemio.$procmux$6410 ($mux).
Removed top 2 bits (of 4) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$8007 ($ne).
Removed cell top.$flatten\soc.\spimemio.$procmux$6430 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\spimemio.$procmux$6436_CMP0 ($eq).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6155 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\soc.\spimemio.\xfer.$procmux$6149 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6065 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6055 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6045 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6027 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6015 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6007 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$6005 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5991 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5980 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5973 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5971 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5954 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5941 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5936 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\spimemio.\xfer.$procmux$5934_CMP0 ($eq).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5932 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5930 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5910 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5893 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5890 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\soc.\spimemio.\xfer.$procmux$5875 ($mux).
Removed top 1 bits (of 4) from mux cell top.$flatten\soc.\spimemio.\xfer.$procmux$5872 ($mux).
Removed cell top.$flatten\soc.\spimemio.\xfer.$procmux$5865 ($mux).
Removed top 28 bits (of 32) from mux cell top.$flatten\soc.\spimemio.\xfer.$ternary$spimemio.v:567$136 ($mux).
Removed top 2 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$119 ($sub).
Removed top 1 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$107 ($sub).
Removed top 3 bits (of 4) from port B of cell top.$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$100 ($sub).
Removed top 16 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:388$2303 ($mux).
Removed top 16 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:386$2305 ($mux).
Removed top 3 bits (of 4) from port A of cell top.$flatten\soc.\cpu.$shl$picorv32.v:419$2313 ($shl).
Removed top 3 bits (of 5) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:465$2318 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:478$2320 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:486$2322 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:488$2324 ($eq).
Removed top 1 bits (of 7) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:491$2328 ($mux).
Removed top 30 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:617$2372 ($mux).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:865$2391 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:866$2392 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:869$2397 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:869$2398 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:870$2402 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:873$2406 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:874$2407 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:875$2408 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:876$2409 ($eq).
Removed top 28 bits (of 32) from port A of cell top.$flatten\soc.\cpu.$add$picorv32.v:906$2422 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$add$picorv32.v:906$2422 ($add).
Removed top 28 bits (of 32) from port A of cell top.$flatten\soc.\cpu.$add$picorv32.v:910$2423 ($add).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$add$picorv32.v:910$2423 ($add).
Removed top 2 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1039$2465 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1047$2479 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1057$2495 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1064$2513 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1089$2599 ($eq).
Removed top 5 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1089$2600 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1090$2604 ($eq).
Removed top 29 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:1312$2685 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1312$2686 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1428$2712 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1438$2717 ($sub).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$eq$picorv32.v:1536$2754 ($eq).
Removed top 29 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:1541$2757 ($mux).
Removed top 29 bits (of 32) from mux cell top.$flatten\soc.\cpu.$ternary$picorv32.v:1547$2762 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1547$2763 ($add).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$add$picorv32.v:1559$2766 ($add).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$ge$picorv32.v:1830$2818 ($ge).
Removed top 29 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1837$2826 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1837$2826 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1845$2833 ($sub).
Removed top 27 bits (of 32) from port Y of cell top.$flatten\soc.\cpu.$sub$picorv32.v:1845$2833 ($sub).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7037 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7033 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7029 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6940 ($eq).
Removed cell top.$flatten\soc.\cpu.$procmux$3350 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3353 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3608 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3610 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3615 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3648 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3650 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3653 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3666 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3686 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3709 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3736 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3738 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3749 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3751 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3762 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3764 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3819 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3842 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$3877 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7025 ($eq).
Removed top 1 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7017 ($eq).
Removed top 2 bits (of 10) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7013 ($eq).
Removed top 3 bits (of 9) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7009 ($eq).
Removed cell top.$flatten\soc.\cpu.$procmux$4130 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4191 ($mux).
Removed top 4 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$7005 ($eq).
Removed cell top.$flatten\soc.\cpu.$procmux$4301 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4307 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4360 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4362 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4368 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4370 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4387 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$4528 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$procmux$4616_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$procmux$4618_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$procmux$4621_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell top.$flatten\soc.\cpu.$procmux$4679 ($mux).
Removed top 2 bits (of 3) from port B of cell top.$flatten\soc.\cpu.$procmux$4903_CMP0 ($eq).
Removed cell top.$flatten\soc.\cpu.$procmux$5323 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5325 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5328 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5330 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$procmux$5335_CMP0 ($eq).
Removed cell top.$flatten\soc.\cpu.$procmux$5370 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5374 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5378 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5380 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5383 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5389 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5428 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5435 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5438 ($mux).
Removed cell top.$flatten\soc.\cpu.$procmux$5444 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$8226 ($ne).
Removed top 2 bits (of 7) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$8222 ($ne).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:218:make_patterns_logic$8203 ($ne).
Removed top 2 bits (of 6) from mux cell top.$flatten\soc.\cpu.$procmux$5650 ($mux).
Removed top 24 bits (of 32) from mux cell top.$flatten\soc.\cpu.$procmux$5666 ($pmux).
Removed top 1 bits (of 2) from port B of cell top.$flatten\soc.\cpu.$procmux$5669_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6936 ($eq).
Removed top 16 bits (of 32) from mux cell top.$flatten\soc.\cpu.$procmux$5675 ($pmux).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$6997 ($eq).
Removed cell top.$flatten\soc.\cpu.\cpuregs.$procmux$5719 ($mux).
Removed cell top.$flatten\soc.\cpu.\cpuregs.$procmux$5716 ($mux).
Removed top 18 bits (of 32) from port B of cell top.$flatten\soc.$lt$picosoc.v:206$1517 ($lt).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$lt$picosoc.v:159$1507 ($lt).
Removed top 18 bits (of 32) from port B of cell top.$flatten\soc.$ge$picosoc.v:159$1505 ($ge).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$eq$picosoc.v:121$1488 ($eq).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$eq$picosoc.v:118$1486 ($eq).
Removed top 6 bits (of 32) from port B of cell top.$flatten\soc.$eq$picosoc.v:115$1484 ($eq).
Removed top 7 bits (of 8) from port B of cell top.$flatten\soc.$gt$picosoc.v:110$1482 ($gt).
Removed top 7 bits (of 32) from port B of cell top.$flatten\soc.\spimemio.$ne$spimemio.v:72$42 ($ne).
Removed top 8 bits (of 32) from wire top.$flatten\display.$sub$display.v:61$1092_Y.
Removed top 8 bits (of 32) from wire top.$flatten\display.$sub$display.v:91$1095_Y.
Removed top 16 bits (of 32) from wire top.$flatten\soc.\cpu.$2\mem_rdata_word[31:0].
Removed top 24 bits (of 32) from wire top.$flatten\soc.\cpu.$3\mem_rdata_word[31:0].
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$add$picorv32.v:906$2422_Y.
Removed top 2 bits (of 4) from wire top.$flatten\soc.\cpu.$procmux$4679_Y.
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$sub$picorv32.v:1837$2826_Y.
Removed top 27 bits (of 32) from wire top.$flatten\soc.\cpu.$sub$picorv32.v:1845$2833_Y.
Removed top 29 bits (of 32) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:1312$2685_Y.
Removed top 29 bits (of 32) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:1541$2757_Y.
Removed top 29 bits (of 32) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:1547$2762_Y.
Removed top 1 bits (of 7) from wire top.$flatten\soc.\cpu.$ternary$picorv32.v:491$2328_Y.
Removed top 2 bits (of 10) from wire top.$flatten\soc.\simpleuart.$procmux$5751_Y.
Removed top 1 bits (of 10) from wire top.$flatten\soc.\simpleuart.$procmux$5754_Y.
Removed top 7 bits (of 32) from wire top.$flatten\soc.\spimemio.$add$spimemio.v:226$78_Y.
Removed top 8 bits (of 32) from wire top.$flatten\soc.\spimemio.$ternary$spimemio.v:226$80_Y.
Removed top 3 bits (of 4) from wire top.$flatten\soc.\spimemio.\xfer.$reduce_or$spimemio.v:471$99_Y.
Removed top 28 bits (of 32) from wire top.$flatten\soc.\spimemio.\xfer.$ternary$spimemio.v:567$136_Y.
Removed top 5 bits (of 6) from wire top.$logic_not$top.v:67$3_Y.
Removed top 29 bits (of 32) from wire top.$or$top.v:120$12_Y.
Removed top 28 bits (of 32) from wire top.$or$top.v:120$15_Y.
Removed top 30 bits (of 32) from wire top.$or$top.v:120$9_Y.
Removed top 27 bits (of 32) from wire top.$procmux$6525_Y.
Removed top 27 bits (of 32) from wire top.gpio_in.
Removed top 12 bits (of 32) from wire top.gpio_out.
Removed top 27 bits (of 32) from wire top.iomem_rdata.

8.14. Executing PEEPOPT pass (run peephole optimizers).

8.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 107 unused wires.
<suppressed ~2 debug messages>

8.16. Executing SHARE pass (SAT-based resource sharing).
Found 2 cells in module top that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$215 ($memrd):
    Found 2 activation_patterns using ctrl signal { $auto$opt_reduce.cc:134:opt_mux$6808 $auto$opt_reduce.cc:134:opt_mux$6798 $auto$opt_reduce.cc:134:opt_mux$6792 \soc.cpu.cpu_state [2] $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$2700_Y \soc.cpu.is_slli_srli_srai }.
    Found 1 candidates: $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$214
    Analyzing resource sharing with $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$214 ($memrd):
      Found 1 activation_patterns using ctrl signal $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$2698_Y.
      Activation pattern for cell $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$215: { $auto$opt_reduce.cc:134:opt_mux$6808 $auto$opt_reduce.cc:134:opt_mux$6798 $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$2700_Y } = 3'001
      Activation pattern for cell $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$215: { $auto$opt_reduce.cc:134:opt_mux$6792 \soc.cpu.cpu_state [2] $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$2700_Y \soc.cpu.is_slli_srli_srai } = 4'0110
      Activation pattern for cell $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$214: $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$2698_Y = 1'1
      Adding exclusive control bits: \soc.cpu.instr_maskirq vs. \soc.cpu.instr_timer
      Adding exclusive control bits: \soc.cpu.instr_retirq vs. \soc.cpu.instr_timer
      Adding exclusive control bits: \soc.cpu.instr_retirq vs. \soc.cpu.instr_maskirq
      Adding exclusive control bits: \soc.cpu.instr_rdinstr vs. \soc.cpu.instr_rdinstrh
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdinstrh
      Adding exclusive control bits: \soc.cpu.instr_rdcycleh vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdcycle vs. \soc.cpu.instr_rdinstrh
      Adding exclusive control bits: \soc.cpu.instr_rdcycle vs. \soc.cpu.instr_rdinstr
      Adding exclusive control bits: \soc.cpu.instr_rdcycle vs. \soc.cpu.instr_rdcycleh
      Adding exclusive control bits: \soc.cpu.is_slli_srli_srai vs. $auto$opt_reduce.cc:134:opt_mux$6792
      Adding exclusive control bits: $flatten\soc.\cpu.$logic_and$picorv32.v:1691$2789_Y vs. $auto$opt_reduce.cc:134:opt_mux$6798
      Adding exclusive control bits: $auto$opt_reduce.cc:134:opt_mux$6798 vs. $auto$opt_reduce.cc:134:opt_mux$6808
      Adding exclusive control bits: \soc.cpu.instr_bge vs. \soc.cpu.instr_bgeu
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_bgeu
      Adding exclusive control bits: \soc.cpu.instr_bne vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_beq vs. \soc.cpu.instr_bgeu
      Adding exclusive control bits: \soc.cpu.instr_beq vs. \soc.cpu.instr_bge
      Adding exclusive control bits: \soc.cpu.instr_beq vs. \soc.cpu.instr_bne
      Size of SAT problem: 8 cells, 145 variables, 327 clauses
      According to the SAT solver this pair of cells can not be shared.
      Model from SAT solver: { $auto$opt_reduce.cc:134:opt_mux$6808 $auto$opt_reduce.cc:134:opt_mux$6798 $auto$opt_reduce.cc:134:opt_mux$6792 \soc.cpu.cpu_state [2] $flatten\soc.\cpu.$reduce_bool$picorv32.v:1386$2700_Y $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$2698_Y \soc.cpu.is_slli_srli_srai } = 7'0000110
  Analyzing resource sharing options for $flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$214 ($memrd):
    Found 1 activation_patterns using ctrl signal $flatten\soc.\cpu.$reduce_bool$picorv32.v:1385$2698_Y.
    No candidates found.

8.17. Executing TECHMAP pass (map to technology primitives).

8.17.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

8.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~244 debug messages>

8.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

8.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

8.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $add$top.v:67$4 ($add).
  creating $macc model for $flatten\display.$sub$display.v:61$1092 ($sub).
  creating $macc model for $flatten\display.$sub$display.v:91$1095 ($sub).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1235$2885 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1312$2686 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1428$2712 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1547$2763 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1559$2766 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1564$2767 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1801$2812 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:1864$2837 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:382$2296 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:906$2422 ($add).
  creating $macc model for $flatten\soc.\cpu.$add$picorv32.v:910$2423 ($add).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1235$2884 ($sub).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1438$2717 ($sub).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1837$2826 ($sub).
  creating $macc model for $flatten\soc.\cpu.$sub$picorv32.v:1845$2833 ($sub).
  creating $macc model for $flatten\soc.\simpleuart.$add$simpleuart.v:112$154 ($add).
  creating $macc model for $flatten\soc.\simpleuart.$add$simpleuart.v:74$145 ($add).
  creating $macc model for $flatten\soc.\simpleuart.$add$simpleuart.v:99$151 ($add).
  creating $macc model for $flatten\soc.\simpleuart.$sub$simpleuart.v:132$162 ($sub).
  creating $macc model for $flatten\soc.\spimemio.$add$spimemio.v:226$78 ($add).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$100 ($sub).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$107 ($sub).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$119 ($sub).
  creating $macc model for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:554$129 ($sub).
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:554$129.
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$119.
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$107.
  creating $alu model for $macc $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$100.
  creating $alu model for $macc $flatten\soc.\spimemio.$add$spimemio.v:226$78.
  creating $alu model for $macc $flatten\soc.\simpleuart.$sub$simpleuart.v:132$162.
  creating $alu model for $macc $flatten\soc.\simpleuart.$add$simpleuart.v:99$151.
  creating $alu model for $macc $flatten\soc.\simpleuart.$add$simpleuart.v:74$145.
  creating $alu model for $macc $flatten\soc.\simpleuart.$add$simpleuart.v:112$154.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1845$2833.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1837$2826.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1438$2717.
  creating $alu model for $macc $flatten\soc.\cpu.$sub$picorv32.v:1235$2884.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:910$2423.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:906$2422.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:382$2296.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1864$2837.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1801$2812.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1564$2767.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1559$2766.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1547$2763.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1428$2712.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1312$2686.
  creating $alu model for $macc $flatten\soc.\cpu.$add$picorv32.v:1235$2885.
  creating $alu model for $macc $flatten\display.$sub$display.v:91$1095.
  creating $alu model for $macc $flatten\display.$sub$display.v:61$1092.
  creating $alu model for $macc $add$top.v:67$4.
  creating $alu model for $flatten\soc.$ge$picosoc.v:159$1505 ($ge): new $alu
  creating $alu model for $flatten\soc.$gt$picosoc.v:110$1482 ($gt): new $alu
  creating $alu model for $flatten\soc.$lt$picosoc.v:159$1507 ($lt): new $alu
  creating $alu model for $flatten\soc.$lt$picosoc.v:206$1517 ($lt): merged with $flatten\soc.$ge$picosoc.v:159$1505.
  creating $alu model for $flatten\soc.\cpu.$ge$picorv32.v:1830$2818 ($ge): new $alu
  creating $alu model for $flatten\soc.\cpu.$lt$picorv32.v:1237$2888 ($lt): new $alu
  creating $alu model for $flatten\soc.\cpu.$lt$picorv32.v:1238$2889 ($lt): merged with $flatten\soc.\cpu.$sub$picorv32.v:1235$2884.
  creating $alu model for $flatten\soc.\simpleuart.$gt$simpleuart.v:130$160 ($gt): new $alu
  creating $alu model for $flatten\soc.\simpleuart.$gt$simpleuart.v:84$148 ($gt): new $alu
  creating $alu model for $flatten\soc.\simpleuart.$gt$simpleuart.v:90$149 ($gt): new $alu
  creating $alu model for $flatten\soc.$eq$picosoc.v:115$1484 ($eq): merged with $flatten\soc.$lt$picosoc.v:159$1507.
  creating $alu model for $flatten\soc.\cpu.$eq$picorv32.v:1236$2887 ($eq): merged with $flatten\soc.\cpu.$sub$picorv32.v:1235$2884.
  creating $alu cell for $flatten\soc.\simpleuart.$gt$simpleuart.v:90$149: $auto$alumacc.cc:485:replace_alu$8363
  creating $alu cell for $flatten\soc.\simpleuart.$gt$simpleuart.v:84$148: $auto$alumacc.cc:485:replace_alu$8368
  creating $alu cell for $flatten\soc.\simpleuart.$gt$simpleuart.v:130$160: $auto$alumacc.cc:485:replace_alu$8373
  creating $alu cell for $flatten\soc.\cpu.$ge$picorv32.v:1830$2818: $auto$alumacc.cc:485:replace_alu$8378
  creating $alu cell for $flatten\soc.$lt$picosoc.v:159$1507, $flatten\soc.$eq$picosoc.v:115$1484: $auto$alumacc.cc:485:replace_alu$8387
  creating $alu cell for $flatten\soc.$gt$picosoc.v:110$1482: $auto$alumacc.cc:485:replace_alu$8398
  creating $alu cell for $flatten\soc.$ge$picosoc.v:159$1505, $flatten\soc.$lt$picosoc.v:206$1517: $auto$alumacc.cc:485:replace_alu$8403
  creating $alu cell for $add$top.v:67$4: $auto$alumacc.cc:485:replace_alu$8416
  creating $alu cell for $flatten\display.$sub$display.v:61$1092: $auto$alumacc.cc:485:replace_alu$8419
  creating $alu cell for $flatten\display.$sub$display.v:91$1095: $auto$alumacc.cc:485:replace_alu$8422
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1312$2686: $auto$alumacc.cc:485:replace_alu$8425
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1428$2712: $auto$alumacc.cc:485:replace_alu$8428
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1547$2763: $auto$alumacc.cc:485:replace_alu$8431
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1559$2766: $auto$alumacc.cc:485:replace_alu$8434
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1564$2767: $auto$alumacc.cc:485:replace_alu$8437
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1801$2812: $auto$alumacc.cc:485:replace_alu$8440
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1864$2837: $auto$alumacc.cc:485:replace_alu$8443
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:382$2296: $auto$alumacc.cc:485:replace_alu$8446
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:906$2422: $auto$alumacc.cc:485:replace_alu$8449
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:910$2423: $auto$alumacc.cc:485:replace_alu$8452
  creating $alu cell for $flatten\soc.\cpu.$lt$picorv32.v:1237$2888: $auto$alumacc.cc:485:replace_alu$8455
  creating $alu cell for $flatten\soc.\cpu.$add$picorv32.v:1235$2885: $auto$alumacc.cc:485:replace_alu$8462
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1235$2884, $flatten\soc.\cpu.$lt$picorv32.v:1238$2889, $flatten\soc.\cpu.$eq$picorv32.v:1236$2887: $auto$alumacc.cc:485:replace_alu$8465
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1438$2717: $auto$alumacc.cc:485:replace_alu$8472
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1837$2826: $auto$alumacc.cc:485:replace_alu$8475
  creating $alu cell for $flatten\soc.\cpu.$sub$picorv32.v:1845$2833: $auto$alumacc.cc:485:replace_alu$8478
  creating $alu cell for $flatten\soc.\simpleuart.$add$simpleuart.v:112$154: $auto$alumacc.cc:485:replace_alu$8481
  creating $alu cell for $flatten\soc.\simpleuart.$add$simpleuart.v:74$145: $auto$alumacc.cc:485:replace_alu$8484
  creating $alu cell for $flatten\soc.\simpleuart.$add$simpleuart.v:99$151: $auto$alumacc.cc:485:replace_alu$8487
  creating $alu cell for $flatten\soc.\simpleuart.$sub$simpleuart.v:132$162: $auto$alumacc.cc:485:replace_alu$8490
  creating $alu cell for $flatten\soc.\spimemio.$add$spimemio.v:226$78: $auto$alumacc.cc:485:replace_alu$8493
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:471$100: $auto$alumacc.cc:485:replace_alu$8496
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$107: $auto$alumacc.cc:485:replace_alu$8499
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$119: $auto$alumacc.cc:485:replace_alu$8502
  creating $alu cell for $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:554$129: $auto$alumacc.cc:485:replace_alu$8505
  created 35 $alu and 0 $macc cells.

8.21. Executing OPT pass (performing simple optimizations).

8.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

8.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

8.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~152 debug messages>

8.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$3854: { \soc.cpu.cpu_state [1] \soc.cpu.cpu_state [3] $auto$opt_reduce.cc:134:opt_mux$8509 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4364: { \soc.cpu.cpu_state [2] \soc.cpu.cpu_state [4] $auto$opt_reduce.cc:134:opt_mux$8511 }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$5372: { $flatten\soc.\cpu.$logic_not$picorv32.v:379$2276_Y $flatten\soc.\cpu.$procmux$5335_CMP $auto$opt_reduce.cc:134:opt_mux$8513 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.$procmux$6402: { $auto$opt_reduce.cc:134:opt_mux$8515 \soc.spimemio.state [8] \soc.spimemio.state [5] \soc.spimemio.state [11] \soc.spimemio.state [3] }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6057: { $flatten\soc.\spimemio.\xfer.$procmux$5935_CMP $auto$opt_reduce.cc:134:opt_mux$8517 }
    New ctrl vector for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6067: { $flatten\soc.\spimemio.\xfer.$procmux$5935_CMP $auto$opt_reduce.cc:134:opt_mux$8519 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$8508: { \soc.cpu.cpu_state [6] \soc.cpu.cpu_state [4] \soc.cpu.cpu_state [2] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$8514: { \soc.spimemio.state [12] \soc.spimemio.state [9] \soc.spimemio.state [6] \soc.spimemio.state [4] \soc.spimemio.state [2:0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

8.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$opt_dff.cc:764:run$8040 ($dffe) from module top (D = $flatten\soc.\cpu.$procmux$5430_Y, Q = \soc.cpu.mem_valid, rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$8016 ($dffe) from module top (D = $flatten\soc.\cpu.$procmux$5372_Y, Q = \soc.cpu.mem_state, rval = 2'00).

8.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 20 unused wires.
<suppressed ~3 debug messages>

8.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.21.9. Rerunning OPT passes. (Maybe there is more to do..)

8.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~152 debug messages>

8.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.21.13. Executing OPT_DFF pass (perform DFF optimizations).

8.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.21.16. Finished OPT passes. (There is nothing left to do.)

8.22. Executing MEMORY pass.

8.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

8.22.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd).
Checking cell `$flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:236$214' in module `\top': merged address $dff to cell.
Checking cell `$flatten\soc.\cpu.\cpuregs.$memrd$\regs$picosoc.v:237$215' in module `\top': merged address $dff to cell.

8.22.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.22.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

8.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.22.6. Executing MEMORY_COLLECT pass (generating $mem cells).

8.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).
Processing top.soc.cpu.cpuregs.regs:
  Properties: ports=3 bits=1024 rports=2 wports=1 dbits=32 abits=5 words=32
  Checking rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #1 for bram type $__ICE40_RAM4K_M0 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7168 efficiency=6
      Storing for later selection.
  Checking rule #2 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1):
    Bram geometry: abits=8 dbits=16 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M0: awaste=224 dwaste=0 bwaste=3584 waste=3584 efficiency=12
    Rule #3 for bram type $__ICE40_RAM4K_M0 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 1) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7680 efficiency=3
      Storing for later selection.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=992 dwaste=0 bwaste=3968 waste=3968 efficiency=3
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 2) accepted.
    Mapping to bram type $__ICE40_RAM4K_M123 (variant 2):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Updated properties: dups=2 waste=7936 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 rejected: requirement 'min efficiency 2' not met.
    Mapping to bram type $__ICE40_RAM4K_M123 failed.
  Checking rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #4 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'min efficiency 2' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #5 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'attribute syn_ramstyle="block_ram" ...' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1):
    Bram geometry: abits=9 dbits=8 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=480 dwaste=0 bwaste=3840 waste=3840 efficiency=6
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 1) rejected: requirement 'max wports 0' not met.
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 2):
    Bram geometry: abits=10 dbits=4 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
  Checking rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3):
    Bram geometry: abits=11 dbits=2 wports=0 rports=0
    Estimated number of duplicates for more read ports: dups=1
    Metrics for $__ICE40_RAM4K_M123: awaste=2016 dwaste=0 bwaste=4032 waste=4032 efficiency=1
    Rule #6 for bram type $__ICE40_RAM4K_M123 (variant 3) rejected: requirement 'max wports 0' not met.
  Selecting best of 2 rules:
    Efficiency for rule 4.1: efficiency=3, cells=8, acells=1
    Efficiency for rule 1.1: efficiency=6, cells=4, acells=1
    Selected rule 1.1 with efficiency 6.
    Mapping to bram type $__ICE40_RAM4K_M0 (variant 1):
      Write port #0 is in clock domain \clk.
        Mapped to bram port B1.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Failed to map read port #1.
      Growing more read ports by duplicating bram cells.
      Read port #0 is in clock domain \clk.
        Mapped to bram port A1.1.
      Read port #1 is in clock domain \clk.
        Mapped to bram port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 0>: soc.cpu.cpuregs.regs.0.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <0 0 1>: soc.cpu.cpuregs.regs.0.0.1
        Adding extra logic for transparent port A1.2.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 0>: soc.cpu.cpuregs.regs.1.0.0
        Adding extra logic for transparent port A1.1.
      Creating $__ICE40_RAM4K_M0 cell at grid position <1 0 1>: soc.cpu.cpuregs.regs.1.0.1
        Adding extra logic for transparent port A1.2.

8.25. Executing TECHMAP pass (map to technology primitives).

8.25.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

8.25.2. Continuing TECHMAP pass.
Using template $paramod$0a019bf6356ccccf899399d072352b73127d7d6e\$__ICE40_RAM4K_M0 for cells of type $__ICE40_RAM4K_M0.
Using template $paramod$74e86a1473a276d7f5e0aabab902bd3b9ea7e933\$__ICE40_RAM4K for cells of type $__ICE40_RAM4K.
No more expansions possible.
<suppressed ~75 debug messages>

8.26. Executing ICE40_BRAMINIT pass.

8.27. Executing OPT pass (performing simple optimizations).

8.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~118 debug messages>

8.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

8.27.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\soc.\cpu.$procdff$6576 ($dff) from module top (D = $flatten\soc.\cpu.$0\reg_sh[4:0] [1:0], Q = \soc.cpu.reg_sh [1:0]).
Adding EN signal on $auto$opt_dff.cc:764:run$7864 ($dffe) from module top (D = $auto$wreduce.cc:454:run$8343 [1:0], Q = \soc.spimemio.rd_addr [1:0]).
Adding SRST signal on $auto$memory_bram.cc:991:replace_memory$8592 ($dff) from module top (D = $auto$memory_bram.cc:886:replace_memory$8546, Q = $auto$memory_bram.cc:990:replace_memory$8591, rval = 16'0000000000000000).
Adding SRST signal on $auto$memory_bram.cc:991:replace_memory$8636 ($dff) from module top (D = $auto$memory_bram.cc:886:replace_memory$8629, Q = $auto$memory_bram.cc:990:replace_memory$8635, rval = 16'0000000000000000).

8.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 25 unused cells and 230 unused wires.
<suppressed ~30 debug messages>

8.27.5. Rerunning OPT passes. (Removed registers in this run.)

8.27.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

8.27.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.27.8. Executing OPT_DFF pass (perform DFF optimizations).

8.27.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.27.10. Finished fast OPT passes.

8.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

8.29. Executing OPT pass (performing simple optimizations).

8.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~151 debug messages>

8.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$opt_dff.cc:243:make_patterns_logic$8761: { $auto$rtlil.cc:2127:Not$7841 $auto$opt_dff.cc:217:make_patterns_logic$8758 $flatten\soc.\spimemio.$logic_and$spimemio.v:224$77_Y }
    Consolidated identical input bits for $pmux cell $flatten\soc.\cpu.$procmux$3604:
      Old ports: A=\soc.cpu.mem_rdata_word, B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:0] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7:0] }, Y=$flatten\soc.\cpu.$procmux$3604_Y
      New ports: A=\soc.cpu.mem_rdata_word [31:8], B={ \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15] \soc.cpu.mem_rdata_word [15:7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] \soc.cpu.mem_rdata_word [7] }, Y=$flatten\soc.\cpu.$procmux$3604_Y [31:8]
      New connections: $flatten\soc.\cpu.$procmux$3604_Y [7:0] = \soc.cpu.mem_rdata_word [7:0]
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4599: { $flatten\soc.\cpu.$procmux$4618_CMP $flatten\soc.\cpu.$procmux$4600_CMP }
    New ctrl vector for $pmux cell $flatten\soc.\cpu.$procmux$4601: { $flatten\soc.\cpu.$procmux$4598_CMP $flatten\soc.\cpu.$procmux$4616_CMP }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4651:
      Old ports: A={ \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] \soc.cpu.mem_rdata_latched [31] }, B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$flatten\soc.\cpu.$procmux$4651_Y
      New ports: A=\soc.cpu.mem_rdata_latched [31], B=\soc.cpu.mem_rdata_latched [12], Y=$flatten\soc.\cpu.$procmux$4651_Y [0]
      New connections: $flatten\soc.\cpu.$procmux$4651_Y [11:1] = { $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] $flatten\soc.\cpu.$procmux$4651_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4679:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$8333 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$8333 [1]
      New connections: $auto$wreduce.cc:454:run$8333 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4857:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$4857_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$4857_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$4857_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4864:
      Old ports: A=\soc.cpu.mem_rdata_latched [19:12], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$flatten\soc.\cpu.$procmux$4864_Y
      New ports: A=\soc.cpu.mem_rdata_latched [19:13], B={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, Y=$flatten\soc.\cpu.$procmux$4864_Y [7:1]
      New connections: $flatten\soc.\cpu.$procmux$4864_Y [0] = \soc.cpu.mem_rdata_latched [12]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4889:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$4889_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$4889_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$4889_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4907:
      Old ports: A=5'00000, B={ 2'01 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$4907_Y
      New ports: A=4'0000, B={ 1'1 \soc.cpu.mem_rdata_latched [4:2] }, Y=$flatten\soc.\cpu.$procmux$4907_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$4907_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$5524:
      Old ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 4'0000 }, Y=$flatten\soc.\cpu.$procmux$5524_Y
      New ports: A={ \soc.cpu.mem_rdata_latched [12] \soc.cpu.mem_rdata_latched [12] }, B={ \soc.cpu.mem_rdata_latched [6] 1'0 }, Y={ $flatten\soc.\cpu.$procmux$5524_Y [4] $flatten\soc.\cpu.$procmux$5524_Y [0] }
      New connections: $flatten\soc.\cpu.$procmux$5524_Y [3:1] = { $flatten\soc.\cpu.$procmux$5524_Y [0] $flatten\soc.\cpu.$procmux$5524_Y [0] $flatten\soc.\cpu.$procmux$5524_Y [0] }
    Consolidated identical input bits for $pmux cell $flatten\soc.\cpu.$procmux$5691:
      Old ports: A=\soc.cpu.reg_op2, B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata
      New ports: A=\soc.cpu.reg_op2 [31:8], B={ \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [15:0] \soc.cpu.reg_op2 [7:0] \soc.cpu.reg_op2 [7:0] }, Y=\soc.cpu.mem_la_wdata [31:8]
      New connections: \soc.cpu.mem_la_wdata [7:0] = \soc.cpu.reg_op2 [7:0]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1312$2685:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$8336 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$8336 [2:1]
      New connections: $auto$wreduce.cc:454:run$8336 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1536$2755:
      Old ports: A=2'00, B=2'10, Y=$flatten\soc.\cpu.$ternary$picorv32.v:1536$2755_Y
      New ports: A=1'0, B=1'1, Y=$flatten\soc.\cpu.$ternary$picorv32.v:1536$2755_Y [1]
      New connections: $flatten\soc.\cpu.$ternary$picorv32.v:1536$2755_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1541$2757:
      Old ports: A=3'011, B=3'100, Y=$auto$wreduce.cc:454:run$8337 [2:0]
      New ports: A=2'01, B=2'10, Y={ $auto$wreduce.cc:454:run$8337 [2] $auto$wreduce.cc:454:run$8337 [0] }
      New connections: $auto$wreduce.cc:454:run$8337 [1] = $auto$wreduce.cc:454:run$8337 [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:1547$2762:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$8338 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$8338 [2:1]
      New connections: $auto$wreduce.cc:454:run$8338 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:382$2297:
      Old ports: A={ \soc.cpu.reg_op1 [31:2] 2'00 }, B={ $flatten\soc.\cpu.$add$picorv32.v:382$2296_Y 2'00 }, Y=\soc.cpu.mem_la_addr
      New ports: A=\soc.cpu.reg_op1 [31:2], B=$flatten\soc.\cpu.$add$picorv32.v:382$2296_Y, Y=\soc.cpu.mem_la_addr [31:2]
      New connections: \soc.cpu.mem_la_addr [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:411$2312:
      Old ports: A=4'0011, B=4'1100, Y=$flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y [2] $flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y [0] }
      New connections: { $flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y [3] $flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y [1] } = { $flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y [2] $flatten\soc.\cpu.$ternary$picorv32.v:411$2312_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:491$2328:
      Old ports: A=6'000000, B=6'100000, Y=$auto$wreduce.cc:454:run$8339 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$8339 [5]
      New connections: $auto$wreduce.cc:454:run$8339 [4:0] = 5'00000
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$ternary$picorv32.v:617$2372:
      Old ports: A=2'11, B=2'00, Y=$flatten\soc.\cpu.$procmux$5378_Y
      New ports: A=1'1, B=1'0, Y=$flatten\soc.\cpu.$procmux$5378_Y [0]
      New connections: $flatten\soc.\cpu.$procmux$5378_Y [1] = $flatten\soc.\cpu.$procmux$5378_Y [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\simpleuart.$ternary$simpleuart.v:53$140:
      Old ports: A=32'11111111111111111111111111111111, B={ 24'000000000000000000000000 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do
      New ports: A=9'111111111, B={ 1'0 \soc.simpleuart.recv_buf_data }, Y=\soc.simpleuart_reg_dat_do [8:0]
      New connections: \soc.simpleuart_reg_dat_do [31:9] = { \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] \soc.simpleuart_reg_dat_do [8] }
    Consolidated identical input bits for $pmux cell $flatten\soc.\spimemio.$procmux$6402:
      Old ports: A=4'0000, B=16'0001001000110100, Y=$flatten\soc.\spimemio.$procmux$6402_Y
      New ports: A=3'000, B=12'001010011100, Y=$flatten\soc.\spimemio.$procmux$6402_Y [2:0]
      New connections: $flatten\soc.\spimemio.$procmux$6402_Y [3] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\soc.\spimemio.$procmux$6433:
      Old ports: A=8'11101101, B=24'111010111011101100000011, Y=$flatten\soc.\spimemio.$procmux$6433_Y
      New ports: A=5'10110, B=15'101010110100001, Y={ $flatten\soc.\spimemio.$procmux$6433_Y [6] $flatten\soc.\spimemio.$procmux$6433_Y [4:1] }
      New connections: { $flatten\soc.\spimemio.$procmux$6433_Y [7] $flatten\soc.\spimemio.$procmux$6433_Y [5] $flatten\soc.\spimemio.$procmux$6433_Y [0] } = { $flatten\soc.\spimemio.$procmux$6433_Y [3] $flatten\soc.\spimemio.$procmux$6433_Y [3] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$ternary$spimemio.v:316$85:
      Old ports: A=7'1111111, B=7'0100101, Y=$flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [6:0]
      New ports: A=1'1, B=1'0, Y=$flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1]
      New connections: { $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [6:2] $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [0] } = { $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1] 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1] $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1] 2'11 }
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.\xfer.$procmux$5928:
      Old ports: A=\soc.spimemio.xfer.count, B={ $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$119_Y [3:1] \soc.spimemio.xfer.count [0] }, Y=$flatten\soc.\spimemio.\xfer.$5\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:1], B=$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:524$119_Y [3:1], Y=$flatten\soc.\spimemio.\xfer.$5\next_count[3:0] [3:1]
      New connections: $flatten\soc.\spimemio.\xfer.$5\next_count[3:0] [0] = \soc.spimemio.xfer.count [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.\xfer.$procmux$5969:
      Old ports: A=\soc.spimemio.xfer.count, B={ $flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$107_Y [3:2] \soc.spimemio.xfer.count [1:0] }, Y=$flatten\soc.\spimemio.\xfer.$4\next_count[3:0]
      New ports: A=\soc.spimemio.xfer.count [3:2], B=$flatten\soc.\spimemio.\xfer.$sub$spimemio.v:491$107_Y [3:2], Y=$flatten\soc.\spimemio.\xfer.$4\next_count[3:0] [3:2]
      New connections: $flatten\soc.\spimemio.\xfer.$4\next_count[3:0] [1:0] = \soc.spimemio.xfer.count [1:0]
    Consolidated identical input bits for $pmux cell $flatten\soc.\spimemio.\xfer.$procmux$6067:
      Old ports: A={ \soc.spimemio.xfer.obuffer [5:0] 2'00 }, B={ \soc.spimemio.xfer.obuffer [6:0] 1'0 \soc.spimemio.xfer.obuffer [3:0] 4'0000 }, Y=\soc.spimemio.xfer.next_obuffer
      New ports: A={ \soc.spimemio.xfer.obuffer [5:0] 1'0 }, B={ \soc.spimemio.xfer.obuffer [6:0] \soc.spimemio.xfer.obuffer [3:0] 3'000 }, Y=\soc.spimemio.xfer.next_obuffer [7:1]
      New connections: \soc.spimemio.xfer.next_obuffer [0] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.$ternary$picosoc.v:130$1499:
      Old ports: A=0, B=\soc.simpleuart_reg_dat_do, Y=$flatten\soc.$ternary$picosoc.v:130$1499_Y
      New ports: A=9'000000000, B=\soc.simpleuart_reg_dat_do [8:0], Y=$flatten\soc.$ternary$picosoc.v:130$1499_Y [8:0]
      New connections: $flatten\soc.$ternary$picosoc.v:130$1499_Y [31:9] = { $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] $flatten\soc.$ternary$picosoc.v:130$1499_Y [8] }
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4891:
      Old ports: A=$flatten\soc.\cpu.$procmux$4889_Y, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$4891_Y
      New ports: A=$flatten\soc.\cpu.$procmux$4889_Y [3:0], B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$4891_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$4891_Y [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$procmux$6423:
      Old ports: A={ 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [6:0] }, B={ 4'0000 \soc.spimemio.config_dummy }, Y=$flatten\soc.\spimemio.$procmux$6423_Y
      New ports: A={ 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1] $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1] 1'1 $flatten\soc.\spimemio.$ternary$spimemio.v:316$85_Y [1] 1'1 }, B={ 2'00 \soc.spimemio.config_dummy }, Y=$flatten\soc.\spimemio.$procmux$6423_Y [5:0]
      New connections: $flatten\soc.\spimemio.$procmux$6423_Y [7:6] = $flatten\soc.\spimemio.$procmux$6423_Y [5:4]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4893:
      Old ports: A=$flatten\soc.\cpu.$procmux$4891_Y, B={ 2'01 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$4893_Y
      New ports: A=$flatten\soc.\cpu.$procmux$4891_Y [3:0], B={ 1'1 \soc.cpu.mem_rdata_latched [9:7] }, Y=$flatten\soc.\cpu.$procmux$4893_Y [3:0]
      New connections: $flatten\soc.\cpu.$procmux$4893_Y [4] = 1'0
  Optimizing cells in module \top.
Performed a total of 31 changes.

8.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

8.29.6. Executing OPT_DFF pass (perform DFF optimizations).

8.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

8.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.29.9. Rerunning OPT passes. (Maybe there is more to do..)

8.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

8.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4415:
      Old ports: A=$flatten\soc.\cpu.$add$picorv32.v:1547$2763_Y, B={ $flatten\soc.\cpu.$add$picorv32.v:1564$2767_Y [31:1] $auto$alumacc.cc:501:replace_alu$8438 [0] }, Y=$flatten\soc.\cpu.$procmux$4415_Y
      New ports: A=$flatten\soc.\cpu.$add$picorv32.v:1547$2763_Y [31:1], B=$flatten\soc.\cpu.$add$picorv32.v:1564$2767_Y [31:1], Y=$flatten\soc.\cpu.$procmux$4415_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$4415_Y [0] = $auto$alumacc.cc:501:replace_alu$8438 [0]
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4421:
      Old ports: A={ $flatten\soc.\cpu.$3\current_pc[31:0] [31:1] $auto$alumacc.cc:501:replace_alu$8438 [0] }, B=$flatten\soc.\cpu.$add$picorv32.v:1547$2763_Y, Y=$flatten\soc.\cpu.$procmux$4421_Y
      New ports: A=$flatten\soc.\cpu.$3\current_pc[31:0] [31:1], B=$flatten\soc.\cpu.$add$picorv32.v:1547$2763_Y [31:1], Y=$flatten\soc.\cpu.$procmux$4421_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$4421_Y [0] = $auto$alumacc.cc:501:replace_alu$8438 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4417:
      Old ports: A={ $flatten\soc.\cpu.$3\current_pc[31:0] [31:1] $auto$alumacc.cc:501:replace_alu$8438 [0] }, B=$flatten\soc.\cpu.$procmux$4415_Y, Y=$flatten\soc.\cpu.$procmux$4417_Y
      New ports: A=$flatten\soc.\cpu.$3\current_pc[31:0] [31:1], B=$flatten\soc.\cpu.$procmux$4415_Y [31:1], Y=$flatten\soc.\cpu.$procmux$4417_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$4417_Y [0] = $auto$alumacc.cc:501:replace_alu$8438 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4423:
      Old ports: A=$flatten\soc.\cpu.$procmux$4417_Y, B={ $flatten\soc.\cpu.$procmux$4421_Y [31:1] $auto$alumacc.cc:501:replace_alu$8438 [0] }, Y=$flatten\soc.\cpu.$procmux$4423_Y
      New ports: A=$flatten\soc.\cpu.$procmux$4417_Y [31:1], B=$flatten\soc.\cpu.$procmux$4421_Y [31:1], Y=$flatten\soc.\cpu.$procmux$4423_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$4423_Y [0] = $auto$alumacc.cc:501:replace_alu$8438 [0]
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\cpu.$procmux$4426:
      Old ports: A=$flatten\soc.\cpu.$procmux$4423_Y, B={ $flatten\soc.\cpu.$3\current_pc[31:0] [31:1] $auto$alumacc.cc:501:replace_alu$8438 [0] }, Y=$flatten\soc.\cpu.$procmux$4426_Y
      New ports: A=$flatten\soc.\cpu.$procmux$4423_Y [31:1], B=$flatten\soc.\cpu.$3\current_pc[31:0] [31:1], Y=$flatten\soc.\cpu.$procmux$4426_Y [31:1]
      New connections: $flatten\soc.\cpu.$procmux$4426_Y [0] = $auto$alumacc.cc:501:replace_alu$8438 [0]
  Optimizing cells in module \top.
Performed a total of 5 changes.

8.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$8027 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$8027 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$7897 ($sdffe) from module top.
Adding SRST signal on $auto$opt_dff.cc:764:run$7804 ($dffe) from module top (D = \soc.spimemio.din_data [0], Q = \soc.spimemio.xfer.obuffer [0], rval = 1'0).

8.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

8.29.16. Rerunning OPT passes. (Maybe there is more to do..)

8.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

8.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$procmux$6426:
      Old ports: A={ \soc.cpu.mem_addr [7:2] 2'00 }, B=8'00000000, Y=$flatten\soc.\spimemio.$procmux$6426_Y
      New ports: A=\soc.cpu.mem_addr [7:2], B=6'000000, Y=$flatten\soc.\spimemio.$procmux$6426_Y [7:2]
      New connections: $flatten\soc.\spimemio.$procmux$6426_Y [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\soc.\spimemio.$ternary$spimemio.v:226$80:
      Old ports: A={ \soc.cpu.mem_addr [23:2] 2'00 }, B={ $auto$wreduce.cc:454:run$8342 [23:2] 2'xx }, Y=$auto$wreduce.cc:454:run$8343 [23:0]
      New ports: A={ \soc.cpu.mem_addr [23:2] 1'0 }, B={ $auto$wreduce.cc:454:run$8342 [23:2] 1'x }, Y={ $auto$wreduce.cc:454:run$8343 [23:2] $auto$wreduce.cc:454:run$8343 [0] }
      New connections: $auto$wreduce.cc:454:run$8343 [1] = $auto$wreduce.cc:454:run$8343 [0]
  Optimizing cells in module \top.
Performed a total of 2 changes.

8.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$7742 ($sdffe) from module top.

8.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~1 debug messages>

8.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.29.23. Rerunning OPT passes. (Maybe there is more to do..)

8.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

8.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.29.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 3 on $flatten\soc.\spimemio.\xfer.$procdff$6744 ($dff) from module top.

8.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.29.30. Rerunning OPT passes. (Maybe there is more to do..)

8.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~153 debug messages>

8.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

8.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.29.34. Executing OPT_DFF pass (perform DFF optimizations).

8.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.29.37. Finished OPT passes. (There is nothing left to do.)

8.30. Executing ICE40_WRAPCARRY pass (wrap carries).

8.31. Executing TECHMAP pass (map to technology primitives).

8.31.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/techmap.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

8.31.2. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

8.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod$c9511eeb847f2aa95252b1013477609463f67ee0\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $logic_and.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$97565c3687be688407d1272a293bd9d0ae6852dc\_90_pmux for cells of type $pmux.
Using template $paramod$c2e415ef15bc3ccd2723772353a6b450d3d76206\_90_pmux for cells of type $pmux.
Using template $paramod$bf9a6aad4c9603c218b6b0be41de41e6ed43614c\_90_pmux for cells of type $pmux.
Using template $paramod$d901baf1fb63991ac0a40d2e3f4807d372bb57a2\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$fbc7873bff55778c0b3173955b7e4bce1d9d6834\_80_ice40_alu for cells of type $alu.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using template $paramod$ebf89ea36a793f0f77858f212141d47c833068ad\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$6a42b6fefed750f8a1c58eab59479d960557103c\_80_ice40_alu for cells of type $alu.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$16349e5f556ea87a576d7d9941c668f31b6ef10b\_80_ice40_alu for cells of type $alu.
Using template $paramod$54d740639e1393b22262823179ff783ea9f17a35\_90_pmux for cells of type $pmux.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod$d629d85c8826a74239b9178d1930215a43b0ceb0\_90_pmux for cells of type $pmux.
Using template $paramod$d31bf4d7d72e59528d18fbd4f322e9d608532043\_90_pmux for cells of type $pmux.
Using template $paramod$fedb90247e1daaa8b0af86a595f377181f141d27\_90_pmux for cells of type $pmux.
Using template $paramod$d7387fdb214042e5ef2d69a3f74948694b4bb65e\_90_pmux for cells of type $pmux.
Using template $paramod$c5c783b17ab1d780abfad8cfe6563a0a7b47a3b0\_90_pmux for cells of type $pmux.
Using template $paramod$b756e651b7db7aeb455331d9a2df073db93fcc2e\_90_pmux for cells of type $pmux.
Using template $paramod$fc16b9f758000d363d24f130038bd99b46b4fa1b\_90_pmux for cells of type $pmux.
Using template $paramod$ba698a254f9a5947e85cbe7beae6b161eefc5386\_90_alu for cells of type $alu.
Using template $paramod$b8c0a997bce700f23568a5ada79cc6781d1f5ca0\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:66d421c313e4e958be776b99540ac2de3b59fdbc$paramod$77562a466236eb4a6d905351a0995599b75075cb\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod$2653f68ddb8eab7b1907b4a20767b72a824a7a36\_80_ice40_alu for cells of type $alu.
Using template $paramod$cc80a4e89b0341cb117f5d28b0e7244620640141\_80_ice40_alu for cells of type $alu.
Using template $paramod$8fabc56b80a569262acfc42757a02ca0b8e91278\_90_pmux for cells of type $pmux.
Using template $paramod$bdc78fe5225b43c64ccdf13e5eb67d9dcf228e8a\_80_ice40_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using template $paramod$44a13d10af618e7fbe7b9aad2f6151ffcee1e2fa\_80_ice40_alu for cells of type $alu.
Using template $paramod$c04af8dbf0e5d1d69bbccb2c7bd8a93fc9ef54dc\_80_ice40_alu for cells of type $alu.
Using template $paramod$645fe0cc96ae5edb83bff90cc2c78f4a20ca3e3c\_90_pmux for cells of type $pmux.
Using template $paramod$cc1e387d9d5ac1d3f6e6bed180038d9c0ac48d0c\_90_pmux for cells of type $pmux.
Using template $paramod$b098bc6f249c0ac91c4d6e19d54b23c285914115\_90_pmux for cells of type $pmux.
Using template $paramod$2407ada40cc3dda6c6015be2b49b748cddb5a800\_90_pmux for cells of type $pmux.
Using template $paramod$20d3ee62d72123142eb855d7ddafd835e31ba009\_90_pmux for cells of type $pmux.
Using template $paramod$bf2533632d512eac76dd186c0da49367e29b8e98\_90_pmux for cells of type $pmux.
Using template $paramod$59b03ae2620a41577de8da5f5c97b2919e82362b\_90_pmux for cells of type $pmux.
Using template $paramod$24fb226dd75c9d3f6955ec2ad61d794776778cf6\_90_pmux for cells of type $pmux.
Using template $paramod$521ce43182eecb9f60c72393a788160d2c356bf5\_90_pmux for cells of type $pmux.
Using template $paramod$70d30c21ff772b34d0d1da2801fbd781dc3c70e4\_90_pmux for cells of type $pmux.
Using template $paramod$85df5dc01c7df96a7d8e5f1fdf76ce9ac452af63\_90_pmux for cells of type $pmux.
Using template $paramod$32e7c4d6f92ff4337599ece53082d2e88a82a9f2\_90_pmux for cells of type $pmux.
Using template $paramod$f3115659d5e2977ebd2cb01ff3557fc5f6187689\_90_pmux for cells of type $pmux.
Using template $paramod$ed0bb9616228df1e6c226f91f8133e751815f1b1\_90_pmux for cells of type $pmux.
Using template $paramod$c15e84c77f007506123baf6c4be45847f0e33a3b\_90_pmux for cells of type $pmux.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_80_ice40_alu for cells of type $alu.
Using template $paramod$91e5b74f11633b3386c40b03efcf15406a306835\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~3797 debug messages>

8.32. Executing OPT pass (performing simple optimizations).

8.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3966 debug messages>

8.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6483 debug messages>
Removed a total of 2161 cells.

8.32.3. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$10218 ($_DFFE_PP_) from module top (D = 1'x, Q = \soc.spimemio.rd_addr [0], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$28740 ($_SDFFCE_PN0P_) from module top.

8.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 616 unused cells and 5020 unused wires.
<suppressed ~617 debug messages>

8.32.5. Rerunning OPT passes. (Removed registers in this run.)

8.32.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

8.32.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.32.8. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$18679 ($_SDFFE_PN0P_) from module top (D = $flatten\soc.\cpu.$procmux$3347.B_AND_S [32], Q = \soc.cpu.reg_next_pc [0]).
Adding EN signal on $auto$simplemap.cc:559:simplemap_adffe_sdffe_sdffce$12490 ($_SDFFE_PP0P_) from module top (D = $flatten\soc.\spimemio.\xfer.$procmux$6047.Y_B [0], Q = \soc.spimemio.xfer.count [0]).
Adding SRST signal on $auto$simplemap.cc:527:simplemap_adff_sdff$13663 ($_SDFF_PP0_) from module top (D = $flatten\soc.\spimemio.$procmux$6309.Y_B, Q = \soc.spimemio.din_valid, rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19042 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [31], Q = \soc.cpu.decoded_imm [31], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19041 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [30], Q = \soc.cpu.decoded_imm [30], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19040 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [29], Q = \soc.cpu.decoded_imm [29], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19039 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [28], Q = \soc.cpu.decoded_imm [28], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19038 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [27], Q = \soc.cpu.decoded_imm [27], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19037 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [26], Q = \soc.cpu.decoded_imm [26], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19036 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [25], Q = \soc.cpu.decoded_imm [25], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19035 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [24], Q = \soc.cpu.decoded_imm [24], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19034 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [23], Q = \soc.cpu.decoded_imm [23], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19033 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [22], Q = \soc.cpu.decoded_imm [22], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19032 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [21], Q = \soc.cpu.decoded_imm [21], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19031 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [20], Q = \soc.cpu.decoded_imm [20], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19030 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [19], Q = \soc.cpu.decoded_imm [19], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19029 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [18], Q = \soc.cpu.decoded_imm [18], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19028 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [17], Q = \soc.cpu.decoded_imm [17], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19027 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [16], Q = \soc.cpu.decoded_imm [16], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19026 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [15], Q = \soc.cpu.decoded_imm [15], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19025 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [14], Q = \soc.cpu.decoded_imm [14], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19024 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [13], Q = \soc.cpu.decoded_imm [13], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19023 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [12], Q = \soc.cpu.decoded_imm [12], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19022 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [11], Q = \soc.cpu.decoded_imm [11], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19021 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [10], Q = \soc.cpu.decoded_imm [10], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19020 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [9], Q = \soc.cpu.decoded_imm [9], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19019 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [8], Q = \soc.cpu.decoded_imm [8], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19018 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [7], Q = \soc.cpu.decoded_imm [7], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19017 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [6], Q = \soc.cpu.decoded_imm [6], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19016 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [5], Q = \soc.cpu.decoded_imm [5], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19015 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [4], Q = \soc.cpu.decoded_imm [4], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19014 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [3], Q = \soc.cpu.decoded_imm [3], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19013 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [2], Q = \soc.cpu.decoded_imm [2], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$19012 ($_DFFE_PP_) from module top (D = $flatten\soc.\cpu.$procmux$4827.Y_B [1], Q = \soc.cpu.decoded_imm [1], rval = 1'0).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16533 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [7], Q = \soc.spimemio.din_data [7], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16532 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [6], Q = \soc.spimemio.din_data [6], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16531 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [5], Q = \soc.spimemio.din_data [5], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16530 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [4], Q = \soc.spimemio.din_data [4], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16529 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [3], Q = \soc.spimemio.din_data [3], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16528 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [2], Q = \soc.spimemio.din_data [2], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16527 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [1], Q = \soc.spimemio.din_data [1], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:442:simplemap_dffe$16526 ($_DFFE_PP_) from module top (D = $flatten\soc.\spimemio.$procmux$6421.Y_B [0], Q = \soc.spimemio.din_data [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$9013 ($_DFF_P_) from module top (D = $flatten\display.$procmux$2955.S [0], Q = \display.dd [1], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$9012 ($_DFF_P_) from module top (D = $flatten\display.$procmux$2955.S [1], Q = \display.dd [0], rval = 1'1).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18825 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [31], Q = \soc.cpu.irq_pending [31], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28799 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [31], Q = \soc.cpu.irq_pending [31]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18824 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [30], Q = \soc.cpu.irq_pending [30], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28807 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [30], Q = \soc.cpu.irq_pending [30]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18823 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [29], Q = \soc.cpu.irq_pending [29], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28815 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [29], Q = \soc.cpu.irq_pending [29]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18822 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [28], Q = \soc.cpu.irq_pending [28], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28823 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [28], Q = \soc.cpu.irq_pending [28]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18821 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [27], Q = \soc.cpu.irq_pending [27], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28831 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [27], Q = \soc.cpu.irq_pending [27]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18820 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [26], Q = \soc.cpu.irq_pending [26], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28839 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [26], Q = \soc.cpu.irq_pending [26]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18819 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [25], Q = \soc.cpu.irq_pending [25], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28847 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [25], Q = \soc.cpu.irq_pending [25]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18818 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [24], Q = \soc.cpu.irq_pending [24], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28855 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [24], Q = \soc.cpu.irq_pending [24]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18817 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [23], Q = \soc.cpu.irq_pending [23], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28863 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [23], Q = \soc.cpu.irq_pending [23]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18816 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [22], Q = \soc.cpu.irq_pending [22], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28871 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [22], Q = \soc.cpu.irq_pending [22]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18815 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [21], Q = \soc.cpu.irq_pending [21], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28879 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [21], Q = \soc.cpu.irq_pending [21]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18814 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [20], Q = \soc.cpu.irq_pending [20], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28887 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [20], Q = \soc.cpu.irq_pending [20]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18813 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [19], Q = \soc.cpu.irq_pending [19], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28895 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [19], Q = \soc.cpu.irq_pending [19]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18812 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [18], Q = \soc.cpu.irq_pending [18], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28903 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [18], Q = \soc.cpu.irq_pending [18]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18811 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [17], Q = \soc.cpu.irq_pending [17], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28911 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [17], Q = \soc.cpu.irq_pending [17]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18810 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [16], Q = \soc.cpu.irq_pending [16], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28919 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [16], Q = \soc.cpu.irq_pending [16]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18809 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [15], Q = \soc.cpu.irq_pending [15], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28927 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [15], Q = \soc.cpu.irq_pending [15]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18808 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [14], Q = \soc.cpu.irq_pending [14], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28935 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [14], Q = \soc.cpu.irq_pending [14]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18807 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [13], Q = \soc.cpu.irq_pending [13], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28943 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [13], Q = \soc.cpu.irq_pending [13]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18806 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [12], Q = \soc.cpu.irq_pending [12], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28951 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [12], Q = \soc.cpu.irq_pending [12]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18805 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [11], Q = \soc.cpu.irq_pending [11], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28959 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [11], Q = \soc.cpu.irq_pending [11]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18804 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [10], Q = \soc.cpu.irq_pending [10], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28967 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [10], Q = \soc.cpu.irq_pending [10]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18803 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [9], Q = \soc.cpu.irq_pending [9], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28975 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [9], Q = \soc.cpu.irq_pending [9]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18802 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [8], Q = \soc.cpu.irq_pending [8], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28983 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [8], Q = \soc.cpu.irq_pending [8]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18801 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [7], Q = \soc.cpu.irq_pending [7], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28991 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [7], Q = \soc.cpu.irq_pending [7]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18800 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [6], Q = \soc.cpu.irq_pending [6], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$28999 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [6], Q = \soc.cpu.irq_pending [6]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18799 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [5], Q = \soc.cpu.irq_pending [5], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$29007 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [5], Q = \soc.cpu.irq_pending [5]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18798 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [4], Q = \soc.cpu.irq_pending [4], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$29015 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [4], Q = \soc.cpu.irq_pending [4]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18797 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$2\next_irq_pending[31:0] [3], Q = \soc.cpu.irq_pending [3], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$29023 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$and$picorv32.v:1508$2732_Y [3], Q = \soc.cpu.irq_pending [3]).
Adding SRST signal on $auto$simplemap.cc:420:simplemap_dff$18795 ($_DFF_P_) from module top (D = $flatten\soc.\cpu.$procmux$3065.Y, Q = \soc.cpu.irq_pending [1], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:702:run$29031 ($_SDFF_PN0_) from module top (D = $flatten\soc.\cpu.$procmux$3065.Y, Q = \soc.cpu.irq_pending [1]).

8.32.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 132 unused cells and 37 unused wires.
<suppressed ~133 debug messages>

8.32.10. Rerunning OPT passes. (Removed registers in this run.)

8.32.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

8.32.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~168 debug messages>
Removed a total of 56 cells.

8.32.13. Executing OPT_DFF pass (perform DFF optimizations).

8.32.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 57 unused wires.
<suppressed ~1 debug messages>

8.32.15. Finished fast OPT passes.

8.33. Executing ICE40_OPT pass (performing simple optimizations).

8.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8378.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$8378.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8387.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$8387.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8398.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$8387.BB [23]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8403.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$8387.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8419.slice[0].carry: CO=\display.second_timer_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8422.slice[0].carry: CO=\display.refresh_timer_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8428.slice[0].carry: CO=\soc.cpu.count_cycle [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8434.slice[0].carry: CO=\soc.cpu.count_instr [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8472.slice[0].carry: CO=\soc.cpu.timer [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8475.slice[0].carry: CO=\soc.cpu.reg_sh [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8478.slice[0].carry: CO=\soc.cpu.reg_sh [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8481.slice[0].carry: CO=\soc.simpleuart.send_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8484.slice[0].carry: CO=\soc.simpleuart.recv_divcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8487.slice[0].carry: CO=\soc.simpleuart.recv_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8490.slice[0].carry: CO=\soc.simpleuart.send_bitcnt [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8493.slice[0].carry: CO=\soc.spimemio.rd_addr [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8493.slice[22].carry: CO=1'0

8.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~8 debug messages>

8.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

8.33.4. Executing OPT_DFF pass (perform DFF optimizations).

8.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 1 unused wires.
<suppressed ~4 debug messages>

8.33.6. Rerunning OPT passes. (Removed registers in this run.)

8.33.7. Running ICE40 specific optimizations.

8.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.33.10. Executing OPT_DFF pass (perform DFF optimizations).

8.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.33.12. Finished OPT passes. (There is nothing left to do.)

8.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

8.35. Executing TECHMAP pass (map to technology primitives).

8.35.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

8.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
Using template \$_DFF_N_ for cells of type $_DFF_N_.
No more expansions possible.
<suppressed ~1144 debug messages>

8.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6 debug messages>

8.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$8419.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8422.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8428.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8434.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8472.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8475.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8478.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8481.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8484.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8487.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8490.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8493.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8493.slice[22].carry ($lut).

8.38. Executing ICE40_OPT pass (performing simple optimizations).

8.38.1. Running ICE40 specific optimizations.

8.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~527 debug messages>

8.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~2760 debug messages>
Removed a total of 920 cells.

8.38.4. Executing OPT_DFF pass (perform DFF optimizations).

8.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 6845 unused wires.
<suppressed ~1 debug messages>

8.38.6. Rerunning OPT passes. (Removed registers in this run.)

8.38.7. Running ICE40 specific optimizations.

8.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

8.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

8.38.10. Executing OPT_DFF pass (perform DFF optimizations).

8.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

8.38.12. Finished OPT passes. (There is nothing left to do.)

8.39. Executing TECHMAP pass (map to technology primitives).

8.39.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

8.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

8.40. Executing ABC pass (technology mapping using ABC).

8.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 7265 gates and 8843 wires to a netlist network with 1576 inputs and 1080 outputs.

8.40.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1742.
ABC: Participating nodes from both networks       =    3732.
ABC: Participating nodes from the first network   =    1752. (  62.53 % of nodes)
ABC: Participating nodes from the second network  =    1980. (  70.66 % of nodes)
ABC: Node pairs (any polarity)                    =    1752. (  62.53 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1329. (  47.43 % of names can be moved)
ABC: Total runtime =     2.04 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

8.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2801
ABC RESULTS:        internal signals:     6187
ABC RESULTS:           input signals:     1576
ABC RESULTS:          output signals:     1080
Removing temp directory.

8.41. Executing ICE40_WRAPCARRY pass (wrap carries).

8.42. Executing TECHMAP pass (map to technology primitives).

8.42.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

8.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 216 unused cells and 4694 unused wires.

8.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3361
  1-LUT              188
  2-LUT              841
  3-LUT              845
  4-LUT             1487

Eliminating LUTs.
Number of LUTs:     3361
  1-LUT              188
  2-LUT              841
  3-LUT              845
  4-LUT             1487

Combining LUTs.
Number of LUTs:     3260
  1-LUT              167
  2-LUT              729
  3-LUT              839
  4-LUT             1525

Eliminated 0 LUTs.
Combined 101 LUTs.
<suppressed ~19932 debug messages>

8.44. Executing TECHMAP pass (map to technology primitives).

8.44.1. Executing Verilog-2005 frontend: /opt/sft/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/opt/sft/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

8.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$b1d41c251992348e752b19c12db8a58434359feb\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$d3f4c7e3f0239dbfbe248a0012ae40b9c40236fc\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111110 for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$485c535cc2fb194dc6f114ba5c93554133564a61\$lut for cells of type $lut.
Using template $paramod$dc7df87ea4bb7ad4a03ab2482fa8025e17e5c667\$lut for cells of type $lut.
Using template $paramod$2902eb8ec3ca272968b5d8a7010e48f85069ed0f\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$6a34cd5b50e324824168b4186d0b04ba5e83b039\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$2148a1805a1c3b3bf66b2f659d4ba0e8506227b2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$fd1e68d43235621014e35437b4508a97628b7e8f\$lut for cells of type $lut.
Using template $paramod$44322768708ea1617c4f8f4845eb883e6765da22\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$052ca015f1400ebf950f85d5f181f7a5865c336c\$lut for cells of type $lut.
Using template $paramod$cbfd30b70b4f0ac8dd1d3ed758215fbf49783a3b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$fd2847bd008edd03070f42355fdb14fda0191818\$lut for cells of type $lut.
Using template $paramod$cc17f69fb11947b361a9c54ee804bdae735865c7\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$1b24100b2fd4c673c0fb73caa29fa7c0e2a28808\$lut for cells of type $lut.
Using template $paramod$d119410bab96963da0139669592048db2c09198b\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$c35ad3063d5038410210ddc72c1fd5fed46413b4\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod$5b94a2723bee3981c7b2df99b2c284c32a3097be\$lut for cells of type $lut.
Using template $paramod$cd05f04889088c47a0a5abae8c2d644fd314805e\$lut for cells of type $lut.
Using template $paramod$9583ab40db57ba76ead4c869be5b61dc3f252411\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010100 for cells of type $lut.
Using template $paramod$aabc38448f9289a9f09f7f433eb20ae11e3f6ed9\$lut for cells of type $lut.
Using template $paramod$3f6b582516596b8d724aacd3bc2fee7037ba44df\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$ab2e45f7a350a5d7d54d88d8019d5256ae32568f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$e94afd183fcbde4c849d3e6c314d64883b2488d5\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$70ebb6cf5bc7d63c5c1a98ccefefa2af79e8f2a9\$lut for cells of type $lut.
Using template $paramod$fccccf8bb2add7667329c686feec7546eb9a3ae3\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$7f1d4d90e673bcbb2ff1336dbced583301ac2d11\$lut for cells of type $lut.
Using template $paramod$bc6dfbb9c5badfa11502af7a34b388438462c8f3\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$195157f0e3780d4d1885560d8e34f1523aa0cdca\$lut for cells of type $lut.
Using template $paramod$96288e699aa5aef3f78113f3d61a81ccebbd5b8c\$lut for cells of type $lut.
Using template $paramod$ec731ba0b03f9a8c2f9a148aad53e934d7e8d215\$lut for cells of type $lut.
Using template $paramod$2d73cf21e7a3b53006ebbae47ecc48e73975ec46\$lut for cells of type $lut.
Using template $paramod$7eb00dbc62aefa046649f6bb6faa1ef961d12e98\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$068476c0c710ac8dbe39ffa3fa53ad378a613e11\$lut for cells of type $lut.
Using template $paramod$6f7c21ad6bbbd9676bc178fdb8b88ada5043ba74\$lut for cells of type $lut.
Using template $paramod$d4351ff5831f17027c376f95f6a20679eeba9d81\$lut for cells of type $lut.
Using template $paramod$1a3570080b1fea9cfcb3993f03ca97789c20379c\$lut for cells of type $lut.
Using template $paramod$c1199f8981eafbdb249b1b209ba0903e3842f9dd\$lut for cells of type $lut.
Using template $paramod$7c83cdd3fab11059b2f4d686e682542bd63a212c\$lut for cells of type $lut.
Using template $paramod$ad498e625474ac4669814135092d9e5967a65c4b\$lut for cells of type $lut.
Using template $paramod$f73332bea32d1236daaf08ac28a7c6fd194f1476\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$aefabbfb9c1b4f52428d3138553c9ded9b193061\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$1cec58bfb33a7a51c359586aade8e947536c006e\$lut for cells of type $lut.
Using template $paramod$5f4be7af44af2e3bad65d97306931962e70523d8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111100 for cells of type $lut.
Using template $paramod$ef26adabe6060e01077b576cfe34e95e55a26aef\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$332fa40c56aff3007be704dee14bc36042d05721\$lut for cells of type $lut.
Using template $paramod$d5221640434239d424ca0b76f445b1d703d93d1b\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$5ab8703b1aa62946296547e85dc0a19366704a74\$lut for cells of type $lut.
Using template $paramod$e4f0672b1b304c5f823c392f5c998838e860eb67\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$c7643d93c6710d1f52fb7e7cb047a4e560bda904\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111100 for cells of type $lut.
Using template $paramod$47cc0e8b2645814a515808371fb5dfded3ecad75\$lut for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod$965f8f2fa1a796a6c51222eabb50fbd26e97d98b\$lut for cells of type $lut.
Using template $paramod$cb32992e51dcc00437a87053fcf4571f3e5aa6f1\$lut for cells of type $lut.
Using template $paramod$50d9e492b02f639fe7fe8dfb9d12a38a2e87d12c\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$b4e6c208436e83b0253664a43d8e374307855260\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$38debc9ecb856f8fdb72adb11bd5220839a653fd\$lut for cells of type $lut.
Using template $paramod$16ac7bca99c642b1568eaabd5489ccff9fdbce80\$lut for cells of type $lut.
Using template $paramod$7295da7c5b19f528a428229f2570e0a23ad372af\$lut for cells of type $lut.
Using template $paramod$52b0f43ae6cb52b5e726dd3244952f6f33bb5f19\$lut for cells of type $lut.
Using template $paramod$f0202ddf8017d4471f62a6788b01b38475d29a17\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~6006 debug messages>
Removed 0 unused cells and 7198 unused wires.

8.45. Executing AUTONAME pass.
Renamed 193090 objects in module top (100 iterations).
<suppressed ~6857 debug messages>

8.46. Executing HIERARCHY pass (managing design hierarchy).

8.46.1. Analyzing design hierarchy..
Top module:  \top

8.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

8.47. Printing statistics.

=== top ===

   Number of wires:               2101
   Number of wire bits:           9278
   Number of public wires:        2101
   Number of public wire bits:    9278
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5133
     SB_CARRY                      739
     SB_DFF                        134
     SB_DFFE                       317
     SB_DFFESR                     347
     SB_DFFESS                      62
     SB_DFFN                         4
     SB_DFFSR                      254
     SB_DFFSS                        4
     SB_IO                           4
     SB_LUT4                      3260
     SB_RAM40_4K                     4
     SB_SPRAM256KA                   4

8.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

8.49. Executing JSON backend.

Warnings: 1 unique messages, 1 total
End of script. Logfile hash: a3d87a8e9d, CPU: user 43.64s system 0.77s, MEM: 166.44 MB peak
Yosys 0.9+4081 (git sha1 261383d, clang 12.0.0-1ubuntu1 -fPIC -Os)
Time spent: 23% 31x opt_expr (13 sec), 23% 1x abc (13 sec), ...
